{"pageProps":{"toc":[{"content":"Java","slug":"java","lvl":2,"i":0},{"content":"基本","slug":"基本","lvl":2,"i":1},{"content":"変数の宣言・初期化","slug":"変数の宣言・初期化","lvl":3,"i":2},{"content":"四則演算","slug":"四則演算","lvl":3,"i":3},{"content":"条件式","slug":"条件式","lvl":3,"i":4},{"content":"配列の操作","slug":"配列の操作","lvl":3,"i":5},{"content":"宣言・初期化","slug":"宣言・初期化","lvl":4,"i":6},{"content":"ソート","slug":"ソート","lvl":4,"i":7},{"content":"直接戻り値とする","slug":"直接戻り値とする","lvl":4,"i":8},{"content":"コンソール出力","slug":"コンソール出力","lvl":3,"i":9},{"content":"関数(メソッド？)について","slug":"関数メソッドについて","lvl":3,"i":10},{"content":"デフォルト値","slug":"デフォルト値","lvl":4,"i":11},{"content":"文字列型(String)","slug":"文字列型string","lvl":3,"i":12},{"content":"キュー (Queue)","slug":"キュー-queue","lvl":3,"i":13},{"content":"便利な関数","slug":"便利な関数","lvl":3,"i":14},{"content":"max()","slug":"max","lvl":4,"i":15}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    h3: \"h3\",\n    code: \"code\",\n    pre: \"pre\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"これまでに C/C++，Python，また JavaScript などを触れてきたが，自分にとって今後 Java が必要になると予想して，Java を学習することにした．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"java\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#java\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Java\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"基本\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#基本\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"基本\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"変数の宣言初期化\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#変数の宣言初期化\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"変数の宣言・初期化\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ベースはほとんど変わらない印象である．少なくとも\", _jsx(_components.code, {\n        children: \"int\"\n      }), \"型はそのまま．\\nC++では\", _jsx(_components.code, {\n        children: \"auto\"\n      }), \"を愛用していたが，Java では見当たらない．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" x \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" y \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" z \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), \" str \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"test\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"double\"\n        }), \" dx \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0.1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"boolean\"\n        }), \" bl \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"false\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 注意！ boolじゃないんだね\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"四則演算\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#四則演算\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"四則演算\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"int\"\n      }), \"と\", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \"は足せない．\\nそのため，以下のような工夫が必要．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" x \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"boolean\"\n        }), \" b \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"true\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"b\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tx\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"条件式\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#条件式\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"条件式\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"こちらも，基本的には変わらない印象．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"しかし，空かどうかを条件にする際，\", _jsx(_components.code, {\n        children: \"==null\"\n      }), \"や\", _jsx(_components.code, {\n        children: \"!=null\"\n      }), \"が必要なようだ．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java\",\n        children: [_jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"ListNode\"\n        }), \" node\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"node \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"null\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// これはダメ\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//if (node) {\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"配列の操作\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#配列の操作\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"配列の操作\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"驚いたのが，標準的な配列（？）にあたる\", _jsx(_components.code, {\n        children: \"int[]\"\n      }), \"が\", _jsx(_components.code, {\n        children: \"length\"\n      }), \"メンバを持っていて，C++における\", _jsx(_components.code, {\n        children: \"vector<int>\"\n      }), \"と同じように扱える点である．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"おそらく，C++は C との互換性を維持するために，\", _jsx(_components.code, {\n        children: \"int[]\"\n      }), \"を残したまま\", _jsx(_components.code, {\n        children: \"vector<int>\"\n      }), \"や\", _jsx(_components.code, {\n        children: \"array<int>\"\n      }), \"のような配列クラスを準備したのでは無いかと思った．\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"宣言初期化\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#宣言初期化\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"宣言・初期化\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" v \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"10\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" v \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"new\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"ソート\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ソート\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ソート\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Arrays\"\n      }), \"で配列のソートができる．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// import java.util.Arrays;\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Arrays\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sort\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"直接戻り値とする\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#直接戻り値とする\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"直接戻り値とする\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"コンソール出力\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コンソール出力\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コンソール出力\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"C++の\", _jsx(_components.code, {\n        children: \"std::cout\"\n      }), \"と比較すると，個人的にはかなり面倒に感じた．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java\",\n        children: [_jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"System\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"out\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"println\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"関数メソッドについて\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#関数メソッドについて\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"関数(メソッド？)について\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"こちらも基本的には C++と変わらない印象．\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"デフォルト値\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#デフォルト値\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"デフォルト値\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"困ったことに，引数のデフォルト値がなさそうである．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そのため，C++や Python におけるデフォルト値のようなものを用いたい場合は，以下のようにオーバーロードを使った工夫が必要．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Foo\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"public\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"baa\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" x\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" y\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"baa\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"x\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" y\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"public\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"baa\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" x\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" y\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" z\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" x \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), \" y \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), \" z\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"文字列型string\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#文字列型string\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"文字列型(String)\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Java では\", _jsx(_components.code, {\n        children: \"String\"\n      }), \"型として文字列を扱うことができるようだ．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java\",\n        children: [_jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), \" str \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"test\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\nstr\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"length\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 文字数 -> 4\"\n        }), \"\\nstr\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"charAt\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 要素アクセス -> 't' (何故`[]`でアクセスできないんだ・・・)\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"キュー-queue\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#キュー-queue\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"キュー (Queue)\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Java では\", _jsx(_components.code, {\n        children: \"Queue\"\n      }), \"型がある．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java\",\n        children: [_jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Queue\"\n        }), _jsxs(_components.span, {\n          className: \"token generics\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"<\"\n          }), _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"int\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), \" queue \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"LinkedList\"\n        }), _jsxs(_components.span, {\n          className: \"token generics\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"<\"\n          }), _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"int\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\nqueue\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// C++ std::queue のpush()に相当\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" n1 \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" queue\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"element\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// C++ std::queueのfront()に相当\"\n        }), \"\\nqueue\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"remove\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// C++ std::queueのpop()に相当\"\n        }), \"\\n\\nqueue\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// C++ std::queue のpush()に相当\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" n \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" queue\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"poll\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// C++ std::queue のfront()とpop()を同時に行う\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"個人的には，\", _jsx(_components.code, {\n        children: \"Queue<>.poll()\"\n      }), \"が大好き．C++を使っていた時は\", _jsx(_components.code, {\n        children: \"std::queue::front()\"\n      }), \"と\", _jsx(_components.code, {\n        children: \"std::queue::pop()\"\n      }), \"の両方が必要だった処理が一発でできるのが魅力的だよね．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"便利な関数\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#便利な関数\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"便利な関数\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"max\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#max\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"max()\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"引数の内大きい方を返す．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java\",\n        children: [\"longest \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Math\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"max\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"longest\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" length\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 最大値の更新\"\n        }), \"\\n\"]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Javaの学習メモ","date":"2021-03-22T22:53:39+09:00","description":"Java初心者なので，自分メモ","tags":["java"]}},"__N_SSG":true}