{"pageProps":{"toc":[{"content":"Reactクラスへの所感","slug":"reactクラスへの所感","lvl":2,"i":0},{"content":"ReactHooksについて","slug":"reacthooksについて","lvl":2,"i":1},{"content":"変更ポイント","slug":"変更ポイント","lvl":2,"i":2},{"content":"コンポーネント定義","slug":"コンポーネント定義","lvl":3,"i":3},{"content":"propsの扱い","slug":"propsの扱い","lvl":3,"i":4},{"content":"ローカルステート","slug":"ローカルステート","lvl":3,"i":5}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    code: \"code\",\n    h3: \"h3\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"ReactのSPAを以前開発して寝かせておいた．その後再びReactを学習したところ，ReactHooksというものが推奨されていた．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そのため，今回ReactのクラスコンポーネントをHooksに変換するために備忘録を残す．少しづつ更新する．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"（細かい用語は一般と違っている可能性がございます．他のページと併せてご覧ください．）\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"reactクラスへの所感\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#reactクラスへの所感\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Reactクラスへの所感\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Reactのクラスコンポーネントは\", _jsx(_components.code, {\n        children: \"<Index />\"\n      }), \"から\", _jsx(_components.code, {\n        children: \"<App />\"\n      }), \"を呼び出し，\", _jsx(_components.code, {\n        children: \"<App />\"\n      }), \"から様々なコンポーネントにpropsという形で変数をおろしていた．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"その際に，下部クラスで必要なステートがあれば該当クラスで定義できるが，そのステートが上部クラスで必要になれば，\", _jsx(_components.code, {\n        children: \"リフトアップ\"\n      }), \"という形で，「下部クラスのステートを上部クラスでステートし，そのステートをpropsとして渡す」という形を取ることができる．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"その時の私の感想は，「複数に積み重なったクラスの下部から最上部クラスにリフトアップしてpropsでおろしてくるのは面倒」である．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"その時勉強した限りでは，Reduxが非常に便利．とあったが，難しくてよく理解できずに断念した．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そして，時間が経過してReactHooksを用いることにした．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"reacthooksについて\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#reacthooksについて\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ReactHooksについて\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Reactクラスコンポーネントに代わり，Reactの機能を用いることができる．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"また，「Reactは後方互換性を維持する」とのことだったので，Reactクラスコンポーネントですでに開発が進んでいるアプリケーションについては無理してフックにする必要はないとのこと．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"私は，クラスコンポーネントとして定義したクラスの内，下の方から順にフックに書き換えていくことにした．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"変更ポイント\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#変更ポイント\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"変更ポイント\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"コンポーネント定義\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コンポーネント定義\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コンポーネント定義\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"クラスとして定義したコンポーネントは，フックでは関数として定義する．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，\", _jsx(_components.code, {\n        children: \"constructor()\"\n      }), \"も\", _jsx(_components.code, {\n        children: \"render()\"\n      }), \"も使わない．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-jsx\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Hoge\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"extends\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token class-name\",\n          children: [\"React\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"Component\"]\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"constructor\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"props\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"super\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"props\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token spread operator\",\n          children: \"...\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"render\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n\\t\\t\\t\", _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), \"div\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token plain-text\",\n          children: \"\\n\\t\\t\\t\\thoge\\n\\t\\t\\t\"\n        }), _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"</\"\n            }), \"div\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-jsx\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Hoge\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"props\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n\\t\\t\", _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), \"div\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token plain-text\",\n          children: \"\\n\\t\\t\\thoge\\n\\t\\t\"\n        }), _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"</\"\n            }), \"div\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"propsの扱い\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#propsの扱い\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"propsの扱い\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"クラスでは\", _jsx(_components.code, {\n        children: \"this.props.\"\n      }), \"として使ったが，\", _jsx(_components.code, {\n        children: \"props.\"\n      }), \"とする．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"ローカルステート\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ローカルステート\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ローカルステート\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"フックを用いることで，ローカルのステートは簡単に表現する事ができる．これは他のコンポーネントとは共有されず，自身の中でのみ用いることができる\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-jsx\",\n        children: [_jsx(_components.span, {\n          className: \"token function\",\n          children: \"constructor\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"props\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"super\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"props\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"this\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"state\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tname\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'myname'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\temail\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'myemail'\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"this\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"setState\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"name\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'newname'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 複雑！\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-jsx\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" setName\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"useState\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'myname'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"email\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" setEmail\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"useState\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'myemail'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"setName\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'newname'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 単純になったね！\"\n        }), \"\\n\"]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"},"scope":{"title":"ReactのClassからHook変換メモ","date":"2021-03-28T00:49:12+09:00","description":"備忘録です","tags":["react","hooks","class","js","jsx"]}},"__N_SSG":true}