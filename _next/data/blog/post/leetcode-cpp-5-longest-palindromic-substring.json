{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"コード全体","slug":"コード全体","lvl":2,"i":1},{"content":"解説","slug":"解説","lvl":2,"i":2}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"string s\"\n      }), \"が与えられ、その中に存在する長さ最大の回文を見つける\", _jsx(_components.a, {\n        href: \"https://leetcode.com/problems/longest-palindromic-substring/\",\n        children: \"問題\"\n      }), \"．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"コード全体\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コード全体\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コード全体\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"string \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"longestPalindrome\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"string s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" subLeft \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" subRight \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" subSize \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"auto\"\n        }), \" update \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" left\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" nowSize \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" right \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \" left \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \" subSize \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \" nowSize \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      subLeft \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" left\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      subRight \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      subSize \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" nowSize\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"size_t center\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" center\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"length\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), \"center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"center\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"continue\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    size_t left \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    size_t right \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" center \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"while\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \" left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&&\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \"s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"length\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"break\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"--\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"update\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"left\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"size_t center\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" center\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"length\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), \"center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    size_t left \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    size_t right \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"while\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \" left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&&\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \"s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"length\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"break\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"--\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"update\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"left\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"substr\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"subLeft\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" subSize\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"解説\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#解説\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"解説\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"subLeft\"\n      }), \"は部分文字列の左端を、\", _jsx(_components.code, {\n        children: \"subRight\"\n      }), \"は右端を、\", _jsx(_components.code, {\n        children: \"subSize\"\n      }), \"はその文字数を指す。\\nこれらの変数を更新することで、最大長となる部分文字列を求める。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"string \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"longestPalindrome\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"string s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" subLeft \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" subRight \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" subSize \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"update()\"\n      }), \"は、上述した三つの変数を更新するラムダ式。\\n引数の\", _jsx(_components.code, {\n        children: \"left\"\n      }), \"と\", _jsx(_components.code, {\n        children: \"right\"\n      }), \"から、長さが現在の値より長い場合は更新する。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"auto\"\n        }), \" update \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" left\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" nowSize \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" right \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \" left \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \" subSize \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \" nowSize \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      subLeft \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" left\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      subRight \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      subSize \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" nowSize\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"s\"\n      }), \"の各要素に対し、要素を中心に回文を維持する限り左右に範囲を広げてその\", _jsx(_components.code, {\n        children: \"left\"\n      }), \"・\", _jsx(_components.code, {\n        children: \"right\"\n      }), \"を引数として\", _jsx(_components.code, {\n        children: \"update()\"\n      }), \"する。\\nまずは部分文字列が偶数長の場合を行う。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"size_t center\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" center\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"length\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), \"center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"center\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"continue\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    size_t left \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    size_t right \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" center \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"while\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \" left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&&\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \"s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"length\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"break\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"--\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"update\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"left\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"部分文字列が奇数長の場合も同様に行う。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"size_t center\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" center\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"length\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), \"center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    size_t left \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    size_t right \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" center\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"while\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \" left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&&\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \"s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"length\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"break\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      left\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"--\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      right\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"update\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"left\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" right\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"最大長の回文を返す。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"substr\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"subLeft\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" subSize\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"},"scope":{"title":"Leetcode 5 Longest Palindromic Substring","date":"2020-05-25T17:43:49+09:00","description":"長さ最大の回文となる部分文字列を探す問題。","tags":["leetcode","c++"]}},"__N_SSG":true}