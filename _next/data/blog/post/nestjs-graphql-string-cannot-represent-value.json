{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"エラー内容","slug":"エラー内容","lvl":2,"i":1},{"content":"原因","slug":"原因","lvl":2,"i":2},{"content":"解決方法","slug":"解決方法","lvl":2,"i":3},{"content":"おわりに","slug":"おわりに","lvl":2,"i":4},{"content":"参考","slug":"参考","lvl":2,"i":5}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    code: \"code\",\n    div: \"div\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"NestJS で GraphQL API を開発していて，エラーに遭遇した．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"エラー内容\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#エラー内容\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"エラー内容\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"@InputType()\"\n      }), \"を使った class 内部で，\", _jsx(_components.code, {\n        children: \"@Field(() => String)\"\n      }), \"のところに\", _jsx(_components.code, {\n        children: \"defaultValue: []\"\n      }), \"をしたところ，以下のエラーが吐き出された．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下がエラーを返すダメなコードの疑似コード．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"code-with-error\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-typescript\",\n      children: _jsxs(_components.code, {\n        className: \"language-typescript\",\n        children: [_jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"InputType\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"CreateUserInput\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Field\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token known-class-name class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n  id\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n  \", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Field\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token known-class-name class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" defaultValue\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n  xxs\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"こんなエラーが出る．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"part-of-error\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"\\n  GraphQLError \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"Object\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \": String cannot represent value: \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), \".\\n    path: \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'__schema'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'types'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"4\"\n        }), \", \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'inputFields'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'defaultValue'\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"原因\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#原因\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"原因\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"@Field\"\n      }), \"に指定した型と\", _jsx(_components.code, {\n        children: \"defaultValue\"\n      }), \"に指定した型が異なっているのが原因．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"fix-error\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-diff\",\n      children: _jsxs(_components.code, {\n        className: \"language-diff\",\n        children: [\"@InputType()\\nexport class CreateUserInput {\\n\", _jsxs(_components.span, {\n          className: \"token unchanged\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \" @Field(() => String)\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \" id: string;\\n\"\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token deleted-sign deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \" @Field(() => String, { defaultValue: [] })\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token inserted-sign inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \" @Field(() => [String], { defaultValue: [] })\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token unchanged\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \" xxs: string[];\\n\"\n          })]\n        }), \"}\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"解決方法\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#解決方法\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"解決方法\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"nestjsのgraphqlでString cannot represent value: []","date":"2021-12-19T20:41:44","description":"コピペの呪いです","tags":["nestjs","typescript","error"]}},"__N_SSG":true}