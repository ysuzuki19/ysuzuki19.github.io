{"pageProps":{"toc":[{"content":"基本文（文字列を条件にする）","slug":"基本文文字列を条件にする","lvl":2,"i":0},{"content":"おまけ（数値も条件にする）","slug":"おまけ数値も条件にする","lvl":2,"i":1}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Pythonは書きやすくて便利ですよね！ですが，Switch-case文が欲しいなと思う事があると思うんです．\\nそんな時のために，ほぼSwitch文として扱う事ができる関数（というほどのものでもないもの）を作成したので，備忘録として記します．\\nご自由にお使いください．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"基本文文字列を条件にする\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#基本文文字列を条件にする\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"基本文（文字列を条件にする）\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"from\"\n        }), \" functools \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"import\"\n        }), \" partial\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"def\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"py_switch\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"val\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" branch\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" condition\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" bound_func \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" branch\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"items\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" val \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), \" condition\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" bound_func\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"def\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"process_1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"msg\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"print\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'process1:'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" msg\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"def\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"process_2\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"print\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'process2が実行されましたよー'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), \"\\n\\n\\ncondition \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'condition_1'\"\n        }), \"\\nresult \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" py_switch\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n\\tcondition\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"condition_1\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" partial\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"process_1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'コンニチハ'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"condition_2\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" partial\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"process_2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"こんな感じ．条件となる変数を第一引数とし，第二引数はmap形式の\", _jsx(_components.code, {\n        children: \"(条件, 処理)\"\n      }), \"として与える．\\n条件は，数値型でもよい．\\nここで，\", _jsx(_components.code, {\n        children: \"partial()\"\n      }), \"にしないとJSONの引数生成時に関数の値の評価（？）がされてしまうので，注意が必要．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"partial()\"\n      }), \"にしないと・・・\\n戻り値だけを必要とする場合なら結果的な不都合はなかなか起こらないだろうが，この例のように関数中でprintしている場合は思い通りの挙動をしてくれなくなる．また，全ての処理を行ってしまうので，各処理が大きければ実行時間へ悪影響を及ぼす懸念がある．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おまけ数値も条件にする\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おまけ数値も条件にする\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おまけ（数値も条件にする）\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"上の例だけではわかりづらいかもしれないので、数値を条件式にする例およびテストコードを残す。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"まずは\", _jsx(_components.code, {\n        children: \"py_switch\"\n      }), \"の準備\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"#!/usr/local/env python3\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"from\"\n        }), \" functools \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"import\"\n        }), \" partial\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"def\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"py_switch\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"val\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" branch\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" condition\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" bound_func \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" branch\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"items\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" val \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), \" condition\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" bound_func\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"def\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"process_1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"msg\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"print\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'process1:'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" msg\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'1'\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"def\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"process_2\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"print\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'process2が実行されましたよー'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'2'\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"def\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"process_3\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"print\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'条件値は数値の1だね！'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"def\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"process_4\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"msg\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"print\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'条件値は数値の2だね！'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" msg\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"テスト１\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python\",\n        children: [\"condition \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'condition_1'\"\n        }), \"\\nresult \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" py_switch\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n\\tcondition\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"condition_1\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" partial\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"process_1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'コンニチハ'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"condition_2\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" partial\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"process_2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"             partial\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"process_3\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"             partial\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"process_4\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'コンバンハ'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"print\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'pyswitchの戻り値はresult'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"結果が以下\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"process1: コンニチハ\\npyswitchの戻り値は \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"テスト２\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python\",\n        children: [\"condition \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), \"\\nresult \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" py_switch\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n\\tcondition\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"condition_1\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" partial\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"process_1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'コンニチハ'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"condition_2\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" partial\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"process_2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"             partial\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"process_3\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"             partial\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"process_4\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'コンバンハ'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"print\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'pyswitchの戻り値は'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" result\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"結果が以下\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"条件値は数値の2だね！ コンバンハ\\npyswitchの戻り値は \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), \"\\n\"]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Pythonで大体Switchの代替になる関数","date":"2020-08-20T18:55:31+09:00","description":"関数の辞書型で対応しました","tags":["python","switch"]}},"__N_SSG":true}