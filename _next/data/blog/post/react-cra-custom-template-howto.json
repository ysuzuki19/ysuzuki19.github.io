{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"一連の手順","slug":"一連の手順","lvl":2,"i":1},{"content":"1. テンプレート化前に","slug":"1-テンプレート化前に","lvl":3,"i":2},{"content":"2. 公式のドキュメントのカスタムテンプレートの作り方を見る","slug":"2-公式のドキュメントのカスタムテンプレートの作り方を見る","lvl":3,"i":3},{"content":"3. よく分からない場合","slug":"3-よく分からない場合","lvl":3,"i":4},{"content":"4. テンプレート化","slug":"4-テンプレート化","lvl":3,"i":5},{"content":"4.1. README.md","slug":"41-readmemd","lvl":4,"i":6},{"content":"4.2. package.json","slug":"42-packagejson","lvl":4,"i":7},{"content":"4.3. template.json","slug":"43-templatejson","lvl":4,"i":8},{"content":"4.3. template","slug":"43-template","lvl":4,"i":9},{"content":"テンプレートを呼び出す","slug":"テンプレートを呼び出す","lvl":3,"i":10},{"content":"おまけ","slug":"おまけ","lvl":2,"i":11},{"content":"おわりに","slug":"おわりに","lvl":2,"i":12},{"content":"参考","slug":"参考","lvl":2,"i":13}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    code: \"code\",\n    h3: \"h3\",\n    div: \"div\",\n    pre: \"pre\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"最近私は，React では Typescript を使うことが多い．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，ネット上にあるサンプルを勢いで実行する癖があるので，頻繁に\", _jsx(_components.code, {\n        children: \"create-react-app\"\n      }), \"にはお世話になっている．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"その状況の中，\", _jsx(_components.code, {\n        children: \"--template typescript\"\n      }), \"を通常使っていた．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"しかし，一般公開するアプリやライブラリであれば\", _jsx(_components.code, {\n        children: \"testing-library\"\n      }), \"は必要だと思うが，サンプル実行や思いつきで作るアプリにそれが必要な事は少ないと思っている．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"なので，\", _jsx(_components.code, {\n        children: \"testing-library\"\n      }), \"のインストールや\", _jsx(_components.code, {\n        children: \"/src/\"\n      }), \"内の\", _jsx(_components.code, {\n        children: \"App.test.*\"\n      }), \"や\", _jsx(_components.code, {\n        children: \"App.css\"\n      }), \"，\", _jsx(_components.code, {\n        children: \"App.tsx\"\n      }), \"内のロゴが回るコンポーネントを省いたテンプレートを自分用に作った．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"同じようにカスタムテンプレートを作りたい人も多いと思うので，その知見を共有する．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"一連の手順\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#一連の手順\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"一連の手順\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"1-テンプレート化前に\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#1-テンプレート化前に\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"1. テンプレート化前に\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"まずは，\", _jsx(_components.code, {\n        children: \"create-react-app\"\n      }), \"で作成してほしい物を作る．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここまでで，\", _jsx(_components.code, {\n        children: \"package.json\"\n      }), \"も希望通りのものにしておく必要がある．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"簡単のため，ここで作成したプロジェクトを雛形と呼ぶことにする．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"2-公式のドキュメントのカスタムテンプレートの作り方を見る\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-公式のドキュメントのカスタムテンプレートの作り方を見る\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2. 公式のドキュメントのカスタムテンプレートの作り方を見る\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://create-react-app.dev/docs/custom-templates/\",\n        children: \"こちら\"\n      }), \"を見るとディレクトリ構造が以下のように記載されている．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"directory-structure\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"cra-template-\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"template-name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"/\\n  README.md \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"for \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n  template.json\\n  package.json\\n  template/\\n    README.md \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"for projects created from this template\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    gitignore\\n    public/\\n      index.html\\n    src/\\n      index.js \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"or index.tsx\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"3-よく分からない場合\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#3-よく分からない場合\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"3. よく分からない場合\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/facebook/create-react-app/tree/master/packages/cra-template-typescript\",\n        children: \"実際のテンプレート\"\n      }), \"を見ると構成がめちゃくちゃ理解できる．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"4-テンプレート化\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#4-テンプレート化\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"4. テンプレート化\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"事前に作った雛形をテンプレートのディレクトリ構造に合わせる．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ディレクトリ構造の上から順に何をするのか記す．\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"41-readmemd\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#41-readmemd\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"4.1. README.md\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これは無くても問題なさそうだが，特にこだわりがなければ雛形のものを残しておいても良いだろう．\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"42-packagejson\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#42-packagejson\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"4.2. package.json\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そのまま\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"43-templatejson\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#43-templatejson\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"4.3. template.json\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下の形式で依存関係等を記載する．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"template.json\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-json\",\n      children: _jsxs(_components.code, {\n        className: \"language-json\",\n        children: [_jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"package\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"dependencies\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\\t...\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"eslintConfig\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\\t\", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"extends\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"react-app\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"react-app/jest\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"43-template\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#43-template\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"4.3. template\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"雛形内の\", _jsx(_components.code, {\n        children: \"/src\"\n      }), \", \", _jsx(_components.code, {\n        children: \"/public\"\n      }), \", \", _jsx(_components.code, {\n        children: \"README.md\"\n      }), \"を\", _jsx(_components.code, {\n        children: \"/template\"\n      }), \"内に移動する．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，\", _jsx(_components.code, {\n        children: \".gitignore\"\n      }), \"は\", _jsx(_components.code, {\n        children: \"gitignore\"\n      }), \"という名前に変更して移動する．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"テンプレートを呼び出す\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#テンプレートを呼び出す\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"テンプレートを呼び出す\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"作成したテンプレートを利用するには，以下のようにする．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"use-cra-template\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ npx create-react-app my-app --template file:/pass/to/cra-template-\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"template-name\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おまけ\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おまけ\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おまけ\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/ysuzuki19/cra-template-react-ts-hooks-minimum\",\n        children: \"私が作ったテンプレート\"\n      }), \"は結構自分向けに便利にしているので，これからは何度も呼び出すことになりそうである．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"その都度上記の長いコマンドを実行するのは骨が折れる．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"そこで，エイリアスを設定することにした．その前に確認したのが，\", _jsx(_components.code, {\n        children: \"npx create-react-app --template cra-template-<template-name> my-app\"\n      }), \"の形式でもテンプレートが実行できるという点である(これが出来なければ少し面倒であった)．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"エイリアスとして，以下を\", _jsx(_components.code, {\n        children: \"~/.bash_aliases\"\n      }), \"に記載した(特にこだわりがなければ\", _jsx(_components.code, {\n        children: \"~/.bashrc\"\n      }), \"でもよい)．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \".bash_aliases\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"alias\"\n        }), \" create-my-react-app\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'npx create-react-app --template file:/pass/to/cra-template-react-ts-hooks-minimum'\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"これで，\", _jsx(_components.code, {\n        children: \"create-my-react-app my-app\"\n      }), \"でテンプレートを作成することができるようになった．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"エイリアスも含め，これによりサンプル実行が加速しそうだ．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"https://create-react-app.dev/docs/custom-templates/\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://github.com/facebook/create-react-app/tree/master/packages/cra-template-typescript\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"create-react-appのカスタムテンプレートの作り方","date":"2021-06-29T22:39:56","description":"自分が使うミニマムなテンプレートを作りました．","tags":["react","cra","template"]}},"__N_SSG":true}