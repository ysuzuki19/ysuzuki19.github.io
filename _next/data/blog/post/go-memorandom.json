{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"そもそも","slug":"そもそも","lvl":2,"i":1},{"content":"三項演算子がない","slug":"三項演算子がない","lvl":3,"i":2},{"content":"declared but not used がデフォルト","slug":"declared-but-not-used-がデフォルト","lvl":3,"i":3},{"content":"クラスがない","slug":"クラスがない","lvl":3,"i":4},{"content":"命名規則の強制","slug":"命名規則の強制","lvl":3,"i":5},{"content":"range-loop 便利","slug":"range-loop-便利","lvl":3,"i":6},{"content":"hashset がない","slug":"hashset-がない","lvl":3,"i":7},{"content":"queue がない","slug":"queue-がない","lvl":3,"i":8},{"content":"bitset 型がない","slug":"bitset-型がない","lvl":3,"i":9},{"content":"自動で複数の戻り値を tie()してくれる","slug":"自動で複数の戻り値を-tieしてくれる","lvl":3,"i":10},{"content":"ラムダ式がない","slug":"ラムダ式がない","lvl":3,"i":11},{"content":"カスタムソートが冗長","slug":"カスタムソートが冗長","lvl":3,"i":12},{"content":"三項演算子がない","slug":"三項演算子がない-1","lvl":3,"i":13},{"content":"BFS が非常に冗長","slug":"bfs-が非常に冗長","lvl":3,"i":14},{"content":"暗黙的に true/false を選んでくれない","slug":"暗黙的に-truefalse-を選んでくれない","lvl":3,"i":15},{"content":"参照渡し（？）は呼び出し側で明記","slug":"参照渡しは呼び出し側で明記","lvl":3,"i":16},{"content":"アロー演算子がない","slug":"アロー演算子がない","lvl":3,"i":17},{"content":"char 型がない","slug":"char-型がない","lvl":3,"i":18},{"content":"各種文法","slug":"各種文法","lvl":2,"i":19},{"content":"Array 初期化","slug":"array-初期化","lvl":3,"i":20},{"content":"配列のサイズ","slug":"配列のサイズ","lvl":3,"i":21},{"content":"配列のマージ","slug":"配列のマージ","lvl":3,"i":22},{"content":"文字型とは？","slug":"文字型とは","lvl":3,"i":23},{"content":"空の map をつくる","slug":"空の-map-をつくる","lvl":3,"i":24},{"content":"ポインタつくる","slug":"ポインタつくる","lvl":3,"i":25},{"content":"構造体に自身のポインタを格納","slug":"構造体に自身のポインタを格納","lvl":3,"i":26},{"content":"標準型","slug":"標準型","lvl":2,"i":27},{"content":"標準関数","slug":"標準関数","lvl":2,"i":28},{"content":"ソート","slug":"ソート","lvl":3,"i":29},{"content":"チップス","slug":"チップス","lvl":2,"i":30},{"content":"無理矢理ディープコピー","slug":"無理矢理ディープコピー","lvl":3,"i":31},{"content":"swap","slug":"swap","lvl":3,"i":32},{"content":"ヌルチェック","slug":"ヌルチェック","lvl":3,"i":33},{"content":"hashset の代用","slug":"hashset-の代用","lvl":3,"i":34},{"content":"queue の代用","slug":"queue-の代用","lvl":3,"i":35},{"content":"キャスト","slug":"キャスト","lvl":3,"i":36},{"content":"小数点以下切り捨て","slug":"小数点以下切り捨て","lvl":3,"i":37},{"content":"スライス初期化","slug":"スライス初期化","lvl":3,"i":38},{"content":"スライス返す","slug":"スライス返す","lvl":3,"i":39},{"content":"自作便利関数","slug":"自作便利関数","lvl":2,"i":40},{"content":"abs_of()","slug":"abs_of","lvl":3,"i":41},{"content":"sum_of(nums []int) int","slug":"sum_ofnums-int-int","lvl":3,"i":42},{"content":"bitmask(uint)uint","slug":"bitmaskuintuint","lvl":3,"i":43},{"content":"checkbit(uint, uint) bool","slug":"checkbituint-uint-bool","lvl":3,"i":44},{"content":"所感","slug":"所感","lvl":2,"i":45},{"content":"参考","slug":"参考","lvl":2,"i":46}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    h3: \"h3\",\n    code: \"code\",\n    div: \"div\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そろそろ Golang へ入門したいと思い，LeetCode を通して Golang を触りの部分ですが，はじめてみました．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これまでは LeetCode は C++で解いていたため，C++との差に対して過度に反応しています．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"同じく C++を触っていて，Golang を始める方にとっては読み物としてお役に立つかもしれません．よかったら作業の脇に置いてみてください．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"そもそも\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#そもそも\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"そもそも\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"三項演算子がない\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#三項演算子がない\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"三項演算子がない\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"if-else で対応\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"declared-but-not-used-がデフォルト\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#declared-but-not-used-がデフォルト\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"declared but not used がデフォルト\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"変数を使っていないと怒ってくれる．使わない戻り値は\", _jsx(_components.code, {\n        children: \"_\"\n      }), \"対応．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"クラスがない\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#クラスがない\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"クラスがない\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"struct\"\n      }), \" とメソッドで対応．（個人的に，クラスをなくしたのは英断だと思う）\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"自分で簡単なライブラリを作る時は，横着して \", _jsx(_components.code, {\n        children: \"class\"\n      }), \" 内に実装を書いてしまうので，それを強制的に回避させられているので，今までの横着さを反省した．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"命名規則の強制\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#命名規則の強制\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"命名規則の強制\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"struct\"\n      }), \" にメソッドを追加する際，大文字スタートであればパブリック，小文字スタートであればプライベートのように，命名規則で扱いが変わる．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"range-loop-便利\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#range-loop-便利\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"range-loop 便利\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"C++とは違い，インデックスとイテレータを同時に取ることができる\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"range-loop\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" v \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"range\"\n        }), \" nums \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//TODO: 要らない方は_で対応\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"hashset-がない\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#hashset-がない\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"hashset がない\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"map\"\n      }), \" で対応\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"queue-がない\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#queue-がない\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"queue がない\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"list\"\n      }), \" で対応\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"bitset-型がない\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#bitset-型がない\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"bitset 型がない\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"C++の \", _jsx(_components.code, {\n        children: \"bitset\"\n      }), \" よくわかってなかったので，助かった．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"uint\"\n      }), \" で対応\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"自動で複数の戻り値を-tieしてくれる\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#自動で複数の戻り値を-tieしてくれる\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"自動で複数の戻り値を tie()してくれる\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"C++で複数の戻り値を受ける場合，関数の戻り値を \", _jsx(_components.code, {\n        children: \"std::tuple<T1,T2>()\"\n      }), \"としつつ，\", _jsx(_components.code, {\n        children: \"std::tie()\"\n      }), \"をする必要があるが，Go では自動で受け取ってくれる．必要ない値を受け取らなくてはならない時，\", _jsx(_components.code, {\n        children: \"_\"\n      }), \"で対応．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"error 型が帰ってくるのが，競プロなどでは不要だが，真面目な開発などでは便利そう（やったこと無いが）．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"ラムダ式がない\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ラムダ式がない\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ラムダ式がない\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ラムダ式とか関係なく関数の中に関数を書くことができる\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"inner_func\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"hoge\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tfuga \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tfmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Println\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"fuga\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n    fmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Println\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"hoge\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"fuga\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"var\"\n        }), \" recurser \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"T1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" T2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" T\\n    recurser \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"v1 T1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" v2 T2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"recurser\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"v1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" v2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"カスタムソートが冗長\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#カスタムソートが冗長\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"カスタムソートが冗長\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"例えば，降順にするカスタムソートを作る場合，\", _jsx(_components.code, {\n        children: \"byLess\"\n      }), \" などといった名称で構造体を作り，そこに \", _jsx(_components.code, {\n        children: \"Len()\"\n      }), \"，\", _jsx(_components.code, {\n        children: \"Swap(i, j int)\"\n      }), \"，\", _jsx(_components.code, {\n        children: \"Less(i, j int)\"\n      }), \"のような関数を作り，\", _jsx(_components.code, {\n        children: \"sort.Sort(byLess(nums))\"\n      }), \"のように呼び出す．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"C++であれば，\", _jsx(_components.code, {\n        children: \"sort(nums.begin(), nums.end(), [](int a, int b) {})\"\n      }), \"のように比較方法を指定することができ，数行で簡潔に書くことができるのに対し，冗長に感じた．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"しかし，簡単な構造体に対するソートが冗長であるのに対して，複雑な構造体に対して複数のソートパターンを準備しておきたい開発では，こちらのほうが優位であるように感じる．\", _jsx(_components.code, {\n        children: \"byLess\"\n      }), \" や \", _jsx(_components.code, {\n        children: \"byFrequency\"\n      }), \" など，ひと目でわかりやすいソートを開発できそう．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"抽象化という観点ではこちらのほうが良く，呼び出す行では簡潔になる印象．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"三項演算子がない-1\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#三項演算子がない-1\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"三項演算子がない\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"悲しい．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"が，複数人開発では助かりそう．（ネストされた三項演算子は苦手）\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"bfs-が非常に冗長\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#bfs-が非常に冗長\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"BFS が非常に冗長\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"queue\"\n      }), \" が無いのはかなりよいことだと思う一方で，\", _jsx(_components.code, {\n        children: \"list\"\n      }), \" が \", _jsx(_components.code, {\n        children: \"interface{}\"\n      }), \"型になっており，BFS の探索箇所を \", _jsx(_components.code, {\n        children: \"list\"\n      }), \" で管理しようとする\", _jsx(_components.code, {\n        children: \".(Node)\"\n      }), \"など付ける必要があるようで，かなり複雑になって悲しい．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"実際，Golang に慣れるために LeetCode を使わせてもらったが，木の探索系は C++に逃げたりもした．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"暗黙的に-truefalse-を選んでくれない\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#暗黙的に-truefalse-を選んでくれない\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"暗黙的に true/false を選んでくれない\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"C++では暗黙的に true/false にしてくれていたところを Go では明示的にする必要がある．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"動作をある程度把握していると文字数的にも見た目的にも簡潔になるため，好んで使っているのだが，それによって謎のバグが生じる可能性を考えると，一概に嫌なことではないのかもしれない．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"だがやはり，\", _jsx(_components.code, {\n        children: \"nullptr\"\n      }), \" や \", _jsx(_components.code, {\n        children: \"int\"\n      }), \" 型の 0 を false にしてくれないこと．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"参照渡しは呼び出し側で明記\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参照渡しは呼び出し側で明記\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参照渡し（？）は呼び出し側で明記\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"C++であれば，関数の引数に&を付けると参照渡しになってくれるのに対し，Go では呼び出しの際に引数に&を付けるので，知らない間に変数の値が変わっていることがない（かも）．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"アロー演算子がない\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#アロー演算子がない\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"アロー演算子がない\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"記述が簡潔になる一方で，変数かポインタかを意識せずにメソッド等にアクセスできちゃう．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"char-型がない\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#char-型がない\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"char 型がない\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"代わりに \", _jsx(_components.code, {\n        children: \"byte\"\n      }), \" 型と \", _jsx(_components.code, {\n        children: \"rune\"\n      }), \" 型を使う．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"各種文法\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#各種文法\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"各種文法\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"array-初期化\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#array-初期化\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Array 初期化\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"nums \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"T\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" n1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" n2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" n3\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\nstrs \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"var\"\n        }), \" strs \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"配列のサイズ\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#配列のサイズ\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"配列のサイズ\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"size_of_array\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token function\",\n          children: \"len\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"nums\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"配列のマージ\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#配列のマージ\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"配列のマージ\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"append()\"\n      }), \"で第二引数をスプレッドしちゃう．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"letters \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"append\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"letters\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" subletters\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"...\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"文字型とは\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#文字型とは\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"文字型とは？\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"uint8\"\n      }), \" のエイリアスらしい．\", _jsx(_components.code, {\n        children: \"int\"\n      }), \" 型と同様，計算可能．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"ascii-calc\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"str\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'0'\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"空の-map-をつくる\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#空の-map-をつくる\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"空の map をつくる\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"create_map\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"mp \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"make\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"map\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"KeyT\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"ValT\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"ポインタつくる\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ポインタつくる\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ポインタつくる\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"struct\"\n      }), \" からオブジェクト（？）を作る時に，右辺に&を付けるとポインタになってくれる．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ちなみに，ポインタを受け取る関数にポインタを渡す時も同様，&を付けるとよい．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"構造体に自身のポインタを格納\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#構造体に自身のポインタを格納\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"構造体に自身のポインタを格納\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"木や双方向リストを実装する時には大抵，\", _jsx(_components.code, {\n        children: \"TreeNode*\"\n      }), \"とか \", _jsx(_components.code, {\n        children: \"Node*\"\n      }), \"とか作ると思うけど，そんな時は以下のようにするとよい．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"nested_struct\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"type\"\n        }), \" Node \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tVal \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), \"\\n\\tPrev \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"Node\\n\\tNext \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"Node\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// こんなふうにすると使いやすい\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"NewNode\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"val \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" prev\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" next\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"Node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"Node \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tretunr \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"Node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"val\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" prev\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" next\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\nnode \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"NewNode\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" node1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" node2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\nnode \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"NewNode\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"標準型\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#標準型\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"標準型\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"map\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 初期化\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" keyval \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"map\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"keyType\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"valType \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\tkey1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" val1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\tkey2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" val2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\tkey3\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" val3\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"delete\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"keyval\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" key1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 削除\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"_\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" ok \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" m\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"key2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" ok \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// found\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"else\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// not found\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"標準関数\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#標準関数\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"標準関数\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"ソート\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ソート\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ソート\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"sort\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"# sort\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Types\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"arr\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"の書式\\nsort\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Ints\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"nums\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"チップス\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#チップス\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"チップス\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"無理矢理ディープコピー\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#無理矢理ディープコピー\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"無理矢理ディープコピー\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"newletters \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"make\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"len\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"letters\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"copy\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"newletters\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" letters\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"swap\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#swap\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"swap\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"swap\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Val\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Next\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Val \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Next\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Val\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Val\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"ヌルチェック\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ヌルチェック\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ヌルチェック\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"check_null\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" node \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"hashset-の代用\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#hashset-の代用\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"hashset の代用\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"alt_hashset\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"st \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"make\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"map\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"bool\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// insert\"\n        }), \"\\nst\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"true\"\n        }), _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// erase\"\n        }), \"\\nst\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"false\"\n        }), _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// contains\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" st\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"true\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// found\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"else\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// not found\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"queue-の代用\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#queue-の代用\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"queue の代用\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"alt_queue\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"l \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" list\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"New\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"_\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" num \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"range\"\n        }), \" nums \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"PushBack\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"num\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" la\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Len\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&&\"\n        }), \" lb\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Len\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tlfront \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" l\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Front\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\tnum \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" lfront\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int32\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// interface{}型であることに注意\"\n        }), \"\\n\\tfmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Println\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"num\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\tl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Remove\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"lfront\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"キャスト\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#キャスト\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"キャスト\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"cast\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"num \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"fnum\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// float->intは切り捨て\"\n        }), \"\\nfnum \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"float64\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"num\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\nstr \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'0'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// \\\"1\\\"になる\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"小数点以下切り捨て\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#小数点以下切り捨て\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"小数点以下切り捨て\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"cut\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"fnum \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" math\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Floor\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"fnum\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"スライス初期化\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#スライス初期化\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"スライス初期化\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"alt_vector\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"nums \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"make\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" num_size\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" capacity\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"スライス返す\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#スライス返す\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"スライス返す\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"return_slice\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"自作便利関数\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#自作便利関数\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"自作便利関数\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"abs_of\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#abs_of\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"abs_of()\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"abs\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"abs_of\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"num \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" num\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" num\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"else\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \"num\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"sum_ofnums-int-int\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#sum_ofnums-int-int\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"sum_of(nums []int) int\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"sum_of()\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sum_of\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"nums \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tsum_num \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"_\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" num \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"range\"\n        }), \" nums \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tsum_num \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+=\"\n        }), \" num\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" sum_num\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sum_of\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"num1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" num2 \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" num1 \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), \" num2\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"bitmaskuintuint\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#bitmaskuintuint\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"bitmask(uint)uint\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"C++でも普通に使うような，ビットシフト演算\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"bitmask\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"bitmask\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"digit \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"uint\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"uint\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" digit\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"checkbituint-uint-bool\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#checkbituint-uint-bool\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"checkbit(uint, uint) bool\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"checkbit\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"checkbit\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"num \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"uint\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" digit \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"uint\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"bool\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" num \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"bitmask\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"digit\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"true\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"else\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"false\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"所感\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#所感\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"所感\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"C++の \", _jsx(_components.code, {\n        children: \"std\"\n      }), \" ライブラリに含まれていて，重複しているもの(\", _jsx(_components.code, {\n        children: \"stack\"\n      }), \",\", _jsx(_components.code, {\n        children: \"queue\"\n      }), \",\", _jsx(_components.code, {\n        children: \"list\"\n      }), \")が軒並み削られており，各人が利用する標準ライブラリが相違することは少なそうな印象．しかし，「C++のこれがない」となった時に，その中身を全く知らない場合は，代替となるものを見極めるのが難しそうな印象．\\nその一方で，http などの，\", _jsx(_components.code, {\n        children: \"boost\"\n      }), \" などのサードパーティライブラリに含まれているような処理が standard library になっているという面もあった．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，C++の \", _jsx(_components.code, {\n        children: \"std\"\n      }), \" を使えば簡潔に書けるものが，結構長いコードになる面も感じていて，競技プログラミングには向かないのかもしれない．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"しかし，エラーの扱い方が結構決まっており，アプリ開発などの用途においては非常に使いやすそう．さらに，\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"なので，LeetCode の木探索や AtCoder をやる時は C++を使い，アプリ開発などでは Golang を使う王と思った．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"https://stackoverflow.com/questions/27055626/concisely-deep-copy-a-slice\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://pkg.go.dev/builtin#copy\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://blog.golang.org/slices\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://yourbasic.org/golang/last-item-in-slice/\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://pkg.go.dev/sort#Ints\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://stackoverflow.com/questions/38571354/best-way-to-swap-variable-values-in-go/38571485\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://stackoverflow.com/questions/34018908/golang-why-dont-we-have-a-set-datastructure\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://pkg.go.dev/container/list#section-sourcefiles\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://cs.opensource.google/go/go/+/refs/tags/go1.16.7:src/container/list/list.go\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://blog.golang.org/maps\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://groups.google.com/g/golang-nuts/c/40vBKgflGjI\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://play.golang.org/p/i6-e4I7vih\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"go勉強メモ","date":"2021-08-18T21:57:57","description":"C++脳の人向けに作られています","tags":["go","tutorial"]}},"__N_SSG":true}