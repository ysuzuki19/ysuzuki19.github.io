{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"方法","slug":"方法","lvl":2,"i":1},{"content":"方法(ダメな場合)","slug":"方法ダメな場合","lvl":2,"i":2},{"content":"バグフィックス","slug":"バグフィックス","lvl":2,"i":3},{"content":"git コマンド","slug":"git-コマンド","lvl":3,"i":4},{"content":"workflow #1","slug":"workflow-#1","lvl":3,"i":5},{"content":"workflow #2","slug":"workflow-#2","lvl":3,"i":6},{"content":"ちなみに","slug":"ちなみに","lvl":3,"i":7},{"content":"おわりに","slug":"おわりに","lvl":2,"i":8},{"content":"参考","slug":"参考","lvl":2,"i":9}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    code: \"code\",\n    div: \"div\",\n    pre: \"pre\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"今まで，気になりつつもずっと扱っていなかった Github Actions をついに触ることが出来た．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"触れていなかった理由としては，「一人で開発していたため，ツールによる自動化よりも学習・設定のコストが高く，コマンドなどの簡易的な自動化で満足していた」という点が大きい．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"しかし，複数人開発を進めていく上では，やはり必要になっていくだろうと考え，ついにやってみた．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"方法\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#方法\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"方法\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"firebase\"\n      }), \"コマンドによる自動設定に頼ろう．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"init_workflow\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ firebase init hosting:github\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# プロジェクトを選択\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# リポジトリを入力 (ユーザ名/リポジトリ名)\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"途中，Firebase の認証や Github の認証が入ると思うが，ここは承認しないと次に進めない．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"一応，リポジトリの Settings（ユーザの Settings ではない点に注意）に移動し，左のバーから\", _jsx(_components.code, {\n        children: \"Secrets\"\n      }), \"をクリックし，\", _jsx(_components.code, {\n        children: \"FIREBASE_...\"\n      }), \"の環境変数が配置されていることを確認する．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"方法ダメな場合\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#方法ダメな場合\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"方法(ダメな場合)\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"私の場合，上記のコマンドで，謎のエラーが出て，どうもうまく行かなかったので，以下のコマンドで対応し，無事自動生成された．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"init_workflow_2\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ firebase init\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# Hosting (Github)みたいな方を選択\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# プロジェクトを選択\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# リポジトリを入力\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# urlのリライト Yes\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# デプロイするディレクトリ build\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"もう一度，\", _jsx(_components.code, {\n        children: \"repository > Settings > Secrets\"\n      }), \"を確認し，環境変数がセットされているかを確認する．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"./.github/workflows/\"\n      }), \"にファイルが生成されていることを確認する．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"push_and_deploy\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), \" --all\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" commit -m \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"setup github actions\\\"\"\n        }), \"\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" push\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"バグフィックス\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#バグフィックス\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"バグフィックス\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"git-コマンド\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#git-コマンド\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"git コマンド\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"bug_git\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"remote rejected\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" main -\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" main \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"refusing to allow a Personal Access Token to create or update workflow \", _jsxs(_components.span, {\n          className: \"token variable\",\n          children: [_jsx(_components.span, {\n            className: \"token variable\",\n            children: \"`\"\n          }), \".github/workflows/firebase-hosting-merge.yml\", _jsx(_components.span, {\n            className: \"token variable\",\n            children: \"`\"\n          })]\n        }), \" without \", _jsxs(_components.span, {\n          className: \"token variable\",\n          children: [_jsx(_components.span, {\n            className: \"token variable\",\n            children: \"`\"\n          }), \"workflow\", _jsx(_components.span, {\n            className: \"token variable\",\n            children: \"`\"\n          })]\n        }), \" scope\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"git コマンドに workflow の権限が与えられていない．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Github のアクセス方法の改定から，トークンによるアクセスを設定してあると思うが，それを再設定する必要がある．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Github の Settings からトークン生成（再生成ではない点に注意）画面に行き，ここでは workflow をチェックし，トークンを生成する．そして，生成されたトークンを，Workflow をプッシュするための Cli に設定する．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"workflow-1\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#workflow-1\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"workflow #1\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"bug_workflow\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"firebase github Specified \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"\\\\\"\n        }), \"\\\"public\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"\\\\\"\n        }), \"\\\" directory \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"\\\\\"\n        }), \"\\\"build\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"\\\\\"\n        }), \"\\\" does not exist, can't deploy hosting to site\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"./build/\"\n      }), \"が無いのが原因．普段 Deploy する際はローカルで\", _jsx(_components.code, {\n        children: \"npm run build\"\n      }), \"し，\", _jsx(_components.code, {\n        children: \"./build\"\n      }), \"を\", _jsx(_components.code, {\n        children: \"firebase deploy\"\n      }), \"でデプロイする．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"しかし，\", _jsx(_components.code, {\n        children: \"./build/\"\n      }), \"は当然\", _jsx(_components.code, {\n        children: \".gitignore\"\n      }), \"に入れており，リモートには存在しない．そこで，workflow にビルドコマンドを入れる必要がある．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \".github/workflows/\"\n      }), \"にある，firebase により自動生成された\", _jsx(_components.code, {\n        children: \".yml\"\n      }), \"２つを修正する必要がある．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"firebase-hosting-merge.yml\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-yml\",\n      children: _jsxs(_components.code, {\n        className: \"language-yml\",\n        children: [_jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Deploy to Firebase Hosting on merge\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"...\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"steps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" actions/checkout@v2\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" npm ci \", _jsx(_components.span, {\n          className: \"token important\",\n          children: \"&&\"\n        }), \" npm run build\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" FirebaseExtended/action\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"hosting\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"deploy@v0\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"with\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"...\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"firebase-hosting-pull-request.yml\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-yml\",\n      children: _jsxs(_components.code, {\n        className: \"language-yml\",\n        children: [_jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Deploy to Firebase Hosting on PR\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"...\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"steps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" actions/checkout@v2\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" npm ci \", _jsx(_components.span, {\n          className: \"token important\",\n          children: \"&&\"\n        }), \" npm run build\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" FirebaseExtended/action\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"hosting\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"deploy@v0\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"with\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"...\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"workflow-2\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#workflow-2\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"workflow #2\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Actions タブを見ると，エラー終了しており，エラータブを開くと以下のようなエラーがあった．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"bug_workflow\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"Run \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), \" ci \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&&\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), \" run build\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), \" ERR\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!\"\n        }), \" fsevents not accessible from jest-haste-map\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"jest-haste-map\"\n      }), \"を明示的にインストールすることが出来た．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"command_for_fix\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), \" i jest-haste-map\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"この事から，内部的にインストールされたパッケージが古くて使えなかったのではないかと原因を予想した（解明はしていない）．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"ちなみに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ちなみに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ちなみに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"npm ci\"\n      }), \"コマンドは\", _jsx(_components.code, {\n        children: \"package-lock.json\"\n      }), \"を必要とするので，プッシュする．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"設定した結果のレポジトリは\", _jsx(_components.a, {\n        href: \"https://github.com/ysuzuki19/react-firebase-cicd\",\n        children: \"こちら\"\n      }), \"．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"自動デプロイだけでなく，プルリクのプレビューを表示してくれるのが，非常に便利．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"今後は，様々な自動化を駆使して，開発を効率化していきたい．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"https://firebase.google.com/docs/hosting/github-integration\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://github.com/marketplace/actions/deploy-to-firebase-hosting\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"},"scope":{"title":"Github ActionsでFirebase Hostingへ自動デプロイ","date":"2021-09-18T01:37:26","description":"チーム開発で便利そう．CI/CDへの第一歩","tags":["firebase","github","workflow","automation","cicd"]}},"__N_SSG":true}