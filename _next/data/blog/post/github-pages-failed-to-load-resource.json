{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"エラー状況","slug":"エラー状況","lvl":2,"i":1},{"content":"エラー詳細","slug":"エラー詳細","lvl":2,"i":2},{"content":"解消方法","slug":"解消方法","lvl":2,"i":3},{"content":"Next.js ではどうすれば？","slug":"nextjs-ではどうすれば","lvl":2,"i":4},{"content":"おわりに","slug":"おわりに","lvl":2,"i":5},{"content":"参考","slug":"参考","lvl":2,"i":6}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"私は，Github Pages でブログをホスティングしている．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これまでは HUGO で SSG していて，サードパーティのテーマを使っていたためブログの記事部分しか管理していなかった．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"しかし，より多くの範囲を把握・調整したかったため，Next.js に切り替え，ブログページ全体を自分で管理できるようにしてみた(2021/05/29 現在)．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"エラー状況\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#エラー状況\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"エラー状況\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"まず前提として，以下では問題なく動作している状況であった．\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"next dev\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"npx serve\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"firebase hosting (ステージングのような使い方をした)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"エラー詳細\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#エラー詳細\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"エラー詳細\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"原因が全く検討がつかなかったため，取り敢えずブラウザのログを見ると，以下のようなエラーが大量発生していた．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"Failed to load resource: the server responded with a status of 404 () despite of existance\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"解消方法\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#解消方法\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"解消方法\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Github pages のルートディレクトリに空の\", _jsx(_components.code, {\n        children: \".nojekyll\"\n      }), \"というファイルを配置する．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"nextjs-ではどうすれば\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#nextjs-ではどうすれば\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Next.js ではどうすれば？\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Next.js を使っていて，ビルドする時，\", _jsx(_components.code, {\n        children: \"/public\"\n      }), \"直下のファイルがビルド後のディレクトリのルートに展開されるので，\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"/public/.nojekyll\"\n      }), \"というパスで空のファイルを作るとよい．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"https://github.com/koenoe/cocoen/issues/51\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://stackoverflow.com/questions/43481269/github-pages-404-on-node-modules-folder/43487798#43487798\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Github Pagesでロードが失敗する問題の解消方法","date":"2021-05-29T22:04:47","description":"他のホスティングサービスでは大丈夫なのに・・・","tags":["github-pages","nextjs","error"]}},"__N_SSG":true}