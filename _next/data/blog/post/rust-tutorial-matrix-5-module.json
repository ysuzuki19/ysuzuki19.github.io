{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"入門コース目次","slug":"入門コース目次","lvl":2,"i":1},{"content":"このページで作るもの","slug":"このページで作るもの","lvl":2,"i":2},{"content":"module について","slug":"module-について","lvl":2,"i":3},{"content":"コード全体 & 解説","slug":"コード全体--解説","lvl":2,"i":4},{"content":"おわりに","slug":"おわりに","lvl":2,"i":5},{"content":"参考","slug":"参考","lvl":2,"i":6}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    div: \"div\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rust の勉強を目的とし，Matrix クラスを作る．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"それを通して得た知見を残す．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"コード全体は\", _jsx(_components.a, {\n        href: \"https://github.com/ysuzuki19/rust-examples/tree/main/matrix\",\n        children: \"こちら\"\n      }), \"．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"入門コース目次\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#入門コース目次\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"入門コース目次\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-tutorial-matrix-0-overview\",\n          children: \"入門 0 概要\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-tutorial-matrix-1-struct-method\",\n          children: \"入門 1 Struct とメソッド\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-tutorial-matrix-2-unit-test\",\n          children: \"入門 2 Unit Test\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-tutorial-matrix-3-operator-overloading-index\",\n          children: \"入門 3 演算子オーバーロードによるインデックスアクセス\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-tutorial-matrix-4-macro\",\n          children: \"入門 4 インスタンス生成用の自作マクロ\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"入門 5 module\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-tutorial-matrix-6-use-module\",\n          children: \"入門 6 自作 Module を利用する\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"このページで作るもの\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#このページで作るもの\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"このページで作るもの\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"自分で作ったクラスを module にまとめる．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"module-について\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#module-について\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"module について\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rust では，コードのまとまりを Module として管理する．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ディレクトリ内のファイルを読み込むために，\", _jsx(_components.code, {\n        children: \"mod.rs\"\n      }), \"に設定を書く．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"コード全体--解説\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コード全体--解説\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コード全体 & 解説\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"mod\"\n      }), \"によってファイルをモジュールで利用できるようにする．同一ディレクトリに配置されていても記載されていないソースファイルは利用できない．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，\", _jsx(_components.code, {\n        children: \"pub mod\"\n      }), \"とすることで，そのファイルや Module をそのまま外部から利用できる．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"module そのものをパブリックにしたくない場合は，\", _jsx(_components.code, {\n        children: \"mod\"\n      }), \"とは別で\", _jsx(_components.code, {\n        children: \"pub use ...\"\n      }), \"とするとよい．\\nこれは，利用時のパスをキレイにすることが出来る．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"今回は，\", _jsx(_components.code, {\n        children: \"pub mod matrix\"\n      }), \"としてしまうと，\", _jsx(_components.code, {\n        children: \"use matrix::matrix::Matrix\"\n      }), \"としなければならなく，冗長になってしまうので，\", _jsx(_components.code, {\n        children: \"pub use matrix::Matrix\"\n      }), \"にした．\", _jsx(_components.code, {\n        children: \"pub use matrix::*;\"\n      }), \"にしても同じ目的が満たせる．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/matrix/mod.rs\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mod\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token module-declaration namespace\",\n          children: \"macros\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mod\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token module-declaration namespace\",\n          children: \"matrix\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mod\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token module-declaration namespace\",\n          children: \"matrix_tests\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mod\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token module-declaration namespace\",\n          children: \"index\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mod\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token module-declaration namespace\",\n          children: \"index_mut\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"use\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"matrix\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Matrix\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"コードを Module としてまとめられるのは非常に便利ですね！\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"},"scope":{"title":"Rust入門 Matrixクラス 5 module","date":"2022-09-24T15:14:00","description":"MatrixクラスによるRust勉強，moduleについて","tags":["rust","tutorial","module"]}},"__N_SSG":true}