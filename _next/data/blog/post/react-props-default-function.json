{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"元のコード","slug":"元のコード","lvl":2,"i":1},{"content":"方法","slug":"方法","lvl":2,"i":2},{"content":"おわりに","slug":"おわりに","lvl":2,"i":3},{"content":"参考","slug":"参考","lvl":2,"i":4}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    code: \"code\",\n    div: \"div\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"React (+TypeScript)を使っていて，Props にデフォルト値を持たせたいことがあると思う．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"そんな時の例を\", _jsx(_components.a, {\n        href: \"/post/react-typescript-default-value\",\n        children: \"以前\"\n      }), \"紹介した．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"今回，それの発展（？）で，関数に対するデフォルト値について記す．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"元のコード\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#元のコード\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"元のコード\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"NameView\"\n      }), \"というコンポーネントに与えている\", _jsx(_components.code, {\n        children: \"handleClick()\"\n      }), \"という Props を任意にしたいとする．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"base_code\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-jsx\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token imports\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"React\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'react'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"interface\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"NameProps\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  name\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" string\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"handleClick\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"void\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"NameView\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" handleClick \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"NameProps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token constant\",\n          children: \"JSX\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Element\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), \"div\"]\n          }), \" \", _jsx(_components.span, {\n            className: \"token attr-name\",\n            children: \"onClick\"\n          }), _jsxs(_components.span, {\n            className: \"token script language-javascript\",\n            children: [_jsx(_components.span, {\n              className: \"token script-punctuation punctuation\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"handleClick\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token plain-text\",\n          children: \"name: \"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"</\"\n            }), \"div\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"App\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"handleClick\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"alert\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'clicked'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n    \", _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsx(_components.span, {\n            className: \"token tag\",\n            children: _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            })\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token plain-text\",\n          children: \"\\n      \"\n        }), _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"NameView\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token attr-name\",\n            children: \"name\"\n          }), _jsxs(_components.span, {\n            className: \"token attr-value\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation attr-equals\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            }), \"hoge\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token attr-name\",\n            children: \"handleClick\"\n          }), _jsxs(_components.span, {\n            className: \"token script language-javascript\",\n            children: [_jsx(_components.span, {\n              className: \"token script-punctuation punctuation\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"handleClick\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"/>\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token plain-text\",\n          children: \"\\n    \"\n        }), _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsx(_components.span, {\n            className: \"token tag\",\n            children: _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"</\"\n            })\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"App\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"方法\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#方法\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"方法\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"?\"\n      }), \"によって Props を任意にし，コンポーネント内でデフォルトを記述できる．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"with_default_function\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-diff\",\n      children: _jsxs(_components.code, {\n        className: \"language-diff\",\n        children: [_jsxs(_components.span, {\n          className: \"token unchanged\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"import React from 'react';\\n\"\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token unchanged\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"interface NameProps {\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  name: string;\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token deleted-sign deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  handleClick: () => void;\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token inserted-sign inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  handleClick?: () => void;\\n\"\n          })]\n        }), \"}\\n\\n\", _jsxs(_components.span, {\n          className: \"token deleted-sign deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \" const NameView = ({ name, handleClick }: NameProps): JSX.Element => {\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token inserted-sign inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \" const NameView = ({ name, handleClick = () => {} }: NameProps): JSX.Element => {\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token unchanged\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  return <div onClick={handleClick}>name: {name}</div>;\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"};\\n\"\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token unchanged\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"const App = () => {\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  const handleClick = () => {\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    alert('clicked');\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  };\\n\"\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token unchanged\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  return (\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    <>\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"      <NameView name=\\\"hoge\\\" handleClick={handleClick} />\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token inserted-sign inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"      <NameView name=\\\"hoge\\\" />\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token unchanged\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    </>\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  );\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"};\\n\"\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token unchanged\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix unchanged\",\n            children: \" \"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"export default App;\\n\"\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"今回は空の関数にしたが，コンポーネント毎にデフォルトで決めた処理を入れる場合でも，コンポーネント呼び出し時に挙動を好みに設定できるようなコンポーネントが実現できそうだ．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"デフォルト値においては，扱う内容によってエルビス演算子を用いることも視野に入ると思ったが，関数では理解が複雑になるためあまり使わないと思う．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，記述量の問題で，コンポーネントの Props 内で直接関数を記述する例にしたが，デフォルト関数が複数行をまたがる場合はコンポーネントの上で\", _jsx(_components.code, {\n        children: \"const defaultHandleClick = () => {...}\"\n      }), \"のようにし，それを与えるほうが簡潔と言えよう．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"図らずもバッドプラクティスになってしまっていたらごめんなさい．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"reactの任意propsにデフォルト指定のfunctionを入れる方法","date":"2021-09-21T22:27:11","description":"デフォルト値に対してデフォルト関数とでも呼ぶのでしょうか","tags":["react","typescript","default","tips","function","props"]}},"__N_SSG":true}