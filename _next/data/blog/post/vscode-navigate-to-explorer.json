{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"事象","slug":"事象","lvl":2,"i":1},{"content":"設定","slug":"設定","lvl":2,"i":2},{"content":"おわりに","slug":"おわりに","lvl":2,"i":3},{"content":"参考","slug":"参考","lvl":2,"i":4}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"VSCode を使っていて，Explorer/Extension 等が表示される箇所は Activity Bar と呼ばれている．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Activity Bar への Navigation は\", _jsx(_components.code, {\n        children: \"<C-0>\"\n      }), \"が割り当てられており，ホームポジションから難なく押せるため，普段はこちらを使っている．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"しかし，Side Bar に Extension や Source Control 等が表示されていると，Activity Bar へ移動しても Explorer へ移動できるわけではない．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"事象\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#事象\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"事象\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"左上の Explorer をホバーすると「\", _jsx(_components.code, {\n        children: \"<C-S-e>\"\n      }), \"でいけますよ」って書いてあるのに，実際に押してみると行けない場合がある．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"例えば，Editor から行こうとすると\", _jsx(_components.code, {\n        children: \"e\"\n      }), \"と出て，謎の入力モードが始まる．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"調べたところ，\", _jsx(_components.code, {\n        children: \"e\"\n      }), \"が出てくるのは IBUS の Emoji-mode のようであった．つまり，この状態で例えば\", _jsx(_components.code, {\n        children: \"face\"\n      }), \"と入力して変換を押すと 顔の絵文字が入力できる．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"英語圏の人にとっては絵文字を入力する手段となるのだろうが，日本語入力の設定をしている私にとっては存在を知らなかった機能である．例えば，顔の絵文字を入力したければ\", _jsx(_components.code, {\n        children: \"かお\"\n      }), \"から変換をかけたら動作する．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"設定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#設定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"設定\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"兎にも角にも Emoji-mode は自分にとって必ずしも必要ではない機能である．そこで，無効にしてしまうことにした．\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"ターミナルを開き，\", _jsx(_components.code, {\n          children: \"$ ibus-setup\"\n        }), \"と実行\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Emoji\"\n        }), \"タブを開く\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Emoji annotation\"\n        }), \"の右の\", _jsx(_components.code, {\n          children: \"...\"\n        }), \"をクリック\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Delete\"\n        }), \"をクリック\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"OK\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Close\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"一発で Explorer に Navigation できるようになって良かった〜\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"https://code.visualstudio.com/docs/getstarted/userinterface\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://github.com/Microsoft/vscode/issues/72642\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://askubuntu.com/questions/1083913/what-does-ctrl-shift-e-do-while-typing-text\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"vscode on ubuntuで一発でExplorerに移動したい","date":"2021-12-20T22:16:28","description":"<C-S-e>がうまく動作しない人必見!","tags":["vscode","ubuntu","settings"]}},"__N_SSG":true}