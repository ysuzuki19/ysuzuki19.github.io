{"pageProps":{"toc":[{"content":"環境","slug":"環境","lvl":2,"i":0},{"content":"エラー内容","slug":"エラー内容","lvl":2,"i":1},{"content":"原因と解決方法","slug":"原因と解決方法","lvl":2,"i":2}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Pythonがインストールされているにもかかわらずシェルスクリプト実行時にPythonが見つからないと出てくるときの対処方法\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"環境\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#環境\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"環境\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ubuntu20.04LTSを使っている。\\nPython3\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"エラー内容\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#エラー内容\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"エラー内容\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下のようなエラー文が出た。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"./XXX.sh: line Y: python: \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"command\"\n        }), \" not found\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"原因と解決方法\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#原因と解決方法\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"原因と解決方法\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"以前の環境で、\", _jsx(_components.code, {\n        children: \"alias python=\\\"python3\\\"\"\n      }), \"を設定してそのままになっていた。\\nそのため、エイリアスでなくPythonを実行できるようにする必要があり、以下のコマンドで可能。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sudo\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"apt\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"install\"\n        }), \" python-is-python3\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ちなみに、\", _jsx(_components.code, {\n        children: \"python-is-python2\"\n      }), \"というのもあるが、現在はPython2系は非推奨となっているので、基本的にはPython3系を使うことが望ましい。\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"},"scope":{"title":"シェルスクリプトでPythonが実行できない問題","date":"2020-11-18T20:45:19+09:00","description":"実行コマンドが誤りでした","tags":["python","python3","bash"]}},"__N_SSG":true}