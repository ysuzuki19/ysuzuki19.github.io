{"pageProps":{"toc":[{"content":"TL;DR","slug":"tldr","lvl":2,"i":0},{"content":"発生状況","slug":"発生状況","lvl":2,"i":1},{"content":"状態","slug":"状態","lvl":3,"i":2},{"content":"状況","slug":"状況","lvl":3,"i":3},{"content":"エラー対処","slug":"エラー対処","lvl":2,"i":4},{"content":"1. `python`コマンドで実行","slug":"1-pythonコマンドで実行","lvl":3,"i":5},{"content":"2. 絶対パスを指定","slug":"2-絶対パスを指定","lvl":3,"i":6},{"content":"3.原因の究明","slug":"3原因の究明","lvl":3,"i":7},{"content":"エラー解消方法","slug":"エラー解消方法","lvl":2,"i":8}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    h3: \"h3\",\n    pre: \"pre\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"まず，Flask でトークンなどを扱う際は，スクリプトにハードコードしてはいけない．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"そこで使われるのが\", _jsx(_components.code, {\n        children: \"python-dotenv\"\n      }), \"等で環境変数をロードする方法だ．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"それに倣って私も利用しようとしたのだが，謎のエラーに悩まされた．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"tldr\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#tldr\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"TL;DR\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \".flaskenv\"\n      }), \"と同一のディレクトリに空の\", _jsx(_components.code, {\n        children: \".env\"\n      }), \"を作成する．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"PLEASE CREATE AN EMPTY FILE(\", _jsx(_components.code, {\n        children: \".env\"\n      }), \") IN THE FLASK APP DIRECTORY\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"もしくは\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"export FLASK_SKIP_DOTENV=1\"\n      }), \"を環境変数に準備する．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"発生状況\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#発生状況\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"発生状況\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"状態\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#状態\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"状態\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"flask run\"\n      }), \"でメインスクリプト名を指定するのが面倒なので，\", _jsx(_components.code, {\n        children: \"~/APPDIR/.flaskenv\"\n      }), \"内に以下のように記入していた．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"FLASK_APP\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"app.py\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"FLASK_ENV\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"development\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"状況\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#状況\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"状況\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"flask run\"\n      }), \"で，ローカルサーバが起動したような挙動をしたが，アドレスにアクセスしようとすると，以下のようなエラーが出力．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"flask.cli.NoAppException: Could not \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"app.py\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \".\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"なんじゃこれ？と思った．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"エラー対処\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#エラー対処\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"エラー対処\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"絶対にあるはずのファイルがないと言われている．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"原因が全くわからないので，まずは，エラーの詳細を知るためにいくつか試したみた．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"1-pythonコマンドで実行\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#1-pythonコマンドで実行\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"1. \", _jsx(_components.code, {\n        children: \"python\"\n      }), \"コマンドで実行\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"flask\"\n      }), \"コマンドはよくわからないので，慣れ親しんでいる\", _jsx(_components.code, {\n        children: \"python\"\n      }), \"コマンドを使ってみることにした．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"~/APPDIR $ python app.py\\n\\n * Serving Flask app \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"app\\\"\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"lazy loading\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n * Environment: development\\n * Debug mode: on\\n * Running on http://127.0.0.1:5000/ \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"Press CTRL+C to quit\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n * Restarting with \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"stat\"\n        }), \"\\n/home/\", _jsx(_components.span, {\n          className: \"token variable\",\n          children: \"$USERNAME\"\n        }), \"/\", _jsx(_components.span, {\n          className: \"token variable\",\n          children: \"$APPDIR\"\n        }), \"/.venv/bin/python: can\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'t open file '\"\n        }), \"/home/\", _jsx(_components.span, {\n          className: \"token variable\",\n          children: \"$USERNAME\"\n        }), \"/app.py': \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"Errno \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" No such \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"file\"\n        }), \" or directory\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"は？となった．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここでは，\", _jsx(_components.code, {\n        children: \"python\"\n      }), \"コマンドを実行する時，相対パスでファイルを指定しており，それはごく普通のことと思われるが，\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここでは何故か\", _jsx(_components.code, {\n        children: \"ホームからの相対パスになっている\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"しかし，それが原因であれば，\", _jsx(_components.code, {\n        children: \"Could not import\"\n      }), \"エラーが発生した事も合点がいく．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そこで，絶対パスで実行できるか試す．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"~/APPDIR $ python \", _jsx(_components.span, {\n          className: \"token environment constant\",\n          children: \"$PWD\"\n        }), \"/app.py\\n * Serving Flask app \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"app\\\"\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"lazy loading\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n * Environment: development\\n * Debug mode: on\\n * Running on http://127.0.0.1:5000/ \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"Press CTRL+C to quit\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n * Restarting with \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"stat\"\n        }), \"\\n * Debugger is active\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!\"\n        }), \"\\n * Debugger PIN: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"247\"\n        }), \"-277-413\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これは実行できた．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"2-絶対パスを指定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-絶対パスを指定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2. 絶対パスを指定\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"「なるほど，絶対パスを指定すればスクリプトを見つけられるのか」となったので，とりあえずやることは，\", _jsx(_components.code, {\n        children: \"APPDIR/.flaskenv\"\n      }), \"を書き換えてみることだろう．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"FLASK_APP\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsxs(_components.span, {\n          className: \"token variable\",\n          children: [\"${\", _jsx(_components.span, {\n            className: \"token environment constant\",\n            children: \"PWD\"\n          }), \"}\"]\n        }), \"/app.py\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"FLASK_ENV\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"development\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"これで\", _jsx(_components.code, {\n        children: \"flask run\"\n      }), \"を実行したところ，問題なくローカルサーバが立っており，http アクセスも成功．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"3原因の究明\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#3原因の究明\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"3.原因の究明\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これで開発を始められるようになったとはいえ，上述した対処法は苦し紛れの策で，ちょっと不本意である．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そのため，根本的な解決を目指す．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"カレントパスという環境変数の一つが不審な挙動をしたため，環境変数に関わることが原因なのではと考え，\", _jsx(_components.code, {\n        children: \"python-dotenv\"\n      }), \"が候補に上がった．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"~/APPDIR $ pip uninstall python-dotenv\\n\\n~/APPDIR$ python app.py\\n* Tip: There are .env or .flaskenv files present. Do \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"pip install python-dotenv\\\"\"\n        }), \" to use them.\\n* Serving Flask app \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"app\\\"\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"lazy loading\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n* Environment: production\\n  WARNING: This is a development server. Do not use it \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" a production deployment.\\n  Use a production WSGI server instead.\\n* Debug mode: on\\n* Running on http://127.0.0.1:5000/ \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"Press CTRL+C to quit\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n* Restarting with \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"stat\"\n        }), \"\\n* Tip: There are .env or .flaskenv files present. Do \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"pip install python-dotenv\\\"\"\n        }), \" to use them.\\n* Debugger is active\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!\"\n        }), \"\\n* Debugger PIN: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"247\"\n        }), \"-277-413\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これは期待される挙動であり，原因はここにあるようだ．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ただ，ここの理由がよくわからなかった．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"python-dotenv\"\n      }), \"のリポジトリをよく見ると，\", _jsx(_components.code, {\n        children: \"python-dotenv\"\n      }), \"では\", _jsx(_components.code, {\n        children: \".env\"\n      }), \"を環境変数ファイルとして認識するが，\", _jsx(_components.code, {\n        children: \".flaskenv\"\n      }), \"は認識されない（当然といえば当然か）.\\nどこでロードされているか見ると，\", _jsx(_components.code, {\n        children: \"flask\"\n      }), \"の内部であった．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，Flask のリポジトリの\", _jsx(_components.code, {\n        children: \"cli.py\"\n      }), \"には，import パスを指定するオプションが\", _jsx(_components.a, {\n        href: \"https://github.com/pallets/flask/blob/aee3f3fee974ffb8e2ed7848c9e5744df5d7a5de/src/flask/cli.py#L373\",\n        children: \"提供されている\"\n      }), \"．この時，Flask 内のどこかで「dotenv で\", _jsx(_components.code, {\n        children: \".env\"\n      }), \"が見つかれば，そちらを\", _jsx(_components.code, {\n        children: \"app_import_path\"\n      }), \"に変更する」のような処理が行われているように感じた．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"本来ならば，Flask 内部のどこでエラーが発生しているか特定する必要があるが，今回はエラー箇所の特定は出来なかったので，それはそのうち取り組もうと思う．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"エラー解消方法\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#エラー解消方法\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"エラー解消方法\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これまでの挙動を踏まえると，以下の対処法が挙げられる．\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"python-dotenv をアンインストールすると問題なく動作\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"export FLASK_SKIP_DOTENV=1\"\n        }), \"を実行しておくと問題なく動作\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \".flaskenv\"\n        }), \"と同一ディレクトリに\", _jsx(_components.code, {\n          children: \".env\"\n        }), \"を作成\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"しかし，アクセストークンなどを読み込みたいという本来の目的からすると 1 の対処方法はありえず，\\n2or3 の対処方法を用いることになるだろう．\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Flaskでpython-dotenvを利用する際のcan't open file '/home/$USERNAME/app.py'","date":"2021-02-22T13:03:57+09:00","description":"envが原因でした","tags":["python","env","python-dotenv","error","flask"]}},"__N_SSG":true}