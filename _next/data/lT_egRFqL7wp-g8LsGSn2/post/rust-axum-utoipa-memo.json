{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"環境やバージョン","slug":"環境やバージョン","lvl":2,"i":1},{"content":"概要","slug":"概要","lvl":2,"i":2},{"content":"基本形となるスニペット","slug":"基本形となるスニペット","lvl":2,"i":3},{"content":"router, oapi-specを一元的に定義","slug":"router-oapi-specを一元的に定義","lvl":3,"i":4},{"content":"handler定義 GET","slug":"handler定義-get","lvl":3,"i":5},{"content":"型定義して、それをbodyとするhandler定義 POST","slug":"型定義してそれをbodyとするhandler定義-post","lvl":3,"i":6},{"content":"tips","slug":"tips","lvl":2,"i":7},{"content":"クエリパラメータを指定する","slug":"クエリパラメータを指定する","lvl":3,"i":8},{"content":"oapi-specをYAMLで出力する","slug":"oapi-specをyamlで出力する","lvl":3,"i":9},{"content":"oapi-spec閲覧および実行UIのホスティング","slug":"oapi-spec閲覧および実行uiのホスティング","lvl":2,"i":10},{"content":"おわりに","slug":"おわりに","lvl":2,"i":11},{"content":"参考","slug":"参考","lvl":2,"i":12}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rustで実装するAPIを、OpenAPIを介してClient実装に活用したいことがある。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そこで、RustコードからOpenAPIを自動生成するutoipaというクレートがあげられ、便利なので将来使うときにすぐに使えるようにメモを残しておく。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"新しいTipsなどがあれば、随時更新していきたい。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"環境やバージョン\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#環境やバージョン\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"環境やバージョン\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ rustc --version\\nrustc \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1.87\"\n        }), \".0-nightly \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"8c392966a \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2025\"\n        }), \"-03-01\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n$ cargo --version\\ncargo \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1.87\"\n        }), \".0-nightly \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"2622e844b \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2025\"\n        }), \"-02-28\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"cat\"\n        }), \" Cargo.toml\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"package\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\nname \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"sample-axum-utoipa\\\"\"\n        }), \"\\nversion \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"0.1.0\\\"\"\n        }), \"\\nedition \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"2024\\\"\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"dependencies\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\naxum \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"0.8.4\\\"\"\n        }), \"\\ntokio \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" version \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"1.45.0\\\"\"\n        }), \", features \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"full\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\nutoipa \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"5.3.1\\\"\"\n        }), \"\\nutoipa-axum \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"0.2.0\\\"\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここではweb application frameworkとして\", _jsx(_components.a, {\n        href: \"https://docs.rs/axum/latest/axum/\",\n        children: \"axum\"\n      }), \"を使うため\", _jsx(_components.a, {\n        href: \"https://crates.io/crates/utoipa-axum\",\n        children: \"utoipa-axum\"\n      }), \"を用いているが、他のフレームワークを使う場合、\", _jsx(_components.a, {\n        href: \"https://github.com/actix/actix-web\",\n        children: \"axtix-web\"\n      }), \"では\", _jsx(_components.a, {\n        href: \"https://github.com/juhaku/utoipa/blob/master/utoipa-actix-web/README.md\",\n        children: \"utoipa-actix-web\"\n      }), \"で同様のことが、\", _jsx(_components.a, {\n        href: \"https://github.com/rwf2/Rocket\",\n        children: \"rocket\"\n      }), \"では\", _jsx(_components.a, {\n        href: \"https://docs.rs/utoipa/latest/utoipa/attr.path.html#rocket_extras-feature-support-for-rocket\",\n        children: \"rocket_extras feature\"\n      }), \"で類似のこと（こっちはRoutingは違うかも）ができると思われる。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"概要\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#概要\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"概要\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"utoipaは、Rustを使ってコードファーストのアプローチでOpenAPIドキュメント（以下、簡単のためoapi-specとする）を生成するためのクレートである。関連クレートも一つのリポジトリにまとめられているため、何かを探すときは\", _jsx(_components.a, {\n        href: \"https://github.com/juhaku/utoipa\",\n        children: \"utoipa\"\n      }), \"を参照するのが良いだろう。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"中心となるクレートの \", _jsx(_components.a, {\n        href: \"https://docs.rs/utoipa/latest/utoipa/\",\n        children: \"utoipa\"\n      }), \"は、基本的な機能やマクロなどを提供している。実際、oapi-specを生成でいうと、こちらだけで行うことも可能である。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://docs.rs/utoipa-axum/latest/utoipa_axum/\",\n        children: \"utoipa-axum\"\n      }), \"は、axumのためのAPIを提供しており、axumのルータやハンドラに対してoapi-specを生成するためのマクロや機能を提供している。特に、\", _jsx(_components.code, {\n        children: \"axum::Router\"\n      }), \"との連携が特に有用で、コードファーストのアプローチの利点を増やすことが可能。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"本記事内においては、 \", _jsx(_components.code, {\n        children: \"utoipa_axum::router::OpenApiRouter\"\n      }), \"を用いるものとする。この目的として、コードファーストにするからには、Routing設定とoapi-spec設定の両方を一つの場所で管理し、ドリフトを防ぐという意図がある。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"基本形となるスニペット\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#基本形となるスニペット\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"基本形となるスニペット\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"router-oapi-specを一元的に定義\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#router-oapi-specを一元的に定義\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"router, oapi-specを一元的に定義\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"以下の記述で、routeを定義する。これにより、\", _jsx(_components.code, {\n        children: \"router\"\n      }), \", oapi-specの両方を同条件で生成することができる。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"OpenApiRouter::new()\"\n      }), \"のrouterは\", _jsx(_components.code, {\n        children: \"axum::serve\"\n      }), \"を直下に書かない限り、型を指定する必要がある。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"router\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mut\"\n        }), \" openapi\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"utoipa_axum\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          }), \"router\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"OpenApiRouter\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"new\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"routes\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"utoipa_axum\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"routes!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"f\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"split_for_parts\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"{}\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" openapi\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"to_json\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" listener \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"tokio\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          }), \"net\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"TcpListener\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"bind\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"localhost:8080\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"axum\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"serve\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"listener\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" router\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"handler定義-get\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#handler定義-get\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"handler定義 GET\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"簡素化した最小限の形が以下のようになる。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"operation_id\"\n      }), \"は全体で一意であればよく、命名記法なども特に制約はない。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[utoipa::path(\\n            get, path    = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"/hello\\\"\"\n          }), \",\\n            operation_id = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"hello_get\\\"\"\n          }), \",\\n            responses(\\n                (status = 200, description = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"Greet\\\"\"\n          }), \", body = String),\\n                (status = 500, description = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"Internal Server Error\\\"\"\n          }), \", body = String)\\n            )\\n        )]\"]\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"hello\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"->\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"from\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Hello, world!\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"型定義してそれをbodyとするhandler定義-post\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#型定義してそれをbodyとするhandler定義-post\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"型定義して、それをbodyとするhandler定義 POST\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"oapi-specに含ませたい型定義は、以下のように\", _jsx(_components.code, {\n        children: \"utoipa::ToSchema\"\n      }), \"トレイトを実装することで、oapi-specに含めることができる。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"bodyの場合は、RequestからJsonにするため、\", _jsx(_components.code, {\n        children: \"serde::Deserialize\"\n      }), \"トレイトも実装する必要がある。反対に、Responseの場合は、\", _jsx(_components.code, {\n        children: \"serde:::Serialize\"\n      }), \"トレイトを実装する必要がある。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[derive(serde::Deserialize, utoipa::ToSchema)]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token type-definition class-name\",\n          children: \"EchoInput\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" message\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[utoipa::path(\\n    post, path = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"/echo\\\"\"\n          }), \",\\n    operation_id = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"echo_post\\\"\"\n          }), \",\\n    request_body = String,\\n    responses(\\n        (status = 200, description = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"Echo\\\"\"\n          }), \", body = String),\\n        (status = 400, description = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"Bad Request\\\"\"\n          }), \", body = String)\\n    )\\n)]\"]\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"echo\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"axum\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          }), \"extract\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Json\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"body\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"axum\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          }), \"extract\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Json\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"EchoInput\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"->\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    body\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"message\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"tips\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#tips\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"tips\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"クエリパラメータを指定する\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#クエリパラメータを指定する\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"クエリパラメータを指定する\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"こちら結構設定が煩雑で、他にもっと良い方法があるかもしれないが、以下のようにすることで、クエリパラメータを指定することができる。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[derive(utoipa::IntoParams, serde::Deserialize)]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[into_params(style = Form, parameter_in = Query)]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token type-definition class-name\",\n          children: \"MeParams\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[param(style = Form, value_type = String, example = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"name\\\"\"\n          }), \")]\"]\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[utoipa::path(\\n            get, path    = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"/me\\\"\"\n          }), \",\\n            operation_id = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"me_get\\\"\"\n          }), \",\\n            params(MeParams),\\n            responses(\\n                (status = 200, description = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"Me\\\"\"\n          }), \", body = String),\\n                (status = 500, description = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"Internal Server Error\\\"\"\n          }), \", body = String)\\n            )\\n        )]\"]\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"me\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"query\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"axum\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          }), \"extract\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Query\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"MeParams\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"->\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    query\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"clone\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"oapi-specをyamlで出力する\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#oapi-specをyamlで出力する\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"oapi-specをYAMLで出力する\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"utoipa\"\n      }), \"の \", _jsx(_components.code, {\n        children: \"yaml\"\n      }), \" featureによって、YAML形式でoapi-specを出力することができる。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ cargo \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), \" utoipa --features yaml\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"を実行するか、\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"Cargo.toml\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-toml\",\n      children: _jsxs(_components.code, {\n        className: \"language-toml\",\n        children: [_jsx(_components.span, {\n          className: \"token key property\",\n          children: \"utoipa\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key property\",\n          children: \"version\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"5.3.1\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key property\",\n          children: \"features\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"yaml\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"と書き直し、\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"_\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mut\"\n        }), \" openapi\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"utoipa_axum\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          }), \"router\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"OpenApiRouter\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"new\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"routes\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"utoipa_axum\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"routes!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"f\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"split_for_parts\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"{}\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" openapi\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"to_yaml\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"とすると、YAML形式でoapi-specを出力することができる。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"oapi-spec閲覧および実行uiのホスティング\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#oapi-spec閲覧および実行uiのホスティング\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"oapi-spec閲覧および実行UIのホスティング\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"OpenAPI定義に基づいた仕様を使うことの利点の一つとして、Swagger UIなどを用いて、APIを簡単に動作できることが挙げられる。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"utoipaを使う場合でもその利点を享受でき、さらに、公式が提供しているクレートがそれを手助けしてくれる。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"提供されているクレートおよびインストールコマンドは以下のとおり。\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://docs.rs/utoipa-rapidoc/latest/utoipa_rapidoc/\",\n          children: \"utoipa-rapidoc\"\n        }), \" : \", _jsx(_components.code, {\n          children: \"cargo add utoipa-rapidoc --features axum\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://docs.rs/utoipa-redoc/latest/utoipa_redoc/\",\n          children: \"utoipa-redoc\"\n        }), \" : \", _jsx(_components.code, {\n          children: \"cargo add utoipa-redoc --features axum\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://docs.rs/utoipa-scalar/latest/utoipa_scalar/\",\n          children: \"utoipa-scalar\"\n        }), \" : \", _jsx(_components.code, {\n          children: \"cargo add utoipa-scalar --features axum\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://docs.rs/utoipa-swagger-ui/latest/utoipa_swagger_ui/\",\n          children: \"utoipa-swagger-ui\"\n        }), \" : \", _jsx(_components.code, {\n          children: \"cargo add utoipa-swagger-ui --features axum\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"すべてをホスティングする場合は、\", _jsx(_components.code, {\n        children: \"router\"\n      }), \"に以下のように \", _jsx(_components.code, {\n        children: \".merge()\"\n      }), \"をする。（使いたいもののみを選んで、mergeしても良い）\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [\"    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mut\"\n        }), \" router\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" openapi\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"utoipa_axum\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          }), \"router\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"OpenApiRouter\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"new\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// ここにrouteを記述\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"split_for_parts\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n    router \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" router\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"merge\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"utoipa_scalar\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Scalar\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"with_url\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/docs/scalar\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n            openapi\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"clone\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"merge\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n            \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"utoipa_swagger_ui\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"SwaggerUi\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"new\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/docs/swagger-ui\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n                \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"url\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/docs/openapi.yml\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" openapi\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"clone\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"merge\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n            \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"utoipa_rapidoc\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"RapiDoc\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"with_openapi\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/docs/rapidoc/openapi.yml\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" openapi\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"clone\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n                \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"path\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/docs/rapidoc\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"merge\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"utoipa_redoc\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Redoc\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"with_url\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/docs/redoc\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" openapi\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" listener \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"tokio\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          }), \"net\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"TcpListener\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"bind\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"localhost:8080\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"axum\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"serve\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"listener\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" router\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"コードファーストのOpenAPI定義のなかでも、utoipaは特にコードとの距離が近く、一元的にroutesを定義できるため、実装したけど漏れているなどの人為ミスを減らしやすい印象。さらに、コードとAPI定義の距離も近いため、レビュワーにとって優しいかもしれない。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ただし、OpenAPI定義とhandlerの実装は手書きのため、この部分でのドリフトは発生してしまうかもしれない。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/juhaku/utoipa\",\n          children: \"https://github.com/juhaku/utoipa\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/utoipa-axum/latest/utoipa_axum/\",\n          children: \"https://docs.rs/utoipa-axum/latest/utoipa_axum/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/utoipa/latest/utoipa/derive.IntoParams.html\",\n          children: \"https://docs.rs/utoipa/latest/utoipa/derive.IntoParams.html\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/utoipa/latest/utoipa/attr.path.html#rocket_extras-feature-support-for-rocket\",\n          children: \"https://docs.rs/utoipa/latest/utoipa/attr.path.html#rocket_extras-feature-support-for-rocket\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/utoipa-rapidoc/latest/utoipa_rapidoc/\",\n          children: \"https://docs.rs/utoipa-rapidoc/latest/utoipa_rapidoc/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/utoipa-redoc/latest/utoipa_redoc/\",\n          children: \"https://docs.rs/utoipa-redoc/latest/utoipa_redoc/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/utoipa-rapidoc/latest/utoipa_rapidoc/\",\n          children: \"https://docs.rs/utoipa-rapidoc/latest/utoipa_rapidoc/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/utoipa-scalar/latest/utoipa_scalar/\",\n          children: \"https://docs.rs/utoipa-scalar/latest/utoipa_scalar/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/utoipa-swagger-ui/latest/utoipa_swagger_ui/\",\n          children: \"https://docs.rs/utoipa-swagger-ui/latest/utoipa_swagger_ui/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/axum/latest/axum/\",\n          children: \"https://docs.rs/axum/latest/axum/\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Rustのaxumとutoipaを扱うメモ","date":"2025-05-07T20:25:28+09:00","description":"axumとutoipaを組み合わせる知見をひとまとめ","tags":["rust","axum","utoipa","utoipa-axum","memo"]}},"__N_SSG":true}