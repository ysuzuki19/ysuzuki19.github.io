{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"機能の考察","slug":"機能の考察","lvl":2,"i":1},{"content":"Workflows for Rust","slug":"workflows-for-rust","lvl":2,"i":2},{"content":"code updated","slug":"code-updated","lvl":3,"i":3},{"content":"release created","slug":"release-created","lvl":3,"i":4},{"content":"注意点","slug":"注意点","lvl":2,"i":5},{"content":"おわりに","slug":"おわりに","lvl":2,"i":6},{"content":"参考","slug":"参考","lvl":2,"i":7}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"今まで、気が向くたびにOSS開発をして、飽きたらプライベートプロジェクトを開発する。といったように気まぐれに個人開発を進めている。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そんな私が現時点で到達したプロジェクト管理の設定について、簡単な考察とともにまとめておく。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"機能の考察\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#機能の考察\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"機能の考察\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"単体テストを書いても、結局ローカルで手動で行っている限りはテスト実行忘れをし、いつしかコードとテストが乖離して手の施しようがない状態になることがたまにあると思う。そこで、「コード更新時の自動テスト」は導入したい。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また、Publish (e.g. \", _jsx(_components.code, {\n        children: \"npm publish\"\n      }), \", \", _jsx(_components.code, {\n        children: \"cargo publish\"\n      }), \")もローカル実行を避けてクリーンな環境で実行したい。\\n個人プロジェクトではフランクに\", _jsx(_components.code, {\n        children: \"main\"\n      }), \"にpushすることが多いと思うので、毎pushごとにpublishはしないのが利便性が高いと考えている。\\nそこで、実行タイミングはUI上での管理が可能な「releaseが作られたとき」がいいと思う。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"workflows-for-rust\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#workflows-for-rust\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Workflows for Rust\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"code-updated\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#code-updated\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"code updated\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"push\"\n      }), \" (or \", _jsx(_components.code, {\n        children: \"pull_request\"\n      }), \")の時にTestが走る。このTestに関連して、Build, Format, Lintも成功を必須にするのがリポジトリの管理を簡単にする工夫と言える。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"pull_request\"\n      }), \"を含めているのは、OSSの性質上、他の開発者がプルリクを出してくれた時にTestを意識してもらうための管理コスト低減のためである。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"実行時間の短縮のために依存はキャッシュ設定しておこう。\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \".github/workflows/rust-ci.yml\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-yaml\",\n      children: _jsxs(_components.code, {\n        className: \"language-yaml\",\n        children: [_jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Rust CI\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"push\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"branches\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'main'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"pull_request\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"branches\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'main'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"env\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"CARGO_TERM_COLOR\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" always\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"jobs\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"ci\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"runs-on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" ubuntu\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"latest\\n\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"steps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" actions/checkout@v3\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Install Rust\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" dtolnay/rust\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"toolchain@stable\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"with\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"components\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" rustfmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" clippy\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Cache cargo dependencies\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" actions/cache@v3\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"with\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"path\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token scalar string\",\n          children: \"\\n            ~/.cargo/registry\\n            ~/.cargo/git\\n            target\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"key\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" $\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" runner.os \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"cargo\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"$\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" hashFiles('\", _jsx(_components.span, {\n          className: \"token important\",\n          children: \"**/Cargo.toml')\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Build\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" cargo build \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"verbose\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Test\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" cargo test \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"verbose\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Check Formatting\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" cargo fmt \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"check\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Check Linting\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" cargo clippy \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"all\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"targets \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"all\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"features \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"D warnings\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"release-created\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#release-created\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"release created\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"releaseが作成されるとそのバージョンでのコードをレジストリに公開する。\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \".github/workflows/rust-cd.yml\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-yaml\",\n      children: _jsxs(_components.code, {\n        className: \"language-yaml\",\n        children: [_jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Rust CD\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"release\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"types\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"created\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"env\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"CARGO_TERM_COLOR\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" always\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"jobs\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"cd\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"runs-on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" ubuntu\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"latest\\n\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"steps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" actions/checkout@v3\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Install Rust\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" dtolnay/rust\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"toolchain@stable\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Cache cargo dependencies\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" actions/cache@v3\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"with\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"path\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token scalar string\",\n          children: \"\\n            ~/.cargo/registry\\n            ~/.cargo/git\\n            target\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"key\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" $\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" runner.os \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"cargo\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"$\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" hashFiles('\", _jsx(_components.span, {\n          className: \"token important\",\n          children: \"**/Cargo.toml')\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Test\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" cargo test \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"verbose\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Publish\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" cargo publish\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"env\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"CARGO_REGISTRY_TOKEN\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" $\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" secrets.CARGO_TOKEN \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"注意点\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#注意点\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"注意点\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Workflowのコードはリポジトリで見ることが可能なので、TOKENなどのシークレットはハードコードしてはいけない。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"GitHubのリポジトリの\", _jsx(_components.code, {\n        children: \"Settings/Secrets and variables/Actions\"\n      }), \"の\", _jsx(_components.code, {\n        children: \"New repository secret\"\n      }), \"で登録する。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Name\"\n      }), \"はどんな値でもいいが、きちんとWorkflowの \", _jsx(_components.code, {\n        children: \"secrets.<SECRET_NAME>\"\n      }), \"の\", _jsx(_components.code, {\n        children: \"<SECRET_NAME>\"\n      }), \"と一致させる必要がある。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"この設定によって、コード品質の維持がしやすくなり、OSSの開発が捗りますね！\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"GitHubで個人OSSのCICD設定の考察とRustにおける例","date":"2023-11-25T23:51:13","description":"個人管理ならではの絶妙な設定です。サンプルはRust向けです。","tags":["github","cicd","oss","rust","cargo"]}},"__N_SSG":true}