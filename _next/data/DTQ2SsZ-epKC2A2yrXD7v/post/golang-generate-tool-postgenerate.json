{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"後処理の目的","slug":"後処理の目的","lvl":2,"i":1},{"content":"コードのフォーマット","slug":"コードのフォーマット","lvl":2,"i":2},{"content":"importの整理","slug":"importの整理","lvl":2,"i":3},{"content":"両方とも実行","slug":"両方とも実行","lvl":2,"i":4},{"content":"おわりに","slug":"おわりに","lvl":2,"i":5},{"content":"参考","slug":"参考","lvl":2,"i":6}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Goではgeneratorを用いることで、利用時に見通しの良いメタプログラミングを実現できる。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そこで、ツールを作った時に、生成後のコードを整形する後処理が必要になるので、それをメモにしておく。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"後処理の目的\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#後処理の目的\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"後処理の目的\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"template構文でインデントや改行を気にすると、テンプレートを必要以上に複雑にしてしまうことがある。\\nまた、importの解決をASTで行うのはかなり大変な実装が必要（そう）である。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そこで、Goの標準で使われている実装を利用させてもらうことで、\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"コードのフォーマット\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"importの整理\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"をコード内で行う。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これにより、視認性と一貫性があるコードを生成できるようになることが期待される。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"コードのフォーマット\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コードのフォーマット\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コードのフォーマット\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Goのコードをフォーマットするには、\", _jsx(_components.code, {\n        children: \"go/format\"\n      }), \"パッケージを利用する。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"スニペットは以下。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"\\tformattedCode\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" err \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" format\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Source\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"code\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" err \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tlog\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Fatal\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"err\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"importの整理\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#importの整理\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"importの整理\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"importの整理には、\", _jsx(_components.code, {\n        children: \"golang.org/x/tools/imports\"\n      }), \"パッケージを利用する。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"スニペットは以下。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"\\toutput\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" err \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" imports\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Process\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"filePath\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" code\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" err \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tlog\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Fatal\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"err\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"両方とも実行\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#両方とも実行\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"両方とも実行\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"このように、\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"package\"\n        }), \" postgenerate\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"go/format\\\"\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"log\\\"\"\n        }), \"\\n\\n\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"golang.org/x/tools/imports\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"type\"\n        }), \" PostGenerateArgs \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tOutputFilePath \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), \"\\n\\tBuf            \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"byte\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"PostGenerate\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"args PostGenerateArgs\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"byte\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"error\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tformattedCode\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" err \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" format\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Source\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"args\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Buf\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" err \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tlog\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Fatal\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"err\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\\toutput\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" err \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" imports\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Process\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"args\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"OutputFilePath\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" formattedCode\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" err \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tlog\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Fatal\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"err\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" output\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Goは公式がツールで提供しているものにも気軽にアクセスできるので、かなり便利だなと思いました。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://pkg.go.dev/go/format#Source\",\n          children: \"https://pkg.go.dev/go/format#Source\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://pkg.go.dev/golang.org/x/tools/imports#Process\",\n          children: \"https://pkg.go.dev/golang.org/x/tools/imports#Process\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Goのgenerateツールを実装したときの後処理メモ","date":"2025-06-03T02:07:16+09:00","description":"formatやimport整理などを行うメモ","tags":["golang","generate","generator","tips"]}},"__N_SSG":true}