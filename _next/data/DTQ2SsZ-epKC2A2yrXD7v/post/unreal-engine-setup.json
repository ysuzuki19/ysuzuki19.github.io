{"pageProps":{"toc":[{"content":"環境","slug":"環境","lvl":2,"i":0},{"content":"参考","slug":"参考","lvl":2,"i":1},{"content":"手順","slug":"手順","lvl":2,"i":2},{"content":"1. EpicGamesアカウントの登録","slug":"1-epicgamesアカウントの登録","lvl":3,"i":3},{"content":"2. ライセンスへの同意","slug":"2-ライセンスへの同意","lvl":3,"i":4},{"content":"3. Githubアカウントの連携","slug":"3-githubアカウントの連携","lvl":3,"i":5},{"content":"4. リモートリポジトリにアクセス","slug":"4-リモートリポジトリにアクセス","lvl":3,"i":6},{"content":"5. READMEのインストール手順を再確認","slug":"5-readmeのインストール手順を再確認","lvl":3,"i":7},{"content":"6. インストール","slug":"6-インストール","lvl":3,"i":8},{"content":"7. 起動","slug":"7-起動","lvl":3,"i":9},{"content":"8. UEをランチャーから起動できるようにする","slug":"8-ueをランチャーから起動できるようにする","lvl":3,"i":10}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    del: \"del\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"UbuntuへのUnrealEngineのインストール。\\nWindows/MacOSへのインストールは、インストーラがダウンロードできるようだが、Linux版はなくソースコードからインストールする必要があるとのこと。\\nUE5に向けてUE4を練習しようと思ってインストールした。\\nそのメモを記す。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"環境\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#環境\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"環境\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"もろもろ\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"AMD Ryzen 3600X\\nNVIDIA GeForce 2070 SUPER\\n\\nUbuntu20.04LTS\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"作業は\", _jsx(_components.a, {\n        href: \"https://www.unrealengine.com/en-US/\",\n        children: \"EpicGamesの公式ページ\"\n      }), \"を参考にした。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"手順\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#手順\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"手順\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"1-epicgamesアカウントの登録\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#1-epicgamesアカウントの登録\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"1. EpicGamesアカウントの登録\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"OAuthでログインした。\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"2-ライセンスへの同意\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-ライセンスへの同意\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2. ライセンスへの同意\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"UEのライセンスの確認して同意(ちゃんと読んでください)。\\nQAを見ると、UE5ではUE4からライセンス事項の変更がないとのことで安心した。\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"3-githubアカウントの連携\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#3-githubアカウントの連携\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"3. Githubアカウントの連携\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"UEはライセンスに同意すると、ソースコードにアクセスできるようになる。\\nインストーラがダウンロードできないLinux版ではリポジトリからソースコードを持ってきてインストールする必要がある(リポジトリ内にインストーラがある)。\\nプライベートリポジトリとなっており、アクセスするためにGithubアカウントを認証する必要がある。\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"4-リモートリポジトリにアクセス\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#4-リモートリポジトリにアクセス\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"4. リモートリポジトリにアクセス\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/EpicGames/UnrealEngine\",\n        children: \"公式のUEリポジトリ\"\n      }), \"にアクセスし、\", _jsx(_components.code, {\n        children: \"release\"\n      }), \"ブランチを選択（デフォルトで\", _jsx(_components.code, {\n        children: \"release\"\n      }), \"）。\\nその後、\", _jsx(_components.code, {\n        children: \"git clone\"\n      }), \"または\", _jsx(_components.code, {\n        children: \"Download ZIP\"\n      }), \"でコードをローカルPCにダウンロード。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"5-readmeのインストール手順を再確認\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#5-readmeのインストール手順を再確認\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"5. READMEのインストール手順を再確認\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://docs.unrealengine.com/en-US/Platforms/Linux/BeginnerLinuxDeveloper/SettingUpAnUnrealWorkflow/index.html\",\n        children: \"EpicGamesのページにもインストール手順\"\n      }), \"は書いてあるが、ここからは\", _jsx(_components.a, {\n        href: \"https://github.com/EpicGames/UnrealEngine#linux\",\n        children: \"Githubリポジトリのインストール手順\"\n      }), \"\\nも確認しながら進める。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"6-インストール\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#6-インストール\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"6. インストール\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ローカルリポジトリに移動し、以下を実行。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"./Setup.sh\\n./GenerateProjectFiles.sh\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"make\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# -jオプションをつけなくても複数CPU負荷が100%なので、並列化はユーザが気にする必要はなさそう\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"7-起動\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#7-起動\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"7. 起動\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"実行ファイルが\", _jsx(_components.code, {\n        children: \"UnrealEngine-release/Engine/Binaries/Linux/UE4Editor\"\n      }), \"となっている。\\nターミナルから\", _jsx(_components.code, {\n        children: \"./UnrealEngine-release/Engine/Binaries/Linux/UE4Editor\"\n      }), \"のようにすると\", _jsx(_components.code, {\n        children: \"UnrealEngine\"\n      }), \"が起動する。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"8-ueをランチャーから起動できるようにする\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#8-ueをランチャーから起動できるようにする\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"8. UEをランチャーから起動できるようにする\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"上記コマンドでUnrealEditorを開けたが、ターミナル外（ランチャー）から起動したいので、設定する。\\nUbuntu20.04で試したところ、手を加えない状態ではランチャーから直接起動することはできなかった。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ランチャーに追加されたアプリケーションは、\", _jsx(_components.code, {\n        children: \"~/.local/share/applications\"\n      }), \"以下に保存されている。\\n確認したところ、\", _jsx(_components.code, {\n        children: \"com.epicgames.XXX\"\n      }), \"が3種類あった。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここでは、\", _jsx(_components.code, {\n        children: \".local/share/applications/com.epicgames.UnrealEngineEditor.desktop\"\n      }), \"を編集する。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"変更前のファイルがこちら。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token shebang important\",\n          children: \"#!/usr/bin/env xdg-open\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"Desktop Entry\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Version\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1.0\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Type\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"Application\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Exec\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"/home/\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"username\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \"/Lib/UnrealEngine-release/Engine/Binaries/Linux/UnrealVersionSelector-Linux-Shipping -editor %f\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Path\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"/home/\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"username\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \"/Lib/UnrealEngine-release/Engine/Binaries/Linux\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Name\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"Unreal Engine Editor\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Icon\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"ubinary\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Terminal\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"false\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"StartupWMClass\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"UE4Editor\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"MimeType\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"application/uproject\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Comment\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"Created By Unreal Engine\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"変更後のファイルがこちら。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token shebang important\",\n          children: \"#!/usr/bin/env xdg-open\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"Desktop Entry\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Version\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1.0\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Type\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"Application\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Exec\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"/home/\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"username\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \"/Lib/UnrealEngine-release/Engine/Binaries/Linux/UE4Editor \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# ← ココだけ変更\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Path\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"/home/\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"username\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \"/Lib/UnrealEngine-release/Engine/Binaries/Linux\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Name\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"Unreal Engine Editor\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Icon\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"ubinary\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Terminal\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"false\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"StartupWMClass\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"UE4Editor\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"MimeType\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"application/uproject\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"Comment\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"Created By Unreal Engine\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"この変更は、ランチャーから実行するコマンドを変更したというもの。\", _jsx(_components.code, {\n        children: \"7-起動\"\n      }), \"で起動コマンドを確認していたので、そちらに合わせて変更した。\\nこれにより、ランチャーからUE4を起動できるようになった（思ったよりも起動時間が長いので注意）。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.del, {\n        children: \"他の２つはどうやら意味がなさそうで邪魔なので消した。\"\n      }), \"(自己責任でよろしくお願いいたします。)\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"UbuntuへのUnrealEngineセットアップ","date":"2020-11-02T19:08:30+09:00","description":"Linux版は自分でビルドする必要があるみたいです","tags":["ue","unrealengine","ubuntu"]}},"__N_SSG":true}