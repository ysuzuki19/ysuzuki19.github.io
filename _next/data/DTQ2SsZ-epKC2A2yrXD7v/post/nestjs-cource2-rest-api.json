{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"REST API のための Module 構成","slug":"rest-api-のための-module-構成","lvl":2,"i":1},{"content":"Module を追加する","slug":"module-を追加する","lvl":2,"i":2},{"content":"Controller の追加","slug":"controller-の追加","lvl":2,"i":3},{"content":"Get メソッドをつくる","slug":"get-メソッドをつくる","lvl":2,"i":4},{"content":"シンプル","slug":"シンプル","lvl":3,"i":5},{"content":"エンドポイント指定","slug":"エンドポイント指定","lvl":3,"i":6},{"content":"可変エンドポイント","slug":"可変エンドポイント","lvl":3,"i":7},{"content":"シンプル","slug":"シンプル-1","lvl":4,"i":8},{"content":"id のみ受け取る","slug":"id-のみ受け取る","lvl":4,"i":9},{"content":"ネスト","slug":"ネスト","lvl":4,"i":10},{"content":"POST でペイロードを受け取る","slug":"post-でペイロードを受け取る","lvl":3,"i":11},{"content":"処理を書く","slug":"処理を書く","lvl":2,"i":12},{"content":"おわりに","slug":"おわりに","lvl":2,"i":13},{"content":"参考","slug":"参考","lvl":2,"i":14}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/post/nestjs-cource1-quickstart\",\n        children: \"前記事\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/post/nestjs-cource3-rest-api-db\",\n        children: \"次記事\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"/post/nestjs-cource1-quickstart\",\n        children: \"入門\"\n      }), \"の次は，REST API をつくる．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"今回は，DB との接続は省き，エンドポイントおよび処理の記述方法のみ記載する．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"REST API の動作確認のためには，\", _jsx(_components.a, {\n        href: \"https://www.postman.com/downloads/\",\n        children: \"postman\"\n      }), \" がオススメである．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"rest-api-のための-module-構成\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#rest-api-のための-module-構成\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"REST API のための Module 構成\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"REST API の Module は，大きくわけて，以下のような構成になる．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"TodoController は，外部（フロントエンド）との接点になる部分で，エンドポイントの指定を担い，ここには処理の実態は書かない様にすべきである．ここで，Controller に処理を書いてもアプリケーションは問題なく動作するが，コードの粗結合性や再利用性の観点から望ましくない．コードの粗結合という観点では，続いて紹介する GraphQL への移行においても重要な意味を持つ．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"TodoService は，Todo に対する処理の実態を実装するためのものであり，これらは基本的には TodoController から呼ばれるために実装する．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"mermaid\",\n      children: \"graph TB;\\n  subgraph TodoModule\\n    id1(TodoController);\\n    id2(TodoService);\\n    id1-->id2;\\n  end\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"module-を追加する\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#module-を追加する\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Module を追加する\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"TODO を管理する Module を作る．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"NestJS における Module は，特定の目的に対する機能の集合体のようなもので，Module は主に controller,service,resolve から構成される．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"自分でファイル生成を行ってもよいが，NestCLI を使うと楽に生成可能．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"今回は，TODO の REST API を作るので，todo モジュールを作る．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"command\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"$ nest g mo todo\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここで，\", _jsx(_components.code, {\n        children: \"g\"\n      }), \"は\", _jsx(_components.code, {\n        children: \"generate\"\n      }), \"のショートハンドであり，\", _jsx(_components.code, {\n        children: \"mo\"\n      }), \"は\", _jsx(_components.code, {\n        children: \"module\"\n      }), \"のショートハンドである．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"g\"\n      }), \"で生成できる要素は\", _jsx(_components.code, {\n        children: \"schematics\"\n      }), \"から提供され，\", _jsx(_components.code, {\n        children: \"nest g --help\"\n      }), \"から確認できる．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"生成されるファイルは以下のようになっており，空っぽの Module が生成されていることが確認できる．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/todo/todo.module.ts\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-typescript\",\n      children: _jsxs(_components.code, {\n        className: \"language-typescript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Module\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'@nestjs/common'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Module\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoModule\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，NestCLI による生成で非常に便利なのが，勝手に Module の登録を行ってくれる点であり，\", _jsx(_components.code, {\n        children: \"src/app.module.ts\"\n      }), \"に変更が加えられている．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/app.module.ts\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-typescript\",\n      children: _jsxs(_components.code, {\n        className: \"language-typescript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Module\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'@nestjs/common'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoModule\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'./todo/todo.module'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Module\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  imports\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"TodoModule\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  controllers\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  providers\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"AppModule\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"controller-の追加\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#controller-の追加\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Controller の追加\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"controller とは，REST API のエンドポイントを設定するための役割を担い，REST API を作るために必要となる．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"command\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"$ nest g controller todo\\n\"\n      })\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/todo/todo.controller.ts\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-typescript\",\n      children: _jsxs(_components.code, {\n        className: \"language-typescript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Controller\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'@nestjs/common'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Controller\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'todo'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoController\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"todo.controller.ts\"\n      }), \"には，\", _jsx(_components.code, {\n        children: \"@Controller()\"\n      }), \"が使われており，これを Module に登録することで REST API にアクセスすることができる．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"CLI で生成した場合，以下のように自動で Controller を追加してくれる．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/todo/todo.module.ts\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-typescript\",\n      children: _jsxs(_components.code, {\n        className: \"language-typescript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Module\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'@nestjs/common'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoController\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'./todo.controller'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Module\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  controllers\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"TodoController\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoModule\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ここまでで，REST API の準備が完了．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"get-メソッドをつくる\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#get-メソッドをつくる\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Get メソッドをつくる\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"シンプル\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#シンプル\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"シンプル\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"src/todo/todo.controller.ts\"\n      }), \"内に記述を加えると，\", _jsx(_components.code, {\n        children: \"/todo/*\"\n      }), \"のエンドポイントに API を作ることができる．ここで，\", _jsx(_components.code, {\n        children: \"/todo\"\n      }), \"内になるのは，\", _jsx(_components.code, {\n        children: \"@Controller('todo')\"\n      }), \"のように\", _jsx(_components.code, {\n        children: \"'todo'\"\n      }), \"が指定されているためであり，\", _jsx(_components.code, {\n        children: \"'hoge'\"\n      }), \"とすれば\", _jsx(_components.code, {\n        children: \"/hoge/*\"\n      }), \"のエンドポイントとなる．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/todo/todo.module.ts\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-typescript\",\n      children: _jsxs(_components.code, {\n        className: \"language-typescript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Controller\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Get\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'@nestjs/common'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Controller\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'todo'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoController\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Get\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'This is todo'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここで，ブラウザを使って\", _jsx(_components.code, {\n        children: \"http://localhost:3000/todo\"\n      }), \"へアクセスすると\", _jsx(_components.code, {\n        children: \"This is todo\"\n      }), \"という文字列が返ってくる．\", _jsx(_components.code, {\n        children: \"test()\"\n      }), \"というメソッドは，どんな名前でも関係ない．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"エンドポイント指定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#エンドポイント指定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"エンドポイント指定\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"変更内容\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-diff\",\n      children: _jsxs(_components.code, {\n        className: \"language-diff\",\n        children: [_jsxs(_components.span, {\n          className: \"token deleted-sign deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  @Get()\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  test() {\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    return 'This is todo';\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  }\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token inserted-sign inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  @Get('hoge')\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  hoge() {\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    return 'This is hoge';\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  }\\n\"\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"http://localhost:3000/todo/hoge\"\n      }), \"へアクセスすると\", _jsx(_components.code, {\n        children: \"This is hoge\"\n      }), \"が返される．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"このように，\", _jsx(_components.code, {\n        children: \"@Get()\"\n      }), \"に文字列を与えることで，\", _jsx(_components.code, {\n        children: \"/todo\"\n      }), \"に接続してエンドポイントを指定することができる．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"可変エンドポイント\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#可変エンドポイント\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"可変エンドポイント\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"シンプル-1\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#シンプル-1\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"シンプル\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \":id\"\n      }), \"のようにすることで可変エンドポイントを作成することが出来る．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"@Param()\"\n      }), \"によって，URL から文字列を受け取ることが出来る．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"変更内容\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-diff\",\n      children: _jsxs(_components.code, {\n        className: \"language-diff\",\n        children: [_jsxs(_components.span, {\n          className: \"token deleted-sign deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  @Get('hoge')\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  hoge() {\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    return 'This is hoge';\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  }\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token inserted-sign inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  @Get(':id')\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  hoge(@Param() param) {\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    console.log(param);\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    return `This is ${param.id}`;\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  }\\n\"\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"http://localhost:3000/todo/hoge\"\n      }), \"→\", _jsx(_components.code, {\n        children: \"This is hoge\"\n      }), \"\\n\", _jsx(_components.code, {\n        children: \"http://localhost:3000/todo/fuga\"\n      }), \"→\", _jsx(_components.code, {\n        children: \"This is fuga\"\n      })]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"id-のみ受け取る\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#id-のみ受け取る\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"id のみ受け取る\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"上の方法では\", _jsx(_components.code, {\n        children: \"params\"\n      }), \"はオブジェクトで受け取っており，\", _jsx(_components.code, {\n        children: \"id\"\n      }), \"を取り出すために\", _jsx(_components.code, {\n        children: \"param.id\"\n      }), \"へアクセスする必要がある．しかし，単一の可変文字列であれば，\", _jsx(_components.code, {\n        children: \"id\"\n      }), \"のみ受け取りたい．そこで，以下のようにすると，\", _jsx(_components.code, {\n        children: \"id\"\n      }), \"を直接受け取ることが出来る．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"先程は型指定を省いたが，このように受け取ったほうが型が扱いやすい．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"変更内容\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-diff\",\n      children: _jsxs(_components.code, {\n        className: \"language-diff\",\n        children: [_jsxs(_components.span, {\n          className: \"token deleted-sign deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  @Get(':id')\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  hoge(@Param() param) {\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    console.log(param);\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    return `This is ${param.id}`;\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  }\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token inserted-sign inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  @Get(':id')\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  hoge(@Param('id') id: string) {\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    return `This is ${id}`;\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  }\\n\"\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"ネスト\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ネスト\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ネスト\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"以下のようにすると，ネストされた可変エンドポイントが指定できる．また，\", _jsx(_components.code, {\n        children: \"@Param() param\"\n      }), \"とすると，両者を持つオブジェクトとして受け取ることも可能であるため，用途に応じて使い分けるのが良いだろう．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"変更内容\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-diff\",\n      children: _jsxs(_components.code, {\n        className: \"language-diff\",\n        children: [_jsxs(_components.span, {\n          className: \"token deleted-sign deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  @Get(':id')\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  hoge(@Param('id') id: string) {\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    return `This is ${id}`;\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  }\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token inserted-sign inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  @Get(':id/:ad')\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  hoge(@Param('id') id: string, @Param('ad') ad: string) {\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"    return `This is ${id}/${ad}`;\\n\"\n          }), _jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \"  }\\n\"\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"post-でペイロードを受け取る\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#post-でペイロードを受け取る\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"POST でペイロードを受け取る\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"@Get()\"\n      }), \"とすると GET メソッドを受け取ることができるが，これと同様に\", _jsx(_components.code, {\n        children: \"@Post()\"\n      }), \"/ \", _jsx(_components.code, {\n        children: \"@Post()\"\n      }), \"/ \", _jsx(_components.code, {\n        children: \"@Put()\"\n      }), \"/ \", _jsx(_components.code, {\n        children: \"@Delete()\"\n      }), \"/ \", _jsx(_components.code, {\n        children: \"@Patch()\"\n      }), \"/ \", _jsx(_components.code, {\n        children: \"@Options()\"\n      }), \"/ \", _jsx(_components.code, {\n        children: \"@Head()\"\n      }), \"などの\", _jsx(_components.a, {\n        href: \"https://docs.nestjs.com/controllers#resources\",\n        children: \"メソッドも提供\"\n      }), \"されているとのこと．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここでは\", _jsx(_components.code, {\n        children: \"@Post()\"\n      }), \"メソッドでペイロードを受け取る方法を記す．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/todo.controller.ts\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-typescript\",\n      children: _jsxs(_components.code, {\n        className: \"language-typescript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Body\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Controller\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Get\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Post\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'@nestjs/common'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"CreateTodoDto\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  title\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  description\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Controller\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'todo'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoController\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Get\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"getTodo\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Body\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" createTodoDto\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"CreateTodoDto\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token console class-name\",\n          children: \"console\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"log\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"createTodoDto\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'This is todo'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n  \", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Post\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"createTodo\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Body\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" createTodoDto\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"CreateTodoDto\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token console class-name\",\n          children: \"console\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"log\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"createTodoDto\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'This is todo'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"CreateTodoDto\"\n      }), \"は，TODO を作成するための入力を表す型である．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，\", _jsx(_components.code, {\n        children: \"@Body()\"\n      }), \"によってリクエストのペイロードを受け取ることができ，上述した\", _jsx(_components.code, {\n        children: \"@Param()\"\n      }), \"同様に，文字列を入れ\", _jsx(_components.code, {\n        children: \"@Body('title')\"\n      }), \"のようにすると，\", _jsx(_components.code, {\n        children: \"title\"\n      }), \"のみ受け取ることも可能である．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"個人的には，ペイロードには複数の KeyVal を含めることが多いので，まとめて受け取るのがオススメであり，その際に DTO (Data Transfer Object)というものを使う．これは，Frontend/Controller 間などの異なるレイヤー間でデータを送るための Object である．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"処理を書く\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#処理を書く\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"処理を書く\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"NestJS において，エンドポイントの設定は Controller に記述するのがこれまでの紹介であったが，ここでは処理の実態を記述する方法を紹介する．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Controller にエンドポイントに対する処理を記述すること自体は問題ないが，NestJS においては Service に処理の実態を書くことになっている．このルールを守ることで，（１）コード全体の見通しの良さ，（２）機能毎で記述場所の分離，（３）コードの再利用性の向上，（４）GraphQL への移行の容易性，の４点の恩恵が得られる．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"service を作成する際も，NestCLI を使う．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"command\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ nest g mo \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"service\"\n        }), \" todo\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"これまで同様に\", _jsx(_components.code, {\n        children: \"src/todo/todo.module.ts\"\n      }), \"は自動で更新される．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/todo/todo.module.ts\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-ts\",\n      children: _jsxs(_components.code, {\n        className: \"language-ts\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Module\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'@nestjs/common'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoController\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'./todo.controller'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoService\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'./todo.service'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Module\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  controllers\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"TodoController\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// module内で使えるServiceを登録\"\n        }), \"\\n  providers\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"TodoService\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoModule\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"まずは，先程の\", _jsx(_components.code, {\n        children: \"CreateTodoDto\"\n      }), \"を別ファイルに分割する．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/todo/create-todo.dto.ts\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-typescript\",\n      children: _jsxs(_components.code, {\n        className: \"language-typescript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"CreateTodoDto\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  title\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  description\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"生成された\", _jsx(_components.code, {\n        children: \"todo.service.ts\"\n      }), \"を以下のように修正する．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここで，\", _jsx(_components.code, {\n        children: \"todos\"\n      }), \"は，暫定的に作成したものであり，本来はこれは DB で運用するべき点である．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"todo.service.ts\"\n      }), \"のメソッドには，\", _jsx(_components.code, {\n        children: \"todo.controller.ts\"\n      }), \"から呼び出すための機能群であり，基本的には\", _jsx(_components.code, {\n        children: \"TodoModule\"\n      }), \"内で扱われるが，これらは特定の設定によって\", _jsx(_components.code, {\n        children: \"todo\"\n      }), \"モジュール以外のモジュールからも実行できるように設定できる．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/todo/todo.service.ts\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-ts\",\n      children: _jsxs(_components.code, {\n        className: \"language-ts\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Injectable\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'@nestjs/common'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"CreateTodoDto\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'./create-todo.dto'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 簡単のため同一ファイルに記載しているが，ファイル分割したほうが便利．\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"interface\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Todo\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  title\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  description\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 簡単のため同一ファイルに記載しているが，ファイル分割したほうが便利．\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"interface\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Todos\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"id\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"Todo\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Injectable\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoService\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"private\"\n        }), \" todos\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"Todos\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// todoをIDにより取得するためのメソッド\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"findOne\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"id\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"Todo\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"this\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"todos\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"id\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// todoを作成するメソッド．\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"createTodo\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"createTodoDto\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"CreateTodoDto\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"Todo\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"this\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"todos\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token known-class-name class-name\",\n          children: \"Object\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"keys\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"this\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"todos\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"length\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" createTodoDto\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" createTodoDto\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"実際に\", _jsx(_components.code, {\n        children: \"todo.service.ts\"\n      }), \"のメソッドを Controller から呼び出すためには，以下のような記述を加える．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/todo/todo.controller.ts\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-ts\",\n      children: _jsxs(_components.code, {\n        className: \"language-ts\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Body\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Controller\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Get\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Param\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Post\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'@nestjs/common'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoService\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'./todo.service'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"CreateTodoDto\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'./create-todo.dto'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Controller\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'todo'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"TodoController\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// moduleのprovidersに含まれているServiceをメソッドとして扱うことが出来る\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"constructor\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"readonly\"\n        }), \" todoService\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"TodoService\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n  \", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Get\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"':id'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"findOne\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Param\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'id'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" id\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// TodoServiceのpublicメソッドをこのように呼び出すことが出来る\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"this\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"todoService\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"findOne\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"id\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n  \", _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Post\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"createTodo\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token decorator\",\n          children: [_jsx(_components.span, {\n            className: \"token at operator\",\n            children: \"@\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"Body\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" createTodoDto\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token maybe-class-name\",\n          children: \"CreateTodoDto\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"this\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"todoService\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"createTodo\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"createTodoDto\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここで，\", _jsx(_components.code, {\n        children: \"localhost:3000/todo\"\n      }), \"に\", _jsx(_components.code, {\n        children: \"{title:\\\"test\\\",description:\\\"test task\\\"}\"\n      }), \"を POST すると TODO が追加され，\", _jsx(_components.code, {\n        children: \"localhost:3000/todo/0\"\n      }), \"に GET するとこのデータを取得できる．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"次回は DB との接続を書きたい．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.nestjs.com/controllers\",\n          children: \"https://docs.nestjs.com/controllers\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"NestJS 入門コース２ REST API","date":"2022-03-12T23:13:10","description":"TODOのREST APIをつくる","tags":["nestjs","api","rest","rest-api"]}},"__N_SSG":true}