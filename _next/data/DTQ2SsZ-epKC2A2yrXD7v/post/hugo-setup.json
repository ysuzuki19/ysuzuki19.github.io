{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"Gihub Pages x HUGO 導入手順","slug":"gihub-pages-x-hugo-導入手順","lvl":2,"i":1},{"content":"Github のアカウント作成","slug":"github-のアカウント作成","lvl":3,"i":2},{"content":"Github Pages のためのリポジトリ作成","slug":"github-pages-のためのリポジトリ作成","lvl":3,"i":3},{"content":"Github Pages のソースファイルを保存するリポジトリ作成","slug":"github-pages-のソースファイルを保存するリポジトリ作成","lvl":3,"i":4},{"content":"HUGO サイト作成","slug":"hugo-サイト作成","lvl":3,"i":5},{"content":"サブモジュール化","slug":"サブモジュール化","lvl":3,"i":6},{"content":"記事の作成","slug":"記事の作成","lvl":3,"i":7},{"content":"デプロイ","slug":"デプロイ","lvl":3,"i":8},{"content":"サイト確認","slug":"サイト確認","lvl":3,"i":9},{"content":"編集時のススメ","slug":"編集時のススメ","lvl":3,"i":10}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"最近，Qiita に記事を少しづつ掲載していたのだが，少しづつ内容が増えていくにつれて，\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"「自分のサイトが欲しいなあ・・・」\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"と思うようになってきた．しかし，調べてみると\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"・　自宅サーバを立てる\\n・　レンタルサーバを借りる\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"など，貧困学生には手の出しづらいものが次々と出てきた．\\nその中で，簡単に始められて無料でできるものとして，\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Github Pages が出てきた．Github Pages は以前，\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"「Github Pages はページ公開は楽だけど html とかよくわからないし・・・」\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"と思って，リポジトリを作ったまま何もできないまま停滞していた．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そこで見つけたのが SSG(Static Site Generator)である．SSG は日本語では静的サイトジェネレータと呼ばれ，その名の通り静的なサイトを生成することができる．\\nSSG は HUGO を使っているのだが，HUGO は GO 言語で開発されており，高速に動作すると言われている．（他を実際に使ったことがないので本当はわかりません．）\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"パソコンは苦手なので，環境構築には１日ほどかかってしまったが，手順としては簡単に導入することができた．他の方の手順紹介に，どこでコマンドを実行したら良いかを追加して紹介する．\\n自分は，Github で管理しているリポジトリはすべて\", _jsx(_components.code, {\n        children: \"~/Github/\"\n      }), \"にあるので，その部分だけ自分似合わせてもらえばいいと思う．\\nここでは，環境構築の手順を紹介する．手順の概要は以下．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"gihub-pages-x-hugo-導入手順\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#gihub-pages-x-hugo-導入手順\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Gihub Pages x HUGO 導入手順\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Github のアカウント作成\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Github Pages のためのリポジトリ作成\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Github Pages のソースファイルを保存するリポジトリ作成\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"サブモジュール化\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"HUGO サイト作成\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"記事の作成\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"デプロイ\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"サイト確認\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"以上が手順であるが，環境構築中はほとんど\", _jsx(_components.a, {\n        href: \"https://chanmitsu55.github.io/2017/12/25/2017-12-25-create-blog-by-hugo\",\n        children: \"chanmitsu55 さんのこちらの記事\"\n      }), \"を参考にさせてもらったので，こちらを見てもらうとわかりやすいと思う．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Github は知っている人が多いと思うが，Github Pages とは Github でサイトを公開するサービスである．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"github-のアカウント作成\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#github-のアカウント作成\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Github のアカウント作成\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Github のアカウントをすでに持っている場合はスルーして良いが，まだな方は\", _jsx(_components.a, {\n        href: \"https://github.com\",\n        children: \"Github のホーム\"\n      }), \"からまずはアカウントを作る．また，作成したリポジトリをローカルにクローンする．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"github-pages-のためのリポジトリ作成\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#github-pages-のためのリポジトリ作成\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Github Pages のためのリポジトリ作成\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Github では，通常は好きなリポジトリ名をつけることができるのだが，リポジトリ名を\", _jsx(_components.code, {\n        children: \"username.github.io\"\n      }), \"とするとネットに公開される．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"~/Github\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"cd\"\n        }), \" ~/Github\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" clone https://github.com/username/username.github.io\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"github-pages-のソースファイルを保存するリポジトリ作成\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#github-pages-のソースファイルを保存するリポジトリ作成\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Github Pages のソースファイルを保存するリポジトリ作成\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Github Pages x HUGO でブログの作成方法を紹介している方をみると，\", _jsx(_components.code, {\n        children: \"username.github.io\"\n      }), \"リポジトリとソースファイルを保存するリポジトリは分けた方がいいようだ．今回は，\", _jsx(_components.code, {\n        children: \"blog\"\n      }), \"という名前のリポジトリを作成した．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"~/Github\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"cd\"\n        }), \" ~/Github\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" clone https://github.com/username/blog\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"hugo-サイト作成\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#hugo-サイト作成\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"HUGO サイト作成\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"HUGO コマンドを用いて HUGO サイトを作成する．ここで，サイトのテーマは\", _jsx(_components.a, {\n        href: \"https://themes.gohugo.io\",\n        children: \"こちら\"\n      }), \"から選択することができ，好みのテーマがあれば github リポジトリなどが記載されている．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"~/Github\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"cd\"\n        }), \" ~/Gibhub\\n$ hugo new site temp\\n$ \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"cd\"\n        }), \" temp/theme\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" clone https://github.com/appernetic/hugo-bootstrap-premium\\n$ \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"cd\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここまでで，HUGO サイトと使用するテーマは準備された．次は，\", _jsx(_components.code, {\n        children: \"~Github/temp/config.toml\"\n      }), \"を書き換える必要がある．\", _jsx(_components.a, {\n        href: \"https://github.com/gohugoio/hugo/blob/master/docs/config.toml\",\n        children: \"公式のリポジトリ\"\n      }), \"に記載されている．以下の\", _jsx(_components.code, {\n        children: \"config.toml\"\n      }), \"は先ほど言及した\", _jsx(_components.a, {\n        href: \"https://chanmitsu55.github.io/2017/12/25/2017-12-25-create-blog-by-hugo/\",\n        children: \"chanmitsu55 さんのこちらの記事\"\n      }), \"を参考にした．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"自分の\", _jsx(_components.code, {\n        children: \"config.toml\"\n      }), \"にする際は\", _jsx(_components.code, {\n        children: \"username\"\n      }), \"などを自分に合うように変更すると良い．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"baseURL = \\\"https://username.github.io/\\\"\\nlanguageCode = \\\"ja-jp\\\"\\nweight = 1\\ntitle = \\\"title\\\"\\npublishDir = \\\"public\\\"\\ntheme= \\\"hugo-bootstrap-premium\\\"\\nhasCJKLanguage = true\\npaginate = 10\\npaginatePath = \\\"page\\\"\\n\\n[permalinks]\\n\\tpost = \\\"/:year/:month/:day/:filename/\\\"\\n\\tcode = \\\"/:filename/\\\"\\n\\n[author]\\n\\tname = \\\"author name\\\"\\n\\temail = \\\"mailaddress@yahoo.co.jp\\\"\\n\\n[params.theme]\\n\\tname = \\\"yeti\\\"\\n\\n[params]\\n\\tBrandImage = \\\"/logo.png\\\"\\n\\tbrand = \\\"brand name\\\"\\n\\ttopline = \\\"topline\\\"\\n\\tfootline = \\\"Copyright&copy; <a href='/about/'>name</a>\\\"\\n\\tshowRightSidebar = true\\n\\thighlight = \\\"default\\\"\\n\\ttwitter  = \\\"acount id\\\"\\n\\tgithub   = \\\"acount id\\\"\\n\\n[[menu.main]]\\n\\tname = \\\"Home\\\"\\n\\tidentifier = \\\"home\\\"\\n\\turl = \\\"/\\\"\\n\\tweight = -200\\n\\tpre = \\\"<i class='fa fa-home'></i>\\\"\\n\\n[[menu.main]]\\n\\tname = \\\"Archives\\\"\\n\\tidentifier = \\\"archives\\\"\\n\\turl = \\\"/post/\\\"\\n\\tweight = -180\\n\\tpre = \\\"<i class='fa fa-archive'></i>\\\"\\n\\n[[menu.main]]\\n\\tname = \\\"About\\\"\\n\\tidentifier = \\\"\\\"\\n\\turl = \\\"/about/\\\"\\n\\tweight = -100\\n\\tpre = \\\"<i class='fa fa-info-circle'></i>\\\"\\n\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"こちらも\", _jsx(_components.a, {\n        href: \"https://github.com/gohugoio/hugo/blob/master/docs/config.toml\",\n        children: \"公式リポジトリ\"\n      }), \"にサンプルがあるので，少しづつ自分用に変更していこうと思う．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"サブモジュール化\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#サブモジュール化\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"サブモジュール化\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"サブモジュール化するためには，一度\", _jsx(_components.code, {\n        children: \"~/Github/blog\"\n      }), \"内の\", _jsx(_components.code, {\n        children: \"public\"\n      }), \"を消去する必要がある．この方法は\", _jsx(_components.a, {\n        href: \"https://gohugo.io/hosting-and-deployment/hosting-on-github/#step-by-step-instructions\",\n        children: \"公式ドキュメント\"\n      }), \"に記載されている．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"~/Github/blog\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"cd\"\n        }), \" ~/Github/blog\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"rm\"\n        }), \" -rf public\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" summodule \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), \" -b master https://github.com/username/username.github.io public\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"記事の作成\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#記事の作成\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"記事の作成\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"記事の作成は\", _jsx(_components.code, {\n        children: \"hugo\"\n      }), \"コマンどを用いると簡単にできる．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"$ cd ~/Github/blog\\n$ hugo new post/articlename.md\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ここで作成されたファイルを編集することで記事が完成する．生成ファイルの 4 行目に\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"draft : true\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"とあり，これは下書き中を意味する．ネットに載せるためには\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"draft : false\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"に変更すると良い．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"デプロイ\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#デプロイ\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"デプロイ\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"~/Gibhub/blog\"\n      }), \"内に記事を書いてもデプロイしなければ Github Pages で公開されない．デプロイする処理のスクリプトが\", _jsx(_components.a, {\n        href: \"https://gohugo.io/hosting-and-deployment/hosting-on-github/#put-it-into-a-script\",\n        children: \"公式\"\n      }), \"で紹介されている．以下のファイルは\", _jsx(_components.code, {\n        children: \"~/Github/blog/deploy.sh\"\n      }), \"とする．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token shebang important\",\n          children: \"#!/bin/bash\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"echo\"\n        }), \" -e \", _jsxs(_components.span, {\n          className: \"token string\",\n          children: [\"\\\"\", _jsx(_components.span, {\n            className: \"token entity\",\n            title: \"\\\\033\",\n            children: \"\\\\033\"\n          }), \"[0;32mDeploying updates to GitHub...\", _jsx(_components.span, {\n            className: \"token entity\",\n            title: \"\\\\033\",\n            children: \"\\\\033\"\n          }), \"[0m\\\"\"]\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# Build the project.\"\n        }), \"\\nhugo\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# Go To Public folder\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"cd\"\n        }), \" public\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# Add changes to git.\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \".\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# Commit changes.\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"msg\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsxs(_components.span, {\n          className: \"token string\",\n          children: [\"\\\"rebuilding site \", _jsxs(_components.span, {\n            className: \"token variable\",\n            children: [_jsx(_components.span, {\n              className: \"token variable\",\n              children: \"`\"\n            }), _jsx(_components.span, {\n              className: \"token function\",\n              children: \"date\"\n            }), _jsx(_components.span, {\n              className: \"token variable\",\n              children: \"`\"\n            })]\n          }), \"\\\"\"]\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token variable\",\n          children: \"$#\"\n        }), \" -eq \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"then\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"msg\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsxs(_components.span, {\n          className: \"token string\",\n          children: [\"\\\"\", _jsx(_components.span, {\n            className: \"token variable\",\n            children: \"$1\"\n          }), \"\\\"\"]\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fi\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" commit -m \", _jsxs(_components.span, {\n          className: \"token string\",\n          children: [\"\\\"\", _jsx(_components.span, {\n            className: \"token variable\",\n            children: \"$msg\"\n          }), \"\\\"\"]\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# Push source and build repos.\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" push origin master\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# Come Back up to the Project Root\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"cd\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"deploy.sh\"\n      }), \"を実行する際には\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"$ ./deploy.sh\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"とすると良いのだが，ファイル作成直後は実行権がなくて実行ができない．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"$ bash ./deploy.sh\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"としたら実行できる．しかし，後のことも考えると\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"$ chmod +x deploy.sh\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"として実行権を与えておくとよい．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"サイト確認\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#サイト確認\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"サイト確認\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここまでで，ネットにサイトを公開することができる．実際にサイトを閲覧するためには，ブラウザを開き，URL 欄に\", _jsx(_components.code, {\n        children: \"https://username,github.io\"\n      }), \"とするとサイトのホームが表示される．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"編集時のススメ\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#編集時のススメ\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"編集時のススメ\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"実際に記事を編集している際にはなんどもデプロイせずに\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"~/Github/blog $ hugo server\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"と実行することでローカルサーバを立て，ブラウザの URL 欄に\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"localhost:1313\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"と入力することで逐次記事の状態を確認しながら作業できる．\\nこれは\\n\", _jsx(_components.a, {\n        href: \"https://ysuzuki19.github.io/2019/04/18/hugotutorial/\",\n        children: \"こちら\"\n      }), \"にも方法を記載した．\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Github Pages x HUGOをセットアップする","date":"2019-04-19T14:26:27+09:00","description":"便利なブログ作成！！","tags":["github-pages","hugo","blog"]}},"__N_SSG":true}