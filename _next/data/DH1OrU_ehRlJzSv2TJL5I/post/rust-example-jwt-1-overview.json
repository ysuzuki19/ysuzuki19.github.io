{"pageProps":{"toc":[{"content":"目次","slug":"目次","lvl":3,"i":0},{"content":"はじめに","slug":"はじめに","lvl":2,"i":1},{"content":"JWTについて","slug":"jwtについて","lvl":3,"i":2},{"content":"紹介するコードの順番","slug":"紹介するコードの順番","lvl":3,"i":3},{"content":"作るライブラリの使用例","slug":"作るライブラリの使用例","lvl":3,"i":4},{"content":"おわりに","slug":"おわりに","lvl":2,"i":5},{"content":"参考","slug":"参考","lvl":2,"i":6}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h3, {\n      id: \"目次\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#目次\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"目次\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"概要と使用例\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-example-jwt-2-project-setup\",\n          children: \"プロジェクト設定\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-example-jwt-3-base64\",\n          children: \"base64関連\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-example-jwt-4-signature-algorithm\",\n          children: \"署名アルゴリズム関連\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-example-jwt-5-header\",\n          children: \"ヘッダ定義\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-example-jwt-6-jwt\",\n          children: \"JWT本体の実装\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-example-jwt-7-test\",\n          children: \"JWT本体のTest\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"RustやJWTを勉強するために、簡単なJWTライブラリを実装してみました。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"リポジトリはこちら→\", _jsx(_components.a, {\n        href: \"https://github.com/ysuzuki19/rust-chibi-jwt/tree/48cb525fa71ccae45244d8b57a687ddf30984fab\",\n        children: \"https://github.com/ysuzuki19/rust-chibi-jwt/tree/48cb525fa71ccae45244d8b57a687ddf30984fab\"\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"jwtについて\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#jwtについて\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"JWTについて\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"JWT（JSON Web Token）は、JSON形式で情報を安全にやり取りするための軽量な仕様で、認証や情報の交換に利用されるものとされている。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"トークンの構成は、ヘッダ、ペイロード、署名の3つの部分からなり、それぞれBase64エンコードされている。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-plaintext\",\n      children: _jsx(_components.code, {\n        className: \"language-plaintext\",\n        children: \"<header>.<payload>.<signature>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"紹介するコードの順番\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#紹介するコードの順番\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"紹介するコードの順番\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"基本的に、実装が崩れない順番を意識してコードを紹介していく。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"一部、\", _jsx(_components.code, {\n        children: \"mod <hoge>\"\n      }), \"や、testでの利用などが、紹介する順番では動かなくなるので、そこは無視して進めてもらうか、コメントアウトして貰えればと思う。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"作るライブラリの使用例\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#作るライブラリの使用例\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"作るライブラリの使用例\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"まずは、どんな使い方をするものを作ったのかを紹介しておく。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下のように、\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"TokenをDecodeしてPayloadを取り出す\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"PayloadをTokenにEncodeする（署名を含む）\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"といった使い方を想定して作ってみた。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"一連の記事を進めていくと、以下のコードを実行できるようになる。\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/main.rs\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"use\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"serde\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Deserialize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Serialize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"use\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"rust_chibi_jwt\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Alg\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Jwt\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// Define payload for sample\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// `PartialEq` is unnecessary, but it's using for assert_eq! in main\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[derive(Debug, Serialize, Deserialize, PartialEq)]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token type-definition class-name\",\n          children: \"Payload\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    sub\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    iat\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"u64\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"main\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"->\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Result\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Box\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"dyn\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"std\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          }), \"error\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Error\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// dummy token with secret \\\"my-secret\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" token \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.EpM5XBzTJZ4J8AfoJEcJrjth8pfH28LWdjLo90sYb9g\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" secret\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"u8\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"9\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"b\\\"my-secret\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" payload \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Payload\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n        sub\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"1234567890\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"to_string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"John Doe\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"to_string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        iat\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1516239022\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// Decode and Encode\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" jwt \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Jwt\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Payload\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"decode\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"token\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n        \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"assert!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"jwt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"verify\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"secret\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"assert_eq!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"jwt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"payload\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"payload\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n        \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" reencoded\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" jwt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"encode\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"assert_eq!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"token\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" reencoded\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n        \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Jwt Decode/Encode is OK\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// Sign and Encode\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mut\"\n        }), \" jwt \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Jwt\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"new\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Alg\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token constant\",\n          children: \"HS256\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" payload\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n        jwt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sign\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"secret\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" encoded\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" jwt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"encode\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"assert_eq!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"token\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" encoded\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n        \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Jwt Sign/Encode is OK\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Ok\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"実行すると、標準出力は以下のようになる。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"rust-chibi-jwt $ cargo run\\nJwt Decode/Encode is OK\\nJwt Sign/Encode is OK\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"今回は、勉強目的での実装なので、多くの署名アルゴリズムをサポートせず、（サポート対象を追加できる構成で）HS256のみをサポートしている。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"実装全体を通して参考にさせていただいたサイトやドキュメントなどです。\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://jwt.io\",\n          children: \"https://jwt.io\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.base64decode.org\",\n          children: \"https://www.base64decode.org\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://datatracker.ietf.org/doc/html/rfc7519\",\n          children: \"https://datatracker.ietf.org/doc/html/rfc7519\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://doc.rust-lang.org/cargo/commands/cargo-test.html\",\n          children: \"https://doc.rust-lang.org/cargo/commands/cargo-test.html\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/base64/latest/base64/\",\n          children: \"https://docs.rs/base64/latest/base64/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/serde-rs/json\",\n          children: \"https://github.com/serde-rs/json\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/hmac/latest/hmac/\",\n          children: \"https://docs.rs/hmac/latest/hmac/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://stackoverflow.com/questions/4080988/why-does-base64-encoding-require-padding-if-the-input-length-is-not-divisible-by\",\n          children: \"https://stackoverflow.com/questions/4080988/why-does-base64-encoding-require-padding-if-the-input-length-is-not-divisible-by\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Rustで簡単なJWTライブラリを実装してみた ~1. 概要と使用例~","date":"2024-08-30T03:23:03+09:00","description":"勉強がてら作ってみました","tags":["rust","example","tutorial","jwt","jsonwebtoken"]}},"__N_SSG":true}