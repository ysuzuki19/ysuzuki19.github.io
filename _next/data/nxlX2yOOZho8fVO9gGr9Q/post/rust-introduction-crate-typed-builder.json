{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"使い方","slug":"使い方","lvl":2,"i":1},{"content":"依存クレートの追記","slug":"依存クレートの追記","lvl":3,"i":2},{"content":"構造体への設定","slug":"構造体への設定","lvl":3,"i":3},{"content":"高度な設定","slug":"高度な設定","lvl":3,"i":4},{"content":"各設定の説明","slug":"各設定の説明","lvl":3,"i":5},{"content":"`default`","slug":"default","lvl":3,"i":6},{"content":"`setter(into)`","slug":"setterinto","lvl":3,"i":7},{"content":"`setter(strip_option)`","slug":"setterstrip_option","lvl":3,"i":8},{"content":"`default_code`","slug":"default_code","lvl":3,"i":9},{"content":"おわりに","slug":"おわりに","lvl":2,"i":10},{"content":"参考","slug":"参考","lvl":2,"i":11}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    code: \"code\",\n    h3: \"h3\",\n    div: \"div\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rustで構造体のフィールドは、インスタンス生成時に、すべてのフィールドを明示的に指定する必要がある。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"それはRustの安全性や明示性を重視する姿勢と言え、基本的には望ましい設計である。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"しかし、大量のフィールドを持つ構造体のインスタンス生成時に毎回全てのフィールドを明示的に書くのは冗長になることがある。特にデフォルト値を持たせたい場合や意識しないでいいフィールドを提供する際には問題になる。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"その際に用いられるのが、Builderパターンであるが、その実装もフィールドが大量となるとそれにつれて増大する。\\nしかし、そんな悩みを解決するクレートがいくつか存在するので、自分がよく使う \", _jsx(_components.code, {\n        children: \"typed-builder\"\n      }), \"を紹介する。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"使い方\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#使い方\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"使い方\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"依存クレートの追記\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#依存クレートの追記\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"依存クレートの追記\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Cargo.toml\"\n      }), \"に以下の行を追加する。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"最新バージョンは\", _jsx(_components.a, {\n        href: \"https://crates.io/crates/typed-builder\",\n        children: \"crates.ioのtyped-builderページ\"\n      }), \"を見ると載っている。\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"Cargo.tlml\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-toml\",\n      children: _jsxs(_components.code, {\n        className: \"language-toml\",\n        children: [_jsx(_components.span, {\n          className: \"token key property\",\n          children: \"typed-builder\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"0.16\\\"\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"構造体への設定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#構造体への設定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"構造体への設定\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"構造体定義の上につける\", _jsx(_components.code, {\n        children: \"derive\"\n      }), \"に、\", _jsx(_components.code, {\n        children: \"TypedBuilder\"\n      }), \"も加える。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[derive(Debug, TypedBuilder)]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token type-definition class-name\",\n          children: \"Person\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    age\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"u8\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    profile\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Option\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    interests\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Vec\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"この設定では、以下のように利用することができる。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"たった一行いじっただけで、このように簡単にBuilderを実装することが可能となった。\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"main.rs\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"main\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" me \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Person\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"builder\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"ysuzuki19\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"into\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"age\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"profile\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"None\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"interests\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"vec!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"build\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"{:?}\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" me\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"高度な設定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#高度な設定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"高度な設定\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"上の利用方法だと、Optionフィールドもメソッドで\", _jsx(_components.code, {\n        children: \"None\"\n      }), \"をセットする必要があるし、値を割り当てる場合は\", _jsx(_components.code, {\n        children: \"Some()\"\n      }), \"が必要になる。しかし、それは冗長と言えよう。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そこで、各フィールドの設定をいじってみる。\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"main.rs\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[derive(Debug, TypedBuilder)]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token type-definition class-name\",\n          children: \"Person\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[builder(default = 20)]\"\n        }), \"\\n    age\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"u8\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[builder(default, setter(into))]\"\n        }), \"\\n    name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[builder(default, setter(strip_option, into))]\"\n        }), \"\\n    profile\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Option\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[builder(default_code = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"vec![\\\\\\\"Rust\\\\\\\".into()]\\\"\"\n          }), \")]\"]\n        }), \"\\n    interests\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Vec\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これを利用する場合、以下のようにできる。\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"main.rs\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"main\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" me \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Person\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"builder\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"ysuzuki19\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"profile\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Hello, world!\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"build\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"{:?}\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" me\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"各設定の説明\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#各設定の説明\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"各設定の説明\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"まず\", _jsx(_components.code, {\n        children: \"#[builder()]\"\n      }), \"でフィールドの振る舞いを設定することができる。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"default\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#default\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.code, {\n        children: \"default\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"default\"\n      }), \"によって、フィールドのデフォルト値を設定できる。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"これにより、\", _jsx(_components.code, {\n        children: \".age()\"\n      }), \"は呼び出さなくても\", _jsx(_components.code, {\n        children: \".build()\"\n      }), \"できるようになる。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[builder(default = 20)]\"\n        }), \"\\nage\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"u8\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"この例では\", _jsx(_components.code, {\n        children: \"default = 20\"\n      }), \"としているが、単に\", _jsx(_components.code, {\n        children: \"default\"\n      }), \"とすればその型のデフォルト値になる。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"setterinto\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#setterinto\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.code, {\n        children: \"setter(into)\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"setter(into)\"\n      }), \"によって、\", _jsx(_components.code, {\n        children: \".into()\"\n      }), \"を省略できるようになる。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"これにより、\", _jsx(_components.code, {\n        children: \".name(\\\"ysuzuki19\\\")\"\n      }), \"と書けるようになる。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[builder(default, setter(into))]\"\n        }), \"\\nname\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"setterstrip_option\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#setterstrip_option\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.code, {\n        children: \"setter(strip_option)\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"setter(strip_option)\"\n      }), \"によって、\", _jsx(_components.code, {\n        children: \"Some()\"\n      }), \"を省略する。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"これにより、\", _jsx(_components.code, {\n        children: \".profile(\\\"Hello World!\\\")\"\n      }), \"とできるようになる。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[builder(default, setter(strip_option, into))]\"\n        }), \"\\nprofile\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Option\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"default_code\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#default_code\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.code, {\n        children: \"default_code\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"デフォルト値をコードで設定できる。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"これにより、\", _jsx(_components.code, {\n        children: \".interests()\"\n      }), \"を呼び出さない限りはRustだけ興味がある事になる。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[builder(default_code = \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"vec![\\\\\\\"Rust\\\\\\\".into()]\\\"\"\n          }), \")]\"]\n        }), \"\\ninterests\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Vec\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以上の設定項目が、よく使う項目です。\\nマクロで自動実装してくれるのは非常に便利でいいですね！\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://crates.io/crates/typed-builder\",\n          children: \"https://crates.io/crates/typed-builder\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"rustで簡単にBuilderパターンを自動実装する方法","date":"2023-09-29T02:02:46","description":"typed-builderの紹介です。フィールドの各種設定も含みます。","tags":["rust","tutorial","introduction","typed-builder","builder","macro"]}},"__N_SSG":true}