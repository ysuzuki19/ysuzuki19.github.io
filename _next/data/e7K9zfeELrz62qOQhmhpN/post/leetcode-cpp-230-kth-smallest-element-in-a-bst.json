{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"コード全体","slug":"コード全体","lvl":2,"i":1},{"content":"解説","slug":"解説","lvl":2,"i":2},{"content":"事前準備","slug":"事前準備","lvl":3,"i":3},{"content":"探索対象が空の場合はカウントしない","slug":"探索対象が空の場合はカウントしない","lvl":3,"i":4},{"content":"左再帰","slug":"左再帰","lvl":3,"i":5},{"content":"分岐＆右再帰","slug":"分岐＆右再帰","lvl":3,"i":6},{"content":"ヘルパを実行","slug":"ヘルパを実行","lvl":3,"i":7},{"content":"おわりに","slug":"おわりに","lvl":2,"i":8},{"content":"参考","slug":"参考","lvl":2,"i":9}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"/post/leetcode-rust-230-kth-smallest-element-in-a-bst\",\n        children: \"Rust 版\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"binary search tree の，先頭から\", _jsx(_components.code, {\n        children: \"k\"\n      }), \"番目の数値を答える\", _jsx(_components.a, {\n        href: \"https://leetcode.com/problems/kth-smallest-element-in-a-bst/\",\n        children: \"問題\"\n      }), \"．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rust で解いてみたので，慣れている C++で解いてみた．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"コード全体\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コード全体\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コード全体\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"main.cpp\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Solution\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  tuple\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"TreeNode\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"helper\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"TreeNode\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \" root\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" k\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!\"\n        }), \"root\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"nullptr\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" k \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    TreeNode\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \" node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" next\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"tie\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" next\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"helper\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"root\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"->\"\n        }), \"left\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" k\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!\"\n        }), \"node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"next \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" root\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"else\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"helper\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"root\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"->\"\n        }), \"right\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" next \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"else\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"public\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"kthSmallest\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"TreeNode\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \" root\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" k\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token generic-function\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"get\"\n          }), _jsxs(_components.span, {\n            className: \"token generic class-name\",\n            children: [_jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">\"\n            })]\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"helper\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"root\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" k\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"->\"\n        }), \"val\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"解説\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#解説\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"解説\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"事前準備\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#事前準備\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"事前準備\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Solution\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  tuple\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"TreeNode\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"helper\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"TreeNode\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \" root\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" k\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"探索対象が空の場合はカウントしない\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#探索対象が空の場合はカウントしない\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"探索対象が空の場合はカウントしない\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!\"\n        }), \"root\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"nullptr\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" k \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"左再帰\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#左再帰\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"左再帰\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"探索対象の左にノードが存在する場合は，「それより小さい値」が存在するため，先にカウントする．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"そして，\", _jsx(_components.code, {\n        children: \"k\"\n      }), \"番目のノードが発見されたかを\", _jsx(_components.code, {\n        children: \"node\"\n      }), \"に，残りカウントを\", _jsx(_components.code, {\n        children: \"next\"\n      }), \"に格納する．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"    TreeNode\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \" node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" next\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"tie\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" next\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"helper\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"root\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"->\"\n        }), \"left\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" k\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"分岐右再帰\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#分岐右再帰\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"分岐＆右再帰\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"左に\", _jsx(_components.code, {\n        children: \"k\"\n      }), \"番目が合った場合はそれを返す．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"無くて，自身が\", _jsx(_components.code, {\n        children: \"k\"\n      }), \"番目であれば自身を返す．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"どちらでもない場合はカウントを引き継ぎつつ右方向に再帰する．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!\"\n        }), \"node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"next \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" root\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"else\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"helper\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"root\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"->\"\n        }), \"right\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" next \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"else\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" node\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"ヘルパを実行\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ヘルパを実行\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ヘルパを実行\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"探索結果の値(\", _jsx(_components.code, {\n        children: \"val\"\n      }), \")を返す．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"public\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"kthSmallest\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"TreeNode\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \" root\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" k\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token generic-function\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"get\"\n          }), _jsxs(_components.span, {\n            className: \"token generic class-name\",\n            children: [_jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">\"\n            })]\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"helper\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"root\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" k\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"->\"\n        }), \"val\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ポインタの扱いが簡潔で良い点が心地よい．これによりメモリの危険性があることは，悩みどころだと感じる．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，\", _jsx(_components.code, {\n        children: \"nullptr\"\n      }), \"によるアーリーリターンが，複雑になりがちな再帰処理の中で，頭をすっきりさせることに多く寄与している印象がある．具体的に，「入力がからの場合はこの関数はすぐおしまい！」とすることで，頭の中で扱うことで，考慮すべき項目を一つ減らすことが出来ていた．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"これに関しては，Rust の\", _jsx(_components.code, {\n        children: \"match\"\n      }), \"に慣れると改善されるのだろうと思う．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://en.cppreference.com/w/cpp/utility/tuple\",\n          children: \"https://en.cppreference.com/w/cpp/utility/tuple\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://en.cppreference.com/w/cpp/utility/tuple/tie\",\n          children: \"https://en.cppreference.com/w/cpp/utility/tuple/tie\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"[C++]LeetCode230 Kth Smallest Element in a BSTを解く","date":"2022-04-19T22:51:49","description":"再帰します","tags":["cpp","leetcode","recursion","algorithm"]}},"__N_SSG":true}