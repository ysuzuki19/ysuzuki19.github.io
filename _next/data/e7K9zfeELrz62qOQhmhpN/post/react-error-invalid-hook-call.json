{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"TL;DR","slug":"tldr","lvl":2,"i":1},{"content":"エラー","slug":"エラー","lvl":2,"i":2},{"content":"何の問題なのか？","slug":"何の問題なのか","lvl":2,"i":3},{"content":"解決策？","slug":"解決策","lvl":2,"i":4},{"content":"模索した結果","slug":"模索した結果","lvl":2,"i":5},{"content":"おわりに","slug":"おわりに","lvl":2,"i":6},{"content":"参考","slug":"参考","lvl":2,"i":7}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"コンポーネントを含む自作ライブラリを npm に公開しようとして，ローカルインストールをした．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"それを実行しようとしたところ，下に載せるエラーが発生した．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"おそらく，ローカルインストールをしておらず同様のエラーが出た場合は，エラー文に記載のとおりに\", _jsx(_components.a, {\n        href: \"https://reactjs.org/warnings/invalid-hook-call-warning.html\",\n        children: \"React 公式ページ\"\n      }), \"を参考にするのが良いと思われる．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"tldr\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#tldr\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"TL;DR\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"npm pack\"\n        }), \"によりパッケージング\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"npm install\"\n        }), \"でプロジェクトディレクトリではなく\", _jsx(_components.code, {\n          children: \"xxx.tgz\"\n        }), \"をインストール\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"エラー\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#エラー\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"エラー\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"まず前提として，\", _jsx(_components.code, {\n        children: \"npm intsall\"\n      }), \"でディレクトリパスを指定すると，該当ディレクトリの\", _jsx(_components.code, {\n        children: \"package.json\"\n      }), \"にある情報を元にローカルインストールされる．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"install\"\n        }), \" ./dir\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"このインストール方法を使って，React コンポーネントを含むライブラリをインストールし，アプリを起動しようとしたところ，以下のエラーが出た．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"Error: Invalid hook call. Hooks can only be called inside of the body of a \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" component. This could happen \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" one of the following reasons:\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \". You might have mismatching versions of React and the renderer \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"such as React DOM\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), \". You might be breaking the Rules of Hooks\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3\"\n        }), \". You might have \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"more\"\n        }), \" than one copy of React \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" the same app\\nSee https://reactjs.org/link/invalid-hook-call \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" tips about how to debug and fix this problem.\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"何の問題なのか\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#何の問題なのか\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"何の問題なのか？\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"「2 つの React」となっていることが問題である．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下簡単のため，自作したライブラリをライブラリ，ライブラリをインストールして使うアプリをアプリと呼ぶことにする．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"「2 つの React」とは，react library が２つ存在していることを意味しているようである．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"上述したローカルインストールの方法の挙動を調べてみた．方法としては， 1)通常のインストールの import 元を確認， 2)\", _jsx(_components.code, {\n        children: \"npm install ./dir\"\n      }), \"の import 元を確認をした．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"２点の確認の結果が以下となった．\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"~/node_modules/xxx\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"./dir/dist\"\n        }), \" (ちなみに，\", _jsx(_components.code, {\n          children: \"package.json\"\n        }), \"には\", _jsx(_components.code, {\n          children: \"./dist\"\n        }), \"をパスにするよう設定してある)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"この結果を踏まえると，\", _jsx(_components.code, {\n        children: \"~/node_modules/\"\n      }), \"以下に直接インストールされるわけではなく，参照しているようである．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"この時，\", _jsx(_components.code, {\n        children: \"./dir/dist\"\n      }), \"にあるファイルの import が\", _jsx(_components.code, {\n        children: \"./dir/node_modules\"\n      }), \"なのではないか．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以上が，問題点の分析となった．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"解決策\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#解決策\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"解決策？\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"npm link\"\n      }), \"という方法もあるようだが，これによる解決が根本的な解決には思えなかったため，別の方法を模索した(\", _jsx(_components.a, {\n        href: \"https://stackoverflow.com/a/57422196/16325804\",\n        children: \"参考\"\n      }), \")．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"npm link\"\n      }), \"によって，インストール先をアプリと一致させることで，「2 つの React」問題を解消するという内容であった．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"模索した結果\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#模索した結果\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"模索した結果\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ライブラリを参照じゃないインストールすることが問題解決のための目的となる．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"npm pack\"\n      }), \"を使うと，\", _jsx(_components.code, {\n        children: \"xxx.tgz\"\n      }), \"という名前でパッケージングされる．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"そして，その\", _jsx(_components.code, {\n        children: \"xxx.tgz\"\n      }), \"をインストールする．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"install\"\n        }), \" ./dir/xxx.tgz\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"package.json\"\n      }), \"内のインストール情報としては，\", _jsx(_components.code, {\n        children: \"file:./dir/xxx.tgz\"\n      }), \"となるが，import 元は\", _jsx(_components.code, {\n        children: \"./node_modules/xxx\"\n      }), \"となっており，おそらく，\", _jsx(_components.code, {\n        children: \"xxx.tgz\"\n      }), \"が\", _jsx(_components.code, {\n        children: \"./node_modules/\"\n      }), \"直下にモジュールを展開しているようである．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"エラーが出ずに望まれる挙動だったということは，「2 つの React」状態が解消したため，同じ\", _jsx(_components.code, {\n        children: \"react\"\n      }), \"を import できている事になるようだ．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"StackOverflow や Github の React リポジトリの Issue には同じ解放がなかったのだが，\", _jsx(_components.code, {\n        children: \"npm pack\"\n      }), \"にたどり着けてよかった．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これで，npm パッケージ開発が捗りそうである．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://stackoverflow.com/questions/56021112/react-hooks-in-react-library-giving-invalid-hook-call-error\",\n          children: \"https://stackoverflow.com/questions/56021112/react-hooks-in-react-library-giving-invalid-hook-call-error\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/facebook/react/issues/14721\",\n          children: \"https://github.com/facebook/react/issues/14721\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/facebook/react/issues/13991\",\n          children: \"https://github.com/facebook/react/issues/13991\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"reactのinvalid hook callエラー","date":"2021-10-16T22:50:03","description":"自作ライブラリのローカルインストールで発生する問題","tags":["react","npm","error","install","component","hook"]}},"__N_SSG":true}