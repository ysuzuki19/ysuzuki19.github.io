{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"コード全体","slug":"コード全体","lvl":2,"i":1},{"content":"解説","slug":"解説","lvl":2,"i":2}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"vector<int> height\"\n      }), \"が与えられ、インデックスの差を横幅、\", _jsx(_components.code, {\n        children: \"height\"\n      }), \"を高さと考えた時の、水が入る最大量を求める\", _jsx(_components.a, {\n        href: \"https://leetcode.com/problems/container-with-most-water/\",\n        children: \"問題\"\n      }), \"．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"この問題は、LeetCode上に例画像付きで出題されているので、そちらを見たほうがわかりやすいだろう。\\n水が入る最大量とは、「二つの要素を指定した時の最大の直方体面積」と考えるとわかりやすい。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"コード全体\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コード全体\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コード全体\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"maxArea\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" maxProduct \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" i \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" j \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"while\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"i \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \" j\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      maxProduct \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"max\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"maxProduct\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"else\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      maxProduct \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"max\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"maxProduct\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"--\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" maxProduct\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"解説\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#解説\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"解説\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"LeetCode上の\\\"Solution\\\"にアニメーションと共に解説が書かれているためそちらを見たほうが良いだろう。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"左右端を最初の値として、面積を出す。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"maxArea\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" maxProduct \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" i \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" j \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"左右が入れ替わらない限り、\", _jsx(_components.code, {\n        children: \"height[i]\"\n      }), \"と\", _jsx(_components.code, {\n        children: \"height[j]\"\n      }), \"の小さいほうを内側にずらしていく。\\nその時、横を\", _jsx(_components.code, {\n        children: \"(j-i)\"\n      }), \"と、縦を\", _jsx(_components.code, {\n        children: \"height[i]\"\n      }), \"/\", _jsx(_components.code, {\n        children: \"height[j]\"\n      }), \"の小さいほうとする。\\nそして、\", _jsx(_components.code, {\n        children: \"maxProduct\"\n      }), \"を値が大きい方へと更新する。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"while\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"i \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \" j\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      maxProduct \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"max\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"maxProduct\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"else\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      maxProduct \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"max\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"maxProduct\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"-\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"height\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"--\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"最後に、\", _jsx(_components.code, {\n        children: \"maxProduct\"\n      }), \"を返す。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" maxProduct\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Leetcode 11 Container With Most Water","date":"2020-05-26T17:55:20+09:00","description":"配列の最大面積を求める問題。","tags":["leetcode","c++"]}},"__N_SSG":true}