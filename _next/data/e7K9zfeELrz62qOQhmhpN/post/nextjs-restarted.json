{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"内容","slug":"内容","lvl":2,"i":1},{"content":"Next.js の特徴","slug":"nextjs-の特徴","lvl":3,"i":2},{"content":"ルーティング","slug":"ルーティング","lvl":3,"i":3},{"content":"ページ移動","slug":"ページ移動","lvl":3,"i":4},{"content":"Global CSS","slug":"global-css","lvl":3,"i":5},{"content":"メタデータの扱い","slug":"メタデータの扱い","lvl":3,"i":6},{"content":"Pre-rendering","slug":"pre-rendering","lvl":3,"i":7},{"content":"with Data","slug":"with-data","lvl":4,"i":8},{"content":"without Data","slug":"without-data","lvl":4,"i":9},{"content":"Dynamic Routes","slug":"dynamic-routes","lvl":3,"i":10},{"content":"404 をつくる","slug":"404-をつくる","lvl":3,"i":11},{"content":"API をつくる","slug":"api-をつくる","lvl":3,"i":12},{"content":"自分が Next.js を使っていなかったら知りたい Q&A","slug":"自分が-nextjs-を使っていなかったら知りたい-qa","lvl":2,"i":13},{"content":"全ての React 開発者が Next.js を使うべきか？","slug":"全ての-react-開発者が-nextjs-を使うべきか","lvl":3,"i":14},{"content":"どんな時に Next.js を選びたいか？","slug":"どんな時に-nextjs-を選びたいか","lvl":3,"i":15},{"content":"どのように Next.js を始めるとよいか？","slug":"どのように-nextjs-を始めるとよいか","lvl":3,"i":16},{"content":"おわりに","slug":"おわりに","lvl":2,"i":17},{"content":"参考","slug":"参考","lvl":2,"i":18}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Web アプリ開発では主に React を使っていて，その知識を活用しながら開発を進められるということで，以前 Next.js と Gatsby で悩んだ結果，本ブログは Next.js で構築している．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ブログ開設時には Next.js を体系的に学ばず，サンプルを改造することにより，最低限の必須事項をピックアップしながら Web ページを構築した．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そのため，Next.js について知らないことが多く，時間の余裕もあるということで，公式チュートリアルを進めながら再入門した．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"内容\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#内容\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"内容\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"nextjs-の特徴\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#nextjs-の特徴\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Next.js の特徴\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"React を使って Web ページを作る際，ミニマムな SPA を作るだけなら簡単だが，一歩深みに入ると，途端に難しくなる．Code Splitting や Lazy Loading などがそれにあたる．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"逆に，それを使わないと初期ロード時に全ての JS がバンドルされ，かなり初期ロードコストが上昇する．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"初期ロード時間以上に困るのが，SPA ライブラリにおいてロードされるのは HTML ページではなく JS の塊であり，JS を実行しないとページ内の文章を認識できないず，SEO に弱いという言説も聞くことがある(近年のクローラは JS を実行するという話を聞いたこともある)．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"その観点において Next.js は Pre-rendering という，全てのページをあらかじめレンダリングしておくという概念を持っており，とあるページに URL からアクセスした場合に初期表示が HTML 内に含まれており，高パフォーマンスで，かつ，SEO に弱くない．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"ルーティング\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ルーティング\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ルーティング\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Next.js におけるルーティングは，\", _jsx(_components.code, {\n        children: \"react-router-dom\"\n      }), \"等のようなソースコード内に記載する形ではなく，プロジェクトのディレクトリで定義する．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"この仕組みが，React がライブラリで Next.js がフレームワークであるというの点をよく表していると感じる．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"具体的に，\", _jsx(_components.code, {\n        children: \"pages/*\"\n      }), \"がルーティングにあたる．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"例えば，\", _jsx(_components.code, {\n        children: \"pages/index.js\"\n      }), \"はページのルート\", _jsx(_components.code, {\n        children: \"/\"\n      }), \"にあたり，\", _jsx(_components.code, {\n        children: \"pages/posts/first-post.js\"\n      }), \"は，\", _jsx(_components.code, {\n        children: \"/posts/first-post\"\n      }), \"にあたるといったものである．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"ページ移動\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ページ移動\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ページ移動\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Next.js において注意しなければ行けない点が，\", _jsx(_components.code, {\n        children: \"<a>\"\n      }), \"タグを使うと Next.js の強みを活かしきれないという点である．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"<a>\"\n      }), \"の代わりに\", _jsx(_components.code, {\n        children: \"<Link>\"\n      }), \"を使う．これは\", _jsx(_components.code, {\n        children: \"next/link\"\n      }), \"から import できるコンポーネントであり，Next.js 内でのリンクの役割を担う．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"<a>\"\n      }), \"を使ってしまうと，ブラウザの機能を使って全く新しいページとしてロードされてしまうため，極力使わないほうが良い．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-jsx\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token imports\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Link\"\n          })\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'next/link'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// ミニマム\"\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"Link\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token attr-name\",\n            children: \"href\"\n          }), _jsxs(_components.span, {\n            className: \"token attr-value\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation attr-equals\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            }), \"/posts/first-post\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token plain-text\",\n          children: \"text\"\n        }), _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"</\"\n            }), _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"Link\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// リンクの色にする\"\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"Link\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token attr-name\",\n            children: \"href\"\n          }), _jsxs(_components.span, {\n            className: \"token attr-value\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation attr-equals\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            }), \"/posts/first-post\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token attr-name\",\n            children: \"passHref\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token plain-text\",\n          children: \"\\n  \"\n        }), _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), \"a\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token plain-text\",\n          children: \"text\"\n        }), _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"</\"\n            }), \"a\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token plain-text\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"</\"\n            }), _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"Link\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"global-css\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#global-css\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Global CSS\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Next.js では，GlobalCSS は\", _jsx(_components.code, {\n        children: \"pages/_app.js\"\n      }), \"で読み込む．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここで言う GlobalCSS とは，\", _jsx(_components.code, {\n        children: \"html, body, *\"\n      }), \"などのスタイリングや，サイト全体に影響を及ぼすスタイリングのことを指す．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"_app.js\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-jsx\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'../styles/global.css'\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"App\"\n          })\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token parameter\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Component\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" pageProps\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"Component\"\n            })]\n          }), \" \", _jsxs(_components.span, {\n            className: \"token spread\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), _jsx(_components.span, {\n              className: \"token spread operator\",\n              children: \"...\"\n            }), \"pageProps\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"/>\"\n          })]\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"メタデータの扱い\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#メタデータの扱い\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"メタデータの扱い\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ページごとにタイトルを設定したり，メタデータを設定したいことがあると思う．そんな時は，\", _jsx(_components.code, {\n        children: \"<Head>\"\n      }), \"内に\", _jsx(_components.code, {\n        children: \"<meta>\"\n      }), \"を配置するとよい．\", _jsx(_components.code, {\n        children: \"<Head>\"\n      }), \"は\", _jsx(_components.code, {\n        children: \"next/head\"\n      }), \"から import 可能．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，ページごとに別の値が必要になりつつも一定のルールに基づいて記載するため，\", _jsx(_components.code, {\n        children: \"<Layout>\"\n      }), \"の Props に渡すのが良さそうと感じた．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"pre-rendering\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#pre-rendering\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Pre-rendering\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pre-rendering は，Next.js の長所の一つで，各ページの初期表示を HTML として表示する概念である．ブラウザの JS を無効にしてページにアクセスしてみるか，\", _jsx(_components.code, {\n        children: \"curl\"\n      }), \"コマンドで HTML を見ると，初期の HTML がどのようになっているのかを確認することが出来る．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pre-rendering には，Static Generation と Server-side Rendering (SSR) の２種類があり，ハイブリッドモードも選択可能である．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"２種類の Rendering 方法について，基本的には Static Generation で CDN で提供することが推奨されている．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Static Generation には良くない側面もあり，それは，Pre-rendering されたページが必ずしも最新版ではないという点である．その点においては Server-side Rendering は常に最新版のデータを返すというメリットがある(ただし SSR は低速である)．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"この面に関して言うと，Static Generation には Data を含めるのは必須ではなく，クライアント側で Fetch してもよい．\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"with-data\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#with-data\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"with Data\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"async\"\n      }), \"関数である\", _jsx(_components.code, {\n        children: \"getStaticProps\"\n      }), \"を使うと，データを埋め込みながら SG できる．この関数は，ページの表示コンポーネントに対して，静的な Props を注入できる．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-jsx\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Home\"\n          })\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"props\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token spread operator\",\n          children: \"...\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 戻り値がPageにpassされる．\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"getStaticProps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" data \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token spread operator\",\n          children: \"...\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"props\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token spread operator\",\n          children: \"...\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// propsを受けることが出来る．\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Page\"\n          })\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"props\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token spread operator\",\n          children: \"...\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"このデータ取得は，ページのコンポーネントの Pre-render のビルド時に呼ばれ，最初に解決される(development モードでは，リクエスト毎に呼び出される)．\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"without-data\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#without-data\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"without Data\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"データを Pre-render しなくても良い場合は，Client-side Rendering という方法がある．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これに向くのは，SEO に関係なく頻繁に変更されるデータ，例えばユーザのダッシュボードなどである．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"dynamic-routes\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#dynamic-routes\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Dynamic Routes\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ルーティングに，外部データを反映させる方法．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"/post/xxx\"\n      }), \"/\", _jsx(_components.code, {\n        children: \"/post/yyy\"\n      }), \"のように，タイトル等を基にルーティングを生成することが出来る．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"そのためには，\", _jsx(_components.code, {\n        children: \"getStaticPaths\"\n      }), \"を使う．これは，\", _jsx(_components.code, {\n        children: \"getStaticProps\"\n      }), \"と同様に，ページのコンポーネントのビルド時に用いられる．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"更に言うと，\", _jsx(_components.code, {\n        children: \"getStaticPaths\"\n      }), \"の結果が\", _jsx(_components.code, {\n        children: \"getStaticProps\"\n      }), \"に注入され，上述の項目につながる．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Dynamic Routes においても，ディレクトリベースのルーティングを用いるが，ここでは，\", _jsx(_components.code, {\n        children: \"[id].js\"\n      }), \"のようにすることで，Dynamic Routes を指定できる．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-jsx\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"getStaticPaths\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" paths \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"getAllPostIds\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"/*\\n  [\\n    {params: {id: 'xxx'}},\\n    {params: {id: 'yyy'}},\\n  ]\\n  */\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    paths\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"fallback\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"false\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"getStaticProps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token parameter\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" params \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" postData \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"getPostData\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"params\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"id\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"props\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      postData\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"getStaticPaths\"\n      }), \"の戻り値が\", _jsx(_components.code, {\n        children: \"getStaticProps\"\n      }), \"に注入されるが，その形式はコメントのとおりである．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"getStaticPaths\"\n      }), \"は，development モードでは毎度呼ばれるが，production モードではビルド時のみ呼ばれる．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"fallback: false\"\n      }), \"とすることで，\", _jsx(_components.code, {\n        children: \"getStaticPaths\"\n      }), \"で返されないページが 404 を返すようになる．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"初めて知ったのが，\", _jsx(_components.code, {\n        children: \"[...id].js\"\n      }), \"と\", _jsx(_components.code, {\n        children: \"id\"\n      }), \"を受け，\", _jsx(_components.code, {\n        children: \"params: id: ['a', 'b']\"\n      }), \"と渡すと，\", _jsx(_components.code, {\n        children: \"/pages/posts/a/b\"\n      }), \"というルートになるようだ．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"404-をつくる\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#404-をつくる\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"404 をつくる\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"pages/404.js\"\n      }), \"とすると，404 で返すページを作れる．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"api-をつくる\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#api-をつくる\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"API をつくる\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"pages/api/xx.js\"\n      }), \"とすると，\", _jsx(_components.code, {\n        children: \"/api/xx\"\n      }), \"の API を作ることが出来る．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"形式は，\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"pages/api/hello.js\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-js\",\n      children: _jsxs(_components.code, {\n        className: \"language-js\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"handler\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token parameter\",\n          children: [\"req\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" res\"]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// req: HTTP incoming message\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// res: HTTP server response\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token spread operator\",\n          children: \"...\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// res.status(200).json({text: 'hello'})\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また，API も Dynamic API Routes といって，Dynamic な API を提供する．この場合も，\", _jsx(_components.code, {\n        children: \"pages/api/[pid].js\"\n      }), \"のようにし，以下のように\", _jsx(_components.code, {\n        children: \"pid\"\n      }), \"を受け取ることが出来る．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"pages/api/[pid].js\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-js\",\n      children: _jsxs(_components.code, {\n        className: \"language-js\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"handler\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token parameter\",\n          children: [\"req\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" res\"]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" pid \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" req\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"query\"\n        }), \"\\n  res\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"end\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token template-string\",\n          children: [_jsx(_components.span, {\n            className: \"token template-punctuation string\",\n            children: \"`\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"Post: \"\n          }), _jsxs(_components.span, {\n            className: \"token interpolation\",\n            children: [_jsx(_components.span, {\n              className: \"token interpolation-punctuation punctuation\",\n              children: \"${\"\n            }), \"pid\", _jsx(_components.span, {\n              className: \"token interpolation-punctuation punctuation\",\n              children: \"}\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token template-punctuation string\",\n            children: \"`\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"自分が-nextjs-を使っていなかったら知りたい-qa\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#自分が-nextjs-を使っていなかったら知りたい-qa\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"自分が Next.js を使っていなかったら知りたい Q&A\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Next.js を始めるか悩んでいた頃に気になっていたことを勝手に答えてしまう．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"全ての-react-開発者が-nextjs-を使うべきか\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#全ての-react-開発者が-nextjs-を使うべきか\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"全ての React 開発者が Next.js を使うべきか？\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そんなことはない．Next.js を扱えても，小さい Web アプリは React で作りたい．ただ，Web ページとなると Next.js を使う利点が大きくかんじる．WordPress みたいなノリで CMS 的な使い方をするなら Gatsby という選択も良いと思う．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"どんな時に-nextjs-を選びたいか\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#どんな時に-nextjs-を選びたいか\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"どんな時に Next.js を選びたいか？\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"React の初期ロードが遅く感じる規模の Web アプリ・SEO を考慮した開発・Web ページを作りたい時\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"どのように-nextjs-を始めるとよいか\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#どのように-nextjs-を始めるとよいか\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"どのように Next.js を始めるとよいか？\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"具体的な目的があれば，\", _jsx(_components.a, {\n        href: \"https://nextjs.org/examples\",\n        children: \"Examples\"\n      }), \"からピックアップして，改変して目的を目指すのが良いと思う．学ぶことを目的とする場合は，公式チュートリアルをやってみて，興味のある Eample を動かしてみるのが良いと思う．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Next.js やっぱりいいね！！\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これまでに学んできたことの再確認，および，分散して学習した内容の体系化ができたので，時間をかけてでも公式チュートリアルをやってみてよかった．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://nextjs.org/learn\",\n          children: \"https://nextjs.org/learn\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://nextjs.org/docs/api-routes/dynamic-api-routes\",\n          children: \"https://nextjs.org/docs/api-routes/dynamic-api-routes\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"next.js再入門した","date":"2021-11-07T14:13:05","description":"体系的に学んだことがなかったので公式チュートリアルやってみて簡単にまとめた","tags":["nextjs","react","tutorial","javascript"]}},"__N_SSG":true}