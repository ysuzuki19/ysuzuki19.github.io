{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"エラー内容","slug":"エラー内容","lvl":2,"i":1},{"content":"取り敢えず直った方法","slug":"取り敢えず直った方法","lvl":2,"i":2},{"content":"方法によって変更された箇所","slug":"方法によって変更された箇所","lvl":2,"i":3},{"content":"おわりに","slug":"おわりに","lvl":2,"i":4}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Gatsby やってみようと思った．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"全く勝手がわからないので，取り敢えず\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://www.gatsbyjs.com/starters/gperl27/Gatsby-Starter-Blog-Typescript\",\n        children: \"公式ページに記載されているスターター\"\n      }), \"を使って楽を仕様とした．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ビルドしようとしたところ，一つエラーが発生した．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"エラー内容\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#エラー内容\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"エラー内容\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"とりあえずスターターのディレクトリに入り，\", _jsx(_components.code, {\n        children: \"npm start\"\n      }), \"を押すと，ローカルホストが建った．\\n無事起動したと思ったが，リンクをクリックしようとすると，謎のエラー文が表示された．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そのままリロードするとリンク先が表示されるのだが，ブラウザバックをすると再び謎のエラーが表示された．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"表示されたエラーが一部抜粋が以下．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"TypeError: _gsap.default.timeline is not a \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"取り敢えず直った方法\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#取り敢えず直った方法\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"取り敢えず直った方法\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"原因は究明できなかったが，取り敢えず以下の方法でエラーは解消され，無事スターターが動作した．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), \" uninstall gsap\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"install\"\n        }), \" gsap\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"方法によって変更された箇所\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#方法によって変更された箇所\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"方法によって変更された箇所\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"package.json\"\n      }), \"の中身の，\", _jsx(_components.code, {\n        children: \"gsap\"\n      }), \"パッケージのバージョンが変更した．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"package.json\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-json\",\n      children: _jsxs(_components.code, {\n        className: \"language-json\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// Before\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"gsap\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"^2.1.2\\\"\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// After\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"gsap\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"^3.6.1\\\"\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"今回は，取り敢えず\", _jsx(_components.code, {\n        children: \"gsap\"\n      }), \"パッケージの再インストールで動作したのですが，\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"TypeError\"\n      }), \"だったので，\", _jsx(_components.code, {\n        children: \"npm install @types/gsap\"\n      }), \"も試す予定でした．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"上記の方法でエラーが解消されない方はお試ししてみてください．\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Gatsby+Typescriptでブログ生成するときのエラー解消","date":"2021-05-13T22:16:59","description":"TypeError:  gsap.default.timeline is not a function ..を解消する","tags":["gatsby","typescript","error"]}},"__N_SSG":true}