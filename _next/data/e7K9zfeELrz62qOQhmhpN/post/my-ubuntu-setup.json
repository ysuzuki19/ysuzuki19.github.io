{"pageProps":{"toc":[{"content":"GRUB メニューの設定","slug":"grub-メニューの設定","lvl":2,"i":0},{"content":"CapsLock を Ctrl に変更","slug":"capslock-を-ctrl-に変更","lvl":2,"i":1},{"content":"ホームディレクトリを英語にする","slug":"ホームディレクトリを英語にする","lvl":2,"i":2},{"content":"ターミナルを英語環境にする","slug":"ターミナルを英語環境にする","lvl":2,"i":3},{"content":"パッケージのインストール","slug":"パッケージのインストール","lvl":2,"i":4},{"content":"ターミナル設定","slug":"ターミナル設定","lvl":2,"i":5},{"content":"ドットファイルをダウンロード","slug":"ドットファイルをダウンロード","lvl":2,"i":6},{"content":"キーボード入力を Emacs 風にする","slug":"キーボード入力を-emacs-風にする","lvl":2,"i":7},{"content":"NVIDIA ドライバのインストール","slug":"nvidia-ドライバのインストール","lvl":2,"i":8},{"content":"Vivaldi のインストール","slug":"vivaldi-のインストール","lvl":2,"i":9},{"content":"Slack のインストール","slug":"slack-のインストール","lvl":2,"i":10},{"content":"Zoom のインストール","slug":"zoom-のインストール","lvl":2,"i":11},{"content":"Google-Chrome のインストール","slug":"google-chrome-のインストール","lvl":2,"i":12}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Ubuntu20.04LTS をインストールしました。\\n私の場合、今後何度も再インストールすると思われる（よく壊す）ので、自分用の設定の流れを一つのページにまとめることにしました。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"grub-メニューの設定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#grub-メニューの設定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"GRUB メニューの設定\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"GPU を積んでいるので、GRUB メニューに\", _jsx(_components.code, {\n        children: \"nomodeset\"\n      }), \"を追加している。起動時に毎回編集するのは骨が折れるので、書き換えておく。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"GRUB_CMDLINE_LINUX_DEFAULT=\\\"quiet splash\\\"\\n↓\\nGRUB_CMDLINE_LINUX_DEFAULT=\\\"quiet splash nomodeset\\\"\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"その後、以下のコマンドを実行する（再起動では更新してくれない）。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token function\",\n          children: \"sudo\"\n        }), \" update-grub2\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"capslock-を-ctrl-に変更\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#capslock-を-ctrl-に変更\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"CapsLock を Ctrl に変更\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"/etc/default/keyboard\"\n      }), \"を書き換える。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"XKBOPTIONS=\\\"\\\"\\n↓\\nXKBOPTIONS=\\\"ctrl:nocaps\\\"\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"その後、再起動か以下のコマンドを実行する\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token function\",\n          children: \"sudo\"\n        }), \" systemctl restart console-setup\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"ホームディレクトリを英語にする\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ホームディレクトリを英語にする\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ホームディレクトリを英語にする\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"日本語の言語設定をするのが面倒な私は、日本語 Remix をインストールするようにしている。その時、ホームディレクトリも日本語になっているのがターミナル使用上嬉しくないので、英語に戻す。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下のコマンドを実行する。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: _jsx(_components.span, {\n            className: \"token environment constant\",\n            children: \"LANG\"\n          })\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"C xdg-user-dirs-gtk-update\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"ターミナルを英語環境にする\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ターミナルを英語環境にする\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ターミナルを英語環境にする\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"/etc/default/locale\"\n      }), \"を以下に変更し、再起動する。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"LANG=\\\"en_US.UTF-8\\\"\\nLANGUAGE=\\\"en_US:en\\\"\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"パッケージのインストール\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#パッケージのインストール\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"パッケージのインストール\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"よく使うパッケージをインストール（vim は、vi という名前で使用できるが一応）\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token function\",\n          children: \"sudo\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"apt\"\n        }), \" update\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sudo\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"apt\"\n        }), \" upgrade\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sudo\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"apt\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"install\"\n        }), \" tmux \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"vim\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"ターミナル設定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ターミナル設定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ターミナル設定\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Ctrl+Alt+t\"\n      }), \"でターミナルを開く。\\nターミナル上で右クリック\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"Text > Cursor shape: I-Beam\\nText > Terminal bell: チェック外す\\nColors > Use transparency from system theme: チェック外す\\nColors > Use transparent background: チェック入れて、好みの透過度にする\\nColors > Palette: 好きなカラー設定にする\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"ドットファイルをダウンロード\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ドットファイルをダウンロード\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ドットファイルをダウンロード\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"自分のターミナル設定を Github で管理している。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" clone https://\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), \".\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"キーボード入力を-emacs-風にする\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#キーボード入力を-emacs-風にする\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"キーボード入力を Emacs 風にする\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"エディタとしては Vim が好きだが、通常の入力（ブラウザの検索窓など）では Emacs 風だと便利であるため、以下のコマンドで設定を変更する。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"gsettings \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"set\"\n        }), \" org.gnome.desktop.interface gtk-key-theme Emacs\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"nvidia-ドライバのインストール\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#nvidia-ドライバのインストール\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"NVIDIA ドライバのインストール\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"NVIDIA ドライバを一番簡単にインストールできる方法を記載した \", _jsx(_components.a, {\n        href: \"https://linoxide.com/linux-how-to/how-to-install-nvidia-driver-on-ubuntu/%22\",\n        children: \"参考\"\n      }), \"。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"Software Updaterを開く\\nSoftware Updater > Settingをクリック\\nSoftware Updater > Additional Driversを選択\\nSoftware Updater > Additional Drivers > Using NVIDIA driver metapackage from nvidia-driver... の一番上を選択\\nターミナルで`$ sudo ubuntu-drivers autoinstall`を実行\\n再起動\\n`nvidia-smi`でGPU負荷が表示されるか確認\\n\\n※表示されない場合、別のバージョンの「Using NVIDIA driver metapackage from nvidia-driver...」を試すと良い。\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"vivaldi-のインストール\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#vivaldi-のインストール\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Vivaldi のインストール\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"お気に入りのブラウザである Vivaldi を\\n\", _jsx(_components.a, {\n        href: \"https://vivaldi.com/ja/download/\",\n        children: \"公式ページ\"\n      }), \"\\nからダウンロードし、インストール。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"マウスジェスチャー等の設定をする。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"slack-のインストール\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#slack-のインストール\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Slack のインストール\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://slack.com/intl/ja-jp/downloads/linux\",\n        children: \"公式ページ\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"から DEB をダウンロードし、インストール。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"zoom-のインストール\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#zoom-のインストール\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Zoom のインストール\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://zoom.us/download?os=linux\",\n        children: \"公式ページ\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"から DEB をダウンロードしインストール。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"google-chrome-のインストール\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#google-chrome-のインストール\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Google-Chrome のインストール\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.google.com/chrome/\",\n        children: \"公式ページ\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"から DEB をダウンロードしインストール。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Ubuntu初期設定メモ","date":"2020-05-29T16:17:28+09:00","description":"自分メモ（２年おきに使いそう笑）","tags":["ubuntu","setup","keyboard","locale"]}},"__N_SSG":true}