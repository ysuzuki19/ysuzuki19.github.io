{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"コード全文","slug":"コード全文","lvl":2,"i":1},{"content":"解説","slug":"解説","lvl":2,"i":2},{"content":"struct 準備","slug":"struct-準備","lvl":3,"i":3},{"content":"コンストラクタ","slug":"コンストラクタ","lvl":3,"i":4},{"content":"add method","slug":"add-method","lvl":3,"i":5},{"content":"remove method","slug":"remove-method","lvl":3,"i":6},{"content":"contains method","slug":"contains-method","lvl":3,"i":7},{"content":"おわりに","slug":"おわりに","lvl":2,"i":8},{"content":"参考","slug":"参考","lvl":2,"i":9}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ビルトインの hash table library を使わずに hash set を実装する\", _jsx(_components.a, {\n        href: \"https://leetcode.com/problems/design-hashset/\",\n        children: \"問題\"\n      }), \"．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rust を使って，簡単な方法で解いてみる（この問題を解くためのベストの方法ではないのでご注意！！）．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"コード全文\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コード全文\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コード全文\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"問題の条件では，\", _jsx(_components.code, {\n        children: \"key\"\n      }), \"が\", _jsx(_components.code, {\n        children: \"0 <= key <= 10^6\"\n      }), \"となっていたので，「行けるだろ」ということで，フラグを格納する\", _jsx(_components.code, {\n        children: \"10^6+1\"\n      }), \"の長さを持つブール配列を準備した．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"main.rs\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token type-definition class-name\",\n          children: \"MyHashSet\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  flags\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Vec\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"bool\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"impl\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"MyHashSet\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"new\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"->\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"Self\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"Self\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" flags\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"vec!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"false\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1000001\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"add\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mut\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" key\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"i32\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"flags\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"key \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"as\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"usize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"true\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"remove\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mut\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" key\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"i32\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"flags\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"key \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"as\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"usize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"false\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"contains\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" key\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"i32\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"->\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"bool\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"flags\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"key \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"as\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"usize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"解説\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#解説\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"解説\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"struct-準備\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#struct-準備\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"struct 準備\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"flags\"\n      }), \"の\", _jsx(_components.code, {\n        children: \"key\"\n      }), \"番目には\", _jsx(_components.code, {\n        children: \"key\"\n      }), \"が含まれているかどうかの状態を\", _jsx(_components.code, {\n        children: \"bool\"\n      }), \"型で記録するような実装を行う．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token type-definition class-name\",\n          children: \"MyHashSet\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  flags\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Vec\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"bool\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"コンストラクタ\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コンストラクタ\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コンストラクタ\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"MyHashSet::new()\"\n      }), \"により，\", _jsx(_components.code, {\n        children: \"MyHashSet\"\n      }), \"を初期化出来る．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"初期化時は，長さ\", _jsx(_components.code, {\n        children: \"1000001\"\n      }), \"の\", _jsx(_components.code, {\n        children: \"false\"\n      }), \"を持つ\", _jsx(_components.code, {\n        children: \"flags\"\n      }), \"を準備する．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"impl\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"MyHashSet\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"new\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"->\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"Self\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"Self\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" flags\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"vec!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"false\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1000001\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"add-method\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#add-method\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"add method\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"key\"\n      }), \"を追加するためのメソッド．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ミュータブルメソッドのため，\", _jsx(_components.code, {\n        children: \"&mut self\"\n      }), \"とし，\", _jsx(_components.code, {\n        children: \"key\"\n      }), \"番目の値を\", _jsx(_components.code, {\n        children: \"true\"\n      }), \"にする．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここで，入力される\", _jsx(_components.code, {\n        children: \"key\"\n      }), \"の型は\", _jsx(_components.code, {\n        children: \"i32\"\n      }), \"であり，直接\", _jsx(_components.code, {\n        children: \"Vec\"\n      }), \"のキーとすることは出来ないため，\", _jsx(_components.code, {\n        children: \"key as usize\"\n      }), \"により，型キャストを行い，要素にアクセスする．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [\"  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"add\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mut\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" key\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"i32\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"flags\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"key \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"as\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"usize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"true\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"remove-method\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#remove-method\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"remove method\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"key\"\n      }), \"を削除するためのメソッド．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"key\"\n      }), \"番目の値を\", _jsx(_components.code, {\n        children: \"true\"\n      }), \"にする．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [\"  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"remove\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"mut\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" key\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"i32\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"flags\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"key \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"as\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"usize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"false\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"contains-method\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#contains-method\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"contains method\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"要素が含まれるかを確認するメソッド．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"例によって，型キャストを行って取得できる要素を戻り値とする．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [\"  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-definition function\",\n          children: \"contains\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" key\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"i32\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"->\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"bool\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"self\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"flags\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"key \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"as\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"usize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"メンバ関数に関して，C++では\", _jsx(_components.code, {\n        children: \"const\"\n      }), \"を付けることでイミュータブルに出来るのに対し，Rust では\", _jsx(_components.code, {\n        children: \"mut\"\n      }), \"を付けることでミュータブルにできるという点から，両者の違いが伝わってくる．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://doc.rust-lang.org/std/vec/struct.Vec.html\",\n          children: \"https://doc.rust-lang.org/std/vec/struct.Vec.html\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://rust-unofficial.github.io/patterns/idioms/ctor.html\",\n          children: \"https://rust-unofficial.github.io/patterns/idioms/ctor.html\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://doc.rust-lang.org/std/slice/index.html\",\n          children: \"https://doc.rust-lang.org/std/slice/index.html\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://stackoverflow.com/questions/27022848/how-i-can-mutate-a-structs-field-from-a-method\",\n          children: \"https://stackoverflow.com/questions/27022848/how-i-can-mutate-a-structs-field-from-a-method\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"[Rust]leetcode 705 Design Hashset","date":"2022-04-21T23:14:35","description":"LeetCode705をシンプルな方法で解いてみる","tags":["rust","leetcode"]}},"__N_SSG":true}