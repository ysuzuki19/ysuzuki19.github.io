{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"sqlxの特徴","slug":"sqlxの特徴","lvl":2,"i":1},{"content":"使い方","slug":"使い方","lvl":2,"i":2},{"content":"depsに追加","slug":"depsに追加","lvl":3,"i":3},{"content":"Connection Poolを準備","slug":"connection-poolを準備","lvl":3,"i":4},{"content":"SQL実行の形","slug":"sql実行の形","lvl":3,"i":5},{"content":"複数のRecordを取得する場合","slug":"複数のrecordを取得する場合","lvl":4,"i":6},{"content":"単一のRecordを取得する場合","slug":"単一のrecordを取得する場合","lvl":4,"i":7},{"content":"型チェック無しでSQLを実行","slug":"型チェック無しでsqlを実行","lvl":3,"i":8},{"content":"引数なし","slug":"引数なし","lvl":4,"i":9},{"content":"引数あり","slug":"引数あり","lvl":4,"i":10},{"content":"型チェック有りでSQLを実行","slug":"型チェック有りでsqlを実行","lvl":3,"i":11},{"content":"引数なし","slug":"引数なし-1","lvl":4,"i":12},{"content":"引数あり","slug":"引数あり-1","lvl":4,"i":13},{"content":"tips","slug":"tips","lvl":2,"i":14},{"content":"COUNTがcheckできない","slug":"countがcheckできない","lvl":3,"i":15},{"content":"vscodeでsqlxの即時補完を有効にする","slug":"vscodeでsqlxの即時補完を有効にする","lvl":3,"i":16},{"content":"おわりに","slug":"おわりに","lvl":2,"i":17},{"content":"参考","slug":"参考","lvl":2,"i":18}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"RustからRelational DBにアクセスする際に様々なライブラリがあるが、その中でもsqlxの使用感が良かったので、メモ書きを残す。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"sqlxの特徴\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#sqlxの特徴\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"sqlxの特徴\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"非同期対応しており、DSLなしでコンパイル時にクエリのチェックをしてくれるクレート。\\n対応しているDBはPostgreSQL, MySQL, MariaDB, SQLiteとなっている。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ORMと比較されているものも多く見られるが、実際にはORMではなく、SQLをベースとし、望むならクエリチェックを行う仕組みをとっている。\\n感覚的には、ORMよりも直接SQLを書きたい場合のラッパーライブラリに近い。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"使い方\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#使い方\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"使い方\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"depsに追加\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#depsに追加\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"depsに追加\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"featuresは各々の環境に合わせてであるが、このような形で \", _jsx(_components.code, {\n        children: \"Cargo.toml\"\n      }), \"に追加する。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ここでのサンプルは、MySQLとする。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-toml\",\n      children: _jsxs(_components.code, {\n        className: \"language-toml\",\n        children: [_jsx(_components.span, {\n          className: \"token key property\",\n          children: \"sqlx\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key property\",\n          children: \"version\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"0.8\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key property\",\n          children: \"features\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"runtime-tokio\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"mysql\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"macros\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"connection-poolを準備\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#connection-poolを準備\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Connection Poolを準備\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Connection Poolを準備するコード。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" pool \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"MySqlPoolOptions\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"new\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"max_connections\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"5\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"connect\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"mysql://username:password@localhost:3306/dbname\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下のサンプルコードで、これを使いまわすものとする。\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"sql実行の形\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#sql実行の形\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"SQL実行の形\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"sqlx::query()\"\n      }), \"を使うと型の自動割当なしで、\", _jsx(_components.code, {\n        children: \"sqlx::query!()\"\n      }), \"を使うと型の自動割当ありでSQLを実行できる。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"まずは、基本的なSQL実行の形を紹介する。\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"複数のrecordを取得する場合\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#複数のrecordを取得する場合\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"複数のRecordを取得する場合\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" rows \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"sqlx\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"query\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"SELECT * FROM users\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"fetch_all\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"pool\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"単一のrecordを取得する場合\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#単一のrecordを取得する場合\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"単一のRecordを取得する場合\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" row \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"sqlx\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"query\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"SELECT * FROM users WHERE id = ?\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"bind\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"3170534137668829185\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"fetch_one\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"pool\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Recordが存在しない場合は、\", _jsx(_components.code, {\n        children: \".feth_one()\"\n      }), \"の\", _jsx(_components.code, {\n        children: \"Result\"\n      }), \"が、\", _jsx(_components.code, {\n        children: \"Err(sqlx::Error::RowNotFound)\"\n      }), \"となるので、これをチェックすることで、様々なエラーハンドリングが可能。存在しない場合にエラーを伝搬させるだけで良い場合は、\", _jsx(_components.code, {\n        children: \"?\"\n      }), \"で問題ない。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"型チェック無しでsqlを実行\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#型チェック無しでsqlを実行\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"型チェック無しでSQLを実行\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"引数なし\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#引数なし\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"引数なし\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"SQL実行と、recordのフィールドへのアクセスの例がこちら。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"型指定はフィッシュ構文でも型推論でもどちらでも良く、文字列は\", _jsx(_components.code, {\n        children: \"&str\"\n      }), \"でも\", _jsx(_components.code, {\n        children: \"String\"\n      }), \"でも良い。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" sql \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"SELECT * FROM users\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" rows \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"sqlx\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"query\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"sql\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"fetch_all\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"pool\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" rows\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"is_empty\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"No rows found\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Ok\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" row \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" rows \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" id \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" row\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"get\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"i64\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" _\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"id\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"                 \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// キーが存在しないか、i64に変換できない場合、panicとなる\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// let id: i64 = row.try_get(\\\"id\\\")?;              // このように、型推論に頼ることも可能\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"str\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" row\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"try_get\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" _\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"name\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// キーが存在しない、あるいは変換ができない場合、Errを返す\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// let name: String = row.try_get(\\\"name\\\")?;       // 型推論でもよいし、`String`でもよい\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"id: {}, name: {}\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" id\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"引数あり\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#引数あり\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"引数あり\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"SQLを用いて、SQLに入力を渡してを実行する場合は、placeholderと\", _jsx(_components.code, {\n        children: \"bind\"\n      }), \"メソッドを使う。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" sql \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"SELECT * FROM users WHERE id = ?\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" rows \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"sqlx\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"query\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"sql\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"bind\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"3170534137668829185\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"fetch_all\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"pool\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" rows\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"is_empty\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"No rows found\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Ok\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" row \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" rows \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" id \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" row\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"get\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"i64\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" _\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"id\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" name \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" row\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"try_get\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"::\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" _\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"name\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"id: {}, name: {}\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" id\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"PostgreSQLの場合は、\", _jsx(_components.code, {\n        children: \"$1\"\n      }), \"のようにplaceholderを指定するとのこと(\", _jsx(_components.a, {\n        href: \"https://docs.rs/sqlx/latest/sqlx/fn.query.html#dynamic-input-use-query-parameters-prevents-sql-injection\",\n        children: \"ref\"\n      }), \")。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"型チェック有りでsqlを実行\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#型チェック有りでsqlを実行\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"型チェック有りでSQLを実行\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここがsqlxの大きな特徴で、記述したSQLの型を事前にチェックすることが可能。チェックするにとどまらず、マクロによって自動でその型を割り当ててくれ、上述した \", _jsx(_components.code, {\n        children: \"get\"\n      }), \"による取得や、フィールドの存在チェックを省くことが可能。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下のコードを書いたあとに、\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ cargo sqlx prepare\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"## 利用DBの宛先を指定する方法\"\n        }), \"\\n$ \", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"DATABASE_URL\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"mysql://username:password@localhost:3306/dbname cargo sqlx prepare\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"を実行し、\", _jsx(_components.code, {\n        children: \".sqlx\"\n      }), \"にSQLに対する型情報をキャッシュする。これを準備したら、\", _jsx(_components.code, {\n        children: \"sqlx::query!\"\n      }), \"が型を自動で割り当ててくれ、型を手動で定義せずに、上述したコードで\", _jsx(_components.code, {\n        children: \"row.id\"\n      }), \"や\", _jsx(_components.code, {\n        children: \"row.name\"\n      }), \"のように、フィールドにアクセスできるようになる。\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"引数なし-1\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#引数なし-1\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"引数なし\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"sqlx::query!\"\n      }), \"の場合、\", _jsx(_components.code, {\n        children: \"let sql = \\\"...\\\"\"\n      }), \"のように、SQLを変数に格納することはできず、SQLを直接書く必要がある。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" rows \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"sqlx\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"query!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"SELECT * FROM users\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"fetch_all\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"pool\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" rows\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"is_empty\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"No rows found\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Ok\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" row \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" rows \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"id: {}, name: {}\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" row\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"id\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" row\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"DATABASE_URL\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"mysql://username:password@localhost:3306/dbname cargo sqlx prepare\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"引数あり-1\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#引数あり-1\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"引数あり\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" rows \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"sqlx\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"query!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"SELECT * FROM users WHERE id = ?\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"3170534137668829185\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"fetch_all\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"pool\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" rows\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"is_empty\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"No rows found\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Ok\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" row \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" rows \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"println!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"id: {}, name: {}\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" row\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"id\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" row\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"DATABASE_URL\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"mysql://username:password@localhost:3306/dbname cargo sqlx prepare\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"tips\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#tips\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"tips\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"countがcheckできない\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#countがcheckできない\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"COUNTがcheckできない\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"COUNT\"\n      }), \"だけにとどまらず、他の集約関数も同様の問題が発生する可能性がある。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下のようなコードで、\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" row \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"sqlx\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"query!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"SELECT COUNT(id) FROM users\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"fetch_one\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"pool\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"cargo sqlx prepare\"\n      }), \"をすると、\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"column name \\\"COUNT(id)\\\" is invalid: \\\"COUNT(id)\\\" is not a valid Rust identifierrustcClick for full compiler diagnostic\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"というエラーとなる。この対処のためには、\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" row \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"sqlx\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token macro property\",\n          children: \"query!\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"SELECT COUNT(id) AS cnt FROM users\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"fetch_one\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"pool\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"await\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"といったように、\", _jsx(_components.code, {\n        children: \"AS\"\n      }), \"を使って、SQLのカラム名を変更するとよい。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"vscodeでsqlxの即時補完を有効にする\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#vscodeでsqlxの即時補完を有効にする\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"vscodeでsqlxの即時補完を有効にする\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"VSCodeでrust-analyzerを使っている場合、エディタによって \", _jsx(_components.code, {\n        children: \"cargo sqlx prepare\"\n      }), \"相当のことを内部で実現可能。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"何も設定せずに \", _jsx(_components.code, {\n        children: \"cargo sqlx prepare\"\n      }), \"も実行しないで \", _jsx(_components.code, {\n        children: \"sqlx::query!\"\n      }), \"にクエリを書くと、\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"set `DATABASE_URL` to use query macros online, or run `cargo sqlx prepare` to update the query cacherustcClick for full compiler diagnostic\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"とエラーが出る。これは、onlineモードでのクエリチェック上のエラーで、rust-analyzerの実行時に、有効な\", _jsx(_components.code, {\n        children: \"DATABASE_URL\"\n      }), \"を持っていると良い。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"そこで、 \", _jsx(_components.code, {\n        children: \".vscode/settings.json\"\n      }), \"を準備し、そこに\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \".vscode/settings.json\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-json\",\n      children: _jsxs(_components.code, {\n        className: \"language-json\",\n        children: [_jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"rust-analyzer.server.extraEnv\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"DATABASE_URL\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"mysql://username:password@localhost:3306/dbname\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"と加えることで、コードを書くごとに都度 \", _jsx(_components.code, {\n        children: \"cargo sqlx prepare\"\n      }), \"を実行せずに、それ相当のことを実現可能（最終的には必要になるだろうが）。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ORMとしてはSeaORMが使用感よい印象だが、よりSQLに近い形で記述でき、かつ型チェックやフィールドの存在チェック、開発効率のための補完の支援があるsqlxは、特定の状況下においては重宝するだろう。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.rs/sqlx/latest/sqlx/fn.query.html#dynamic-input-use-query-parameters-prevents-sql-injection\",\n          children: \"https://docs.rs/sqlx/latest/sqlx/fn.query.html#dynamic-input-use-query-parameters-prevents-sql-injection\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Rustでsqlxを使うメモ","date":"2025-05-13T00:10:45+09:00","description":"環境設定や使い方、トラブル対処方法など","tags":["rust","sqlx","rdbms","mysql","sql"]}},"__N_SSG":true}