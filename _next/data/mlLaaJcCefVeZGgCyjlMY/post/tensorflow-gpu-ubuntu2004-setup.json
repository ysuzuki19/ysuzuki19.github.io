{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"環境","slug":"環境","lvl":2,"i":1},{"content":"ココを見よう","slug":"ココを見よう","lvl":2,"i":2},{"content":"とりあえず pip","slug":"とりあえず-pip","lvl":2,"i":3},{"content":"CUDA をインストール","slug":"cuda-をインストール","lvl":2,"i":4},{"content":"cuDNN をインストール","slug":"cudnn-をインストール","lvl":2,"i":5},{"content":"GPU チェック","slug":"gpu-チェック","lvl":2,"i":6},{"content":"エラーで困っている人","slug":"エラーで困っている人","lvl":2,"i":7},{"content":"おわりに","slug":"おわりに","lvl":2,"i":8},{"content":"参考","slug":"参考","lvl":2,"i":9}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    div: \"div\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"/post/ubuntu-setup-tensorflow-gpu\",\n        children: \"以前構築\"\n      }), \"した\", _jsx(_components.code, {\n        children: \"tensorflow-gpu\"\n      }), \"は，バージョンが\", _jsx(_components.code, {\n        children: \"23\"\n      }), \"と古く，気分が悪かったので更新しました．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"環境\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#環境\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"環境\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"~ $ neofetch\\n            .-/+oossssoo+/-.               ***@***********\\n        \", _jsxs(_components.span, {\n          className: \"token variable\",\n          children: [_jsx(_components.span, {\n            className: \"token variable\",\n            children: \"`\"\n          }), \":+ssssssssssssssssss+:\", _jsx(_components.span, {\n            className: \"token variable\",\n            children: \"`\"\n          })]\n        }), \"           ------------------\\n      -+ssssssssssssssssssyyssss+-         OS: Ubuntu \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"20.04\"\n        }), \".* LTS x86_64\\n    .ossssssssssssssssssdMMMNysssso.       Host: ******\\n   /ssssssssssshdmmNNmmyNMMMMhssssss/      Kernel: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"5.8\"\n        }), \".0-59-generic\\n  +ssssssssshmydMMMMMMMNddddyssssssss+     Uptime: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"21\"\n        }), \" mins\\n /sssssssshNMMMyhhyyyyhmNMMMNhssssssss/    Packages: ***** \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"dpkg\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \", *** \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"snap\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n.ssssssssdMMMNhsssssssssshNMMMdssssssss.   Shell: ************\\n+sssshhhyNMMNyssssssssssssyNMMMysssssss+   Resolution: 2560x1440\\nossyNMMMNyMMhsssssssssssssshmmmhssssssso   DE: GNOME\\nossyNMMMNyMMhsssssssssssssshmmmhssssssso   WM: Mutter\\n+sssshhhyNMMNyssssssssssssyNMMMysssssss+   WM Theme: Adwaita\\n.ssssssssdMMMNhsssssssssshNMMMdssssssss.   Theme: Yaru-dark \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"GTK2/3\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n /sssssssshNMMMyhhyyyyhdNMMMNhssssssss/    Icons: Yaru \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"GTK2/3\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n  +sssssssssdmydMMMMMMMMddddyssssssss+     Terminal: gnome-terminal\\n   /ssssssssssshdmNNNNmyNMMMMhssssss/      CPU: AMD Ryzen \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"5\"\n        }), \" 3600X \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"12\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" @ \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3\"\n        }), \".800GHz\\n    .ossssssssssssssssssdMMMNysssso.       GPU: NVIDIA GeForce RTX \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2070\"\n        }), \" SUPER\\n      -+sssssssssssssssssyyyssss+-         Memory: 5275MiB / 32041MiB\\n        \", _jsxs(_components.span, {\n          className: \"token variable\",\n          children: [_jsx(_components.span, {\n            className: \"token variable\",\n            children: \"`\"\n          }), \":+ssssssssssssssssss+:\", _jsx(_components.span, {\n            className: \"token variable\",\n            children: \"`\"\n          })]\n        }), \"\\n            .-/+oossssoo+/-.\\n\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"~ $ nvidia-smi\\nSat Jul  \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3\"\n        }), \" 00:54:15 \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"\\n+-----------------------------------------------------------------------------+\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \" NVIDIA-SMI \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"470.42\"\n        }), \".01    Driver Version: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"470.42\"\n        }), \".01    CUDA Version: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"11.4\"\n        }), \"     \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"-------------------------------+----------------------+----------------------+\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \" GPU  Name        Persistence-M\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \" Bus-Id        Disp.A \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \" Volatile Uncorr. ECC \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \" Fan  Temp  Perf  Pwr:Usage/Cap\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"         Memory-Usage \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \" GPU-Util  Compute M. \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"                               \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"                      \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"               MIG M. \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+=\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+=\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"   \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \"  NVIDIA GeForce \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), \".  On   \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \" 00000000:0A:00.0  On \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"                  N/A \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"52\"\n        }), \"%   36C    P8    23W / 215W \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"    535MiB /  7959MiB \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"     \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"13\"\n        }), \"%      Default \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"                               \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"                      \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"                  N/A \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n+-------------------------------+----------------------+----------------------+\\n\\n+-----------------------------------------------------------------------------+\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \" Processes:                                                                  \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"  GPU   GI   CI        PID   Type   Process name                  GPU Memory \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"        ID   ID                                                   Usage      \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"    \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \"   N/A  N/A      \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1133\"\n        }), \"      G   /usr/lib/xorg/Xorg                 53MiB \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"    \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \"   N/A  N/A      \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1878\"\n        }), \"      G   /usr/lib/xorg/Xorg                185MiB \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"    \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \"   N/A  N/A      \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2014\"\n        }), \"      G   /usr/bin/gnome-shell               50MiB \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"    \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \"   N/A  N/A      \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2472\"\n        }), \"      G   \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), \".AAAAAAAAA\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" --shared-files      139MiB \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"    \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \"   N/A  N/A      \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"6843\"\n        }), \"      G   \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), \".AAAAAAAAA\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" --shared-files       92MiB \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \"\\n+-----------------------------------------------------------------------------+\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"~ $ python --version\\nPython \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3.8\"\n        }), \".5\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"ココを見よう\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ココを見よう\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ココを見よう\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://www.tensorflow.org/install/source#gpu\",\n        children: \"ココ\"\n      }), \"にすべてが載っている．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"私の場合は，「もう最新にしちゃえ」と思い，最上段の構成に決めた．該当部の抜粋が以下．\"\n    }), \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Version\"\n          }), _jsx(_components.th, {\n            children: \"Python version\"\n          }), _jsx(_components.th, {\n            children: \"Compiler\"\n          }), _jsx(_components.th, {\n            children: \"Build tools\"\n          }), _jsx(_components.th, {\n            children: \"cuDNN\"\n          }), _jsx(_components.th, {\n            children: \"CUDA\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"tensorflow-2.5.0\"\n          }), _jsx(_components.td, {\n            children: \"3.6-3.9\"\n          }), _jsx(_components.td, {\n            children: \"GCC 7.3.1\"\n          }), _jsx(_components.td, {\n            children: \"Bazel 3.7.2\"\n          }), _jsx(_components.td, {\n            children: \"8.1\"\n          }), _jsx(_components.td, {\n            children: \"11.2\"\n          })]\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"とりあえず-pip\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#とりあえず-pip\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"とりあえず pip\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"2021/07/03 現在，\", _jsx(_components.code, {\n        children: \"tensroflow-gpu\"\n      }), \"は\", _jsx(_components.code, {\n        children: \"2.5.0\"\n      }), \"が最新版とのことなので，バージョン指定なしでインストールした．\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"install_tensorflow_gpu\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ pip \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"install\"\n        }), \" tensorflow-gpu\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"check_tensorflow_version\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"~ $ pip list \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"|\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"grep\"\n        }), \" tensorflow-gpu\\ntensorflow-gpu           \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2.5\"\n        }), \".0\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"cuda-をインストール\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#cuda-をインストール\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"CUDA をインストール\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://developer.nvidia.com/cuda-11.2.0-download-archive\",\n        children: \"このページ\"\n      }), \"に，自分の環境に合うようボタンをクリックしていく(私の環境で選択済みのものが\", _jsx(_components.a, {\n        href: \"https://developer.nvidia.com/cuda-11.2.0-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=2004&target_type=deblocal\",\n        children: \"こちら\"\n      }), \")．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Installer Type\"\n      }), \"については，好きなものを選ぶとよい．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ボタンの下にあるコマンドを順番に実行していくとインストールが完了する．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"cudnn-をインストール\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#cudnn-をインストール\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"cuDNN をインストール\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"nvidia developer program に登録しなければダウンロード出来ない．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://developer.nvidia.com/rdp/cudnn-download\",\n        children: \"こちら\"\n      }), \"からダウンロードできる．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"まず，サインインし，\", _jsx(_components.code, {\n        children: \"I Agree To the Terms of the cuDNN Software License Agreement\"\n      }), \"にチェックを入れてライセンスに同意する．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"次に，今回は最新でない cuDNN をインストールするので，\", _jsx(_components.code, {\n        children: \"Archived cuDNN Releases\"\n      }), \"をクリックし，アーカイブされた cuDNN を見る(クリックしたものが\", _jsx(_components.a, {\n        href: \"https://developer.nvidia.com/rdp/cudnn-archive\",\n        children: \"こちら\"\n      }), \")．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Download cuDNN v8.1.1 (Feburary 26th, 2021), for CUDA 11.0,11.1 and 11.2\"\n      }), \"を見つけてクリックし，以下２つをダウンロードする．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"cuDNN Runtime Library for Ubuntu20.04 x86_64 (Deb)\\ncuDNN Developer Library for Ubuntu20.04 x86_64 (Deb)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そして，ターミナル上で以下を実行．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"install_cudnn\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"~ $ \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"cd\"\n        }), \" Download\\n~/Download $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sudo\"\n        }), \" dpkg --install libcudnn8_8.1.1.33-1+cuda11.2_amd64.deb\\n~/Download $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sudo\"\n        }), \" dpkg --install libcudnn8-dev_8.1.1.33-1+cuda11.2_amd64.deb\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"gpu-チェック\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#gpu-チェック\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"GPU チェック\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"check_tensorflow_gpu\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"~ $ python\\nPython \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3.8\"\n        }), \".5 \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"default, May \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"27\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \", \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"13\"\n        }), \":30:53\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"GCC \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"9.3\"\n        }), \".0\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" on linux\\nType \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"help\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"copyright\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"credits\\\"\"\n        }), \" or \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"license\\\"\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"more\"\n        }), \" information.\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"import\"\n        }), \" tensorflow as tf\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:51.436038: I tensorflow/stream_executor/platform/default/dso_loader.cc:53\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Successfully opened dynamic library libcudart.so.11.0\\n\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), \"tf.config.list_physical_devices\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'GPU'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.140152: I tensorflow/stream_executor/platform/default/dso_loader.cc:53\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Successfully opened dynamic library libcuda.so.1\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.178630: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" successful NUMA \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"node\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"read\"\n        }), \" from SysFS had negative value \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"-1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \", but there must be at least one NUMA node, so returning NUMA \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"node\"\n        }), \" zero\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.179008: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1733\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Found device \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \" with properties:\\npciBusID: 0000:0a:00.0 name: NVIDIA GeForce RTX \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2070\"\n        }), \" SUPER computeCapability: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"7.5\"\n        }), \"\\ncoreClock: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \".77GHz coreCount: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"40\"\n        }), \" deviceMemorySize: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"7\"\n        }), \".77GiB deviceMemoryBandwidth: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"417\"\n        }), \".29GiB/s\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.179028: I tensorflow/stream_executor/platform/default/dso_loader.cc:53\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Successfully opened dynamic library libcudart.so.11.0\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.181244: I tensorflow/stream_executor/platform/default/dso_loader.cc:53\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Successfully opened dynamic library libcublas.so.11\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.181271: I tensorflow/stream_executor/platform/default/dso_loader.cc:53\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Successfully opened dynamic library libcublasLt.so.11\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.182348: I tensorflow/stream_executor/platform/default/dso_loader.cc:53\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Successfully opened dynamic library libcufft.so.10\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.182474: I tensorflow/stream_executor/platform/default/dso_loader.cc:53\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Successfully opened dynamic library libcurand.so.10\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.182747: I tensorflow/stream_executor/platform/default/dso_loader.cc:53\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Successfully opened dynamic library libcusolver.so.11\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.183209: I tensorflow/stream_executor/platform/default/dso_loader.cc:53\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Successfully opened dynamic library libcusparse.so.11\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.183292: I tensorflow/stream_executor/platform/default/dso_loader.cc:53\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Successfully opened dynamic library libcudnn.so.8\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.183367: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" successful NUMA \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"node\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"read\"\n        }), \" from SysFS had negative value \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"-1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \", but there must be at least one NUMA node, so returning NUMA \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"node\"\n        }), \" zero\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.183750: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" successful NUMA \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"node\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"read\"\n        }), \" from SysFS had negative value \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"-1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \", but there must be at least one NUMA node, so returning NUMA \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"node\"\n        }), \" zero\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2021\"\n        }), \"-07-03 01:22:57.184083: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1871\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" Adding visible gpu devices: \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"PhysicalDevice\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"name\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'/physical_device:GPU:0'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"device_type\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'GPU'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"エラーで困っている人\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#エラーで困っている人\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"エラーで困っている人\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"何かをする前にまずは，以下を実行することを勧める．\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"fix_bugs\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"reboot\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"環境構築はやはり難しいですね．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.tensorflow.org/install/source#gpu\",\n          children: \"https://www.tensorflow.org/install/source#gpu\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"tensorflow-gpuをubuntu2004にセットアップする方法","date":"2021-07-03T00:46:15","description":"依存関係の確認方法等も記載します","tags":["ubuntu","tensorflow","gpu","cuda"]}},"__N_SSG":true}