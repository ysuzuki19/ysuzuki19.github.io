{"pageProps":{"toc":[{"content":"目次","slug":"目次","lvl":3,"i":0},{"content":"はじめに","slug":"はじめに","lvl":2,"i":1},{"content":"記載対象","slug":"記載対象","lvl":3,"i":2},{"content":"コード","slug":"コード","lvl":2,"i":3},{"content":"src/types.rs","slug":"srctypesrs","lvl":3,"i":4},{"content":"src/error.rs","slug":"srcerrorrs","lvl":3,"i":5},{"content":"おわりに","slug":"おわりに","lvl":2,"i":6},{"content":"参考","slug":"参考","lvl":2,"i":7}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h3, {\n      id: \"目次\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#目次\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"目次\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"0\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-example-kvs-0-overview\",\n          children: \"概要\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"型定義など\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-example-kvs-2-handler-impl\",\n          children: \"handler定義\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-example-kvs-3-query-impl\",\n          children: \"Query定義\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-example-kvs-4-kvs-server-impl\",\n          children: \"KvsServer実装\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/post/rust-example-kvs-5-kvs-main-usage\",\n          children: \"main&使ってみる\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここでは、\", _jsx(_components.code, {\n        children: \"thiserror\"\n      }), \"を用いた多様なエラー型の\", _jsx(_components.code, {\n        children: \"?\"\n      }), \"を用いたハンドリングを含んでいる。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"記載対象\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#記載対象\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"記載対象\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"プロジェクト全体にまたがって利用する型定義などを記載する\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"コード\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コード\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コード\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"srctypesrs\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#srctypesrs\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"src/types.rs\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Store\"\n      }), \"という名前でKVSのデータ保存対象の型を型エイリアスとして持つこととした。これによって、データストアの型をパッと見でわかるコード配置の実現、開発時の手数削減、型の明示性を目指した。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"実際には現在の規模のコードでは型エイリアスにとどめているが、プロジェクトの規模増大やメソッドの増加に伴って正式な型として実装する基準を持っておくと良いと考えられる。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"今回型エイリアスにしたのは、メソッドによる処理の共通化の余地がなかったため決定した。\\n仮に値取得や書込のバリエーションが増える場合は、Storeに対するメソッドとして共通化のため、型エイリアスではなく正式に構造体とすることが望ましい。\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/types.rs\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"type\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token type-definition class-name\",\n          children: \"Store\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"std\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          }), \"collections\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"HashMap\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"srcerrorrs\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#srcerrorrs\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"src/error.rs\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"毎度お馴染みの\", _jsx(_components.code, {\n        children: \"thiserror\"\n      }), \"を使った、多様なエラーの楽なハンドリングを定義しておく。未実装エラーへの対処が必要になるたびにこのenumに新たなバリアントを追加する形で利用する。そのため、プロジェクト内の他のモジュールよりも上位の、 \", _jsx(_components.code, {\n        children: \"main.rs\"\n      }), \"と同列に並べるものとした。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ここでは、レスポンスに渡すメッセージをバリアントに含めてもいる。\\n仮に内部実装とレスポンスを分離したくなれば、別のenumとして定義することも視野に入る。\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"src/error.rs\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-rust\",\n      children: _jsxs(_components.code, {\n        className: \"language-rust\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"use\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"std\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), \"io\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"use\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"thiserror\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Error\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"type\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token type-definition class-name\",\n          children: \"KvsResult\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"T\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Result\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"T\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"KvsError\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[derive(Error, Debug)]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"pub\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"enum\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token type-definition class-name\",\n          children: \"KvsError\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[error(\", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"stream error {0:?}\\\"\"\n          }), \")]\"]\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"StreamError\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[from]\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"io\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"Error\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\n    \", _jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[error(\", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"invalid utf8 string\\\"\"\n          }), \")]\"]\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"InvalidUtf8String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token attribute attr-name\",\n          children: \"#[from]\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token namespace\",\n          children: [\"std\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          }), \"string\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"::\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"FromUtf8Error\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\n    \", _jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[error(\", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"stream disconnected\\\"\"\n          }), \")]\"]\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"StreamDisconnected\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\n    \", _jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[error(\", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"key not found: {0:?}\\\"\"\n          }), \")]\"]\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"KeyNotFound\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\n    \", _jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[error(\", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"Invalid Method Name: {0:?}\\\"\"\n          }), \")]\"]\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"InvalidMethodName\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"String\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\n    \", _jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[error(\", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"must to have space: <method> <key> <...args>\\\"\"\n          }), \")]\"]\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"InvalidQueryFormat\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\n    \", _jsxs(_components.span, {\n          className: \"token attribute attr-name\",\n          children: [\"#[error(\", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"method must to have {0:?} payloads\\\"\"\n          }), \")]\"]\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token class-name\",\n          children: \"InvalidPayloadSize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"usize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"/post/rust-example-kvs-0-overview#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\",\n        children: \"0.概要#おわりに\"\n      }), \"に集約します。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"/post/rust-example-kvs-0-overview#%E5%8F%82%E8%80%83\",\n        children: \"0.概要#参考\"\n      }), \"に集約します。\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Rustで簡単なKVSを実装してみた ~1. 型定義など~","date":"2023-11-04T16:00:00","description":"プロジェクト全体において利用する型定義など","tags":["rust","example","server","thiserror","rust-example-kvs"]}},"__N_SSG":true}