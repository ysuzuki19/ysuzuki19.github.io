{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"手順","slug":"手順","lvl":2,"i":1},{"content":"master の pull","slug":"master-の-pull","lvl":3,"i":2},{"content":"log の確認","slug":"log-の確認","lvl":3,"i":3},{"content":"現在の変更がない確認","slug":"現在の変更がない確認","lvl":3,"i":4},{"content":"rebase の開始","slug":"rebase-の開始","lvl":3,"i":5},{"content":"開かれたファイルを確認","slug":"開かれたファイルを確認","lvl":3,"i":6},{"content":"ファイルに変更を加える","slug":"ファイルに変更を加える","lvl":2,"i":7},{"content":"コミットを変更","slug":"コミットを変更","lvl":2,"i":8},{"content":"プッシュ","slug":"プッシュ","lvl":2,"i":9},{"content":"nano を使わない方","slug":"nano-を使わない方","lvl":2,"i":10}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"git はあまり使ったことがないので、また同じことをするためにメモを残す。\\nコードレビュー後に変更履歴をクリーンする作業\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"手順\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#手順\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"手順\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"master-の-pull\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#master-の-pull\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"master の pull\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"無事にマージされるためには、master の最新版にマージ可能な状態にする必要がある。（状況によって必要ない可能性位があります）\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" fetch\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" merge master\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"log-の確認\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#log-の確認\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"log の確認\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"まずは、どこまで遡るのか知らないといけない。普通に\", _jsx(_components.code, {\n        children: \"git log\"\n      }), \"してもよいが、こちらのほうが見やすいのでおすすめ。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" log --pretty\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"onel d, drop \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"commit\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" remove commite\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"この時点ではおそらく、以下のようになっているはず。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token number\",\n          children: \"4444444444444444444444444444444444444444\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"HEAD -\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" my_branch, origin/my_branch, master\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" fix memory leakage\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3333333333333333333333333333333333333333\"\n        }), \" fix typo\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2222222222222222222222222222222222222222\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), \" my_feature\\n\", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1111111111111111111111111111111111111111\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"origin/master, origin/HEAD\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" Merge pull request \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"#xxxx\"\n        }), \"\\n0000000000000000000000000000000000000000 Merge pull request \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"#xxxx\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), \".\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"この履歴では、\", _jsx(_components.code, {\n        children: \"11111\"\n      }), \"に対して\", _jsx(_components.code, {\n        children: \"11111~44444\"\n      }), \"を\", _jsx(_components.code, {\n        children: \"22222\"\n      }), \"の名前でマージしてほしい。\\nその時、この状態でマージするとログが汚れてしまう。\\nここで、\", _jsx(_components.code, {\n        children: \"33333\"\n      }), \"と\", _jsx(_components.code, {\n        children: \"44444\"\n      }), \"を\", _jsx(_components.code, {\n        children: \"22222\"\n      }), \"にまとめたい。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"現在の変更がない確認\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#現在の変更がない確認\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"現在の変更がない確認\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"最新ログから変更があると\", _jsx(_components.code, {\n        children: \"rebase\"\n      }), \"できない。まずはログが最新の状態になっているかどうか確認。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" status\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"rebase-の開始\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#rebase-の開始\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"rebase の開始\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここでついに\", _jsx(_components.code, {\n        children: \"rebase\"\n      }), \"をする。\\nこの時、消したいログの一つ前(\", _jsx(_components.code, {\n        children: \"11111\"\n      }), \")を選択するということに注意が必要。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" rebase -i \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1111111111111111111111111111111111111111\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"開かれたファイルを確認\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#開かれたファイルを確認\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"開かれたファイルを確認\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"上記コマンドによって、以下のファイルが開かれる。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"pick \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2222222\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), \" my_feature\\npick \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3333333\"\n        }), \" fix typo\\npick \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"4444444\"\n        }), \" fix memory leakage\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# Rebase 98c7b63..5e62af2 onto 89bd499 (7 commands)\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"#\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# Commands:\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# p, pick <commit> = use commit\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# r, reword <commit> = use commit, but edit the commit message\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# e, edit <commit> = use commit, but stop for amending\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# s, squash <commit> = use commit, but meld into previous commit\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# f, fixup <commit> = like \\\"squash\\\", but discard this commit's log message\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# x, exec <command> = run command (the rest of the line) using shell\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# b, break = stop here (continue rebase later with 'git rebase --continue')\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# d, drop <commit> = remove commit\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# l, label <label> = label current HEAD with a name\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# t, reset <label> = reset HEAD to a label\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# .       create a merge commit using the original merge commit's\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# .       message (or the oneline, if no original merge commit was\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# .       specified). Use -c <commit> to reword the commit message.\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"#\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# These lines can be re-ordered; they are executed from top to bottom.\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"#\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# If you remove a line here THAT COMMIT WILL BE LOST.\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"#\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# However, if you remove everything, the rebase will be aborted.\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"#\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# Note that empty commits are commented out\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"ファイルに変更を加える\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ファイルに変更を加える\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ファイルに変更を加える\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"33333\"\n      }), \",\", _jsx(_components.code, {\n        children: \"44444\"\n      }), \"を\", _jsx(_components.code, {\n        children: \"22222\"\n      }), \"にまとめるので、以下のようにし、保存。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"pick \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2222222\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), \" my_feature\\nsquash \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3333333\"\n        }), \" fix typo\\nsquash \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"4444444\"\n        }), \" fix memory leakage\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"コミットを変更\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コミットを変更\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コミットを変更\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ここまで来ると、コミットログを変更する作業が必要になる。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# This is a combination of 3 commits.\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# This is the 1st commit message:\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), \" my_feature\\n\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), \".\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"プッシュ\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#プッシュ\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"プッシュ\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" push --force-with-lease origin my_feature\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"nano-を使わない方\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#nano-を使わない方\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"nano を使わない方\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"私は俄然 Vim 派で、\", _jsx(_components.code, {\n        children: \"git rebase\"\n      }), \"で nano が開かれてしまったことが悲しかった。\\nnano は普段から使わないし、現状では使う予定がないので、消してしまった。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sudo\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"apt\"\n        }), \" purge \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"nano\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"これで、\", _jsx(_components.code, {\n        children: \"git rebase\"\n      }), \"でのエディタが Vim になったので一件落着。\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"コードレビュー後のgit rebaseメモ","date":"2020-11-01T02:10:02+09:00","description":"コードレビューを受けた後の作業のメモ書き。","tags":["git","rebase","command"]}},"__N_SSG":true}