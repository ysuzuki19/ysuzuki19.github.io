{"pageProps":{"toc":[{"content":"実行環境","slug":"実行環境","lvl":2,"i":0},{"content":"アイデア","slug":"アイデア","lvl":2,"i":1},{"content":"作ったプロジェクト","slug":"作ったプロジェクト","lvl":2,"i":2},{"content":"準備","slug":"準備","lvl":2,"i":3},{"content":"1. react プロジェクト作成","slug":"1-react-プロジェクト作成","lvl":3,"i":4},{"content":"2. firebase の初期設定","slug":"2-firebase-の初期設定","lvl":3,"i":5},{"content":"3. 設定・選択されている Projects を確認","slug":"3-設定・選択されている-projects-を確認","lvl":3,"i":6},{"content":"4. 別の Project を追加する","slug":"4-別の-project-を追加する","lvl":3,"i":7},{"content":"5. Projects を確認","slug":"5-projects-を確認","lvl":3,"i":8},{"content":"6. Project の切替・確認","slug":"6-project-の切替・確認","lvl":3,"i":9},{"content":"7. ステージング","slug":"7-ステージング","lvl":3,"i":10},{"content":"8. デプロイ確認するためのツールをインストール(optional)","slug":"8-デプロイ確認するためのツールをインストールoptional","lvl":3,"i":11},{"content":"9. npm scripts の設定","slug":"9-npm-scripts-の設定","lvl":3,"i":12},{"content":"10. 設定完了確認","slug":"10-設定完了確認","lvl":3,"i":13},{"content":"おわりに","slug":"おわりに","lvl":2,"i":14}],"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"firebase で開発する際に，ステージング環境がよくわからず，ぶっつけ本番でデプロイするという綱渡りのようなことをこれまでしてきた．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"特に誰が見てるわけでもなさそうなので構わないのだが，あまりクールじゃないので，ステージング環境(staging env)と本番環境(production env)をそれぞれ別の firebase プロジェクトにし，コマンドによってステージングとデプロイを使い分けられる設定をした．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これでだいぶ QoL 上がりそう．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"少なくとも，心がひんやりすることは無くなりそうだ．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"実行環境\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#実行環境\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"実行環境\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"Ubuntu 20.04 LTS\\nnpm\\nfirebase\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"今回は，\", _jsx(_components.code, {\n        children: \"create-react-app\"\n      }), \"で作ったままの状態の react アプリを使うことにする．\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"アイデア\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#アイデア\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"アイデア\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"firebase はプロジェクトをいくつも作ることができるので，一つの作りたいアプリに対して複数のプロジェクトを作って，それぞれを本番環境およびステージング環境として運用しようと思う．\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ここでは，ステージング環境にデプロイ(?)することをステージングと，本番環境へデプロイすることを単にデプロイと呼ぶことにする．\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"作ったプロジェクト\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#作ったプロジェクト\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"作ったプロジェクト\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"今回は，以下２つのプロジェクトを Firebase コンソール上で作成した．\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"firenv-stage\"\n        }), \": ステージング環境\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"firenv-prod\"\n        }), \" : 本番環境\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"準備\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#準備\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"準備\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"1-react-プロジェクト作成\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#1-react-プロジェクト作成\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"1. react プロジェクト作成\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"$ npx create-react-app firebase-switch-prod-stage --template typescript\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"2-firebase-の初期設定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-firebase-の初期設定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2. firebase の初期設定\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"まずは，firebase の初期設定をする．ここで，project を選択するが，安全のためステージング環境を選択してほしい．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ firebase init\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# 1. \\\"Hosting: ...\\\"のところでスペースを押してEnter!\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# 2. \\\"What do you ...?\\\" にはbuildと答える\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# 3. \\\"Configure as a single-page app?\\\" にはyと答える\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# 4. \\\"Set up ...?\\\" にはとりあえずNと答える(そのままEnter押してもいい)\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# 5. \\\"File ... Overwrite?\\\" はNと答える(そのままEnter押してもいい)\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# 6. ステージング環境を指定してEnter(私の場合は\\\"firenv-stage\\\")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"3-設定選択されている-projects-を確認\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#3-設定選択されている-projects-を確認\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"3. 設定・選択されている Projects を確認\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下のコマンドの結果を確認する．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ firebase use\\n\\n\\nActive Project: firebase-switch-prod-stage\\n\\nProject aliases \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" /home/\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"username\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \"/path/to/firebase-switch-prod-stage:\\n\\n* default \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"firenv-stage\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\nRun firebase use --add to define a new project alias.\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これは，現在のディレクトリ(?)で設定されている Project 名および，現在選択されているプロジェクトを教えてくれている．\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"4-別の-project-を追加する\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#4-別の-project-を追加する\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"4. 別の Project を追加する\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"firebase が他の Project を使えるように追加する．ここで，alias をつけることをおすすめする(間違えちゃうからね)．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"$ firebase use --add\\n# 選択 : \\\"firenv-prod\\\"(自分でつけた本番環境Project名)\\n# alias: \\\"production\\\"\\n\\n$ firebase use --add\\n# 選択 : \\\"firenv-stage\\\"(自分でつけたステージング環境Project名)\\n# alias: \\\"staging\\\"\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"後者のステージング環境の追加について，本当は無くても問題ないが，\", _jsx(_components.code, {\n        children: \"default\"\n      }), \"とは別に alias がついている方が見分けやすいので追加した．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"5-projects-を確認\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#5-projects-を確認\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"5. Projects を確認\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"firebase が使える Projects を確認する\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ firebase use\\n\\nActive Project: staging \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"firenv-stage\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\nProject aliases \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" /home/\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"username\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \"/path/to/firebase-switch-prod-stage:\\n\\n* default \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"firenv-stage\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n  production \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"firenv-prod\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n* staging \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"firenv-stage\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\nRun firebase use --add to define a new project alias.\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"6-project-の切替確認\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#6-project-の切替確認\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"6. Project の切替・確認\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下のコマンドで Project を切替・確認することができる．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"$ firebase use default\\n$ firebase use\\n$ firebase use production\\n$ firebase use\\n$ firebase use staging\\n$ firebase use\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここで，最後のコマンドで\", _jsx(_components.code, {\n        children: \"default\"\n      }), \"および\", _jsx(_components.code, {\n        children: \"staging\"\n      }), \"が選択されていることを確認しておく．\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"7-ステージング\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#7-ステージング\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"7. ステージング\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下のコマンドで，ステージングできる．ここでは省略するがデプロイも同様の構文でエイリアスを書き換えると良い．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"$ firebase deploy -P staging\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ちなみに，コマンドからアプリをブラウザで起動するためには以下のコマンドが用意されている．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"$ firebase hosting:channel:open live -P staging\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"8-デプロイ確認するためのツールをインストールoptional\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#8-デプロイ確認するためのツールをインストールoptional\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"8. デプロイ確認するためのツールをインストール(optional)\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"間違えてデプロイ用コマンドを実行した時にキャンセルするチャンスを作るために以下のコマンドを使う．\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"install\"\n        }), \" --save-dev cli-confirm\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"9-npm-scripts-の設定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#9-npm-scripts-の設定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"9. npm scripts の設定\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"package.json\"\n      }), \"に該当部を追加する．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-json\",\n      children: _jsxs(_components.code, {\n        className: \"language-json\",\n        children: [\"  ... \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 省略\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"scripts\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"start\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"react-scripts start\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"build\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"react-scripts build\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"test\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"react-scripts test\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"eject\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"react-scripts eject\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"prestage\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"npm run build\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"                                                        \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 追加\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"stage\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"firebase deploy -P staging\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"                                              \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 追加\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"poststage\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"firebase hosting:channel:open live -P staging\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"                       \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 追加\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"predeploy\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"npm run build\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"                                                       \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 追加\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"deploy\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"cli-confirm \\\\\\\"Do you really deploy?\\\\\\\" && firebase deploy -P production\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 追加\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"postdeploy\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"firebase hosting:channel:open live -P production\\\"\"\n        }), \"                    \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 追加\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  ... \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 省略\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"devDependencies\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"cli-confirm\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"^1.0.1\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 自動追加\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"デプロイ時に(y/N)したくない人は\", _jsx(_components.code, {\n        children: \"\\\"deploy\\\":...\"\n      }), \"を\", _jsx(_components.code, {\n        children: \"\\\"deploy\\\": \\\"firebase deploy -P production\\\"\"\n      }), \"にする．\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"最後に，\", _jsx(_components.code, {\n        children: \".firebaserc\"\n      }), \"が以下のようになっていることを確認．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-json\",\n      children: _jsxs(_components.code, {\n        className: \"language-json\",\n        children: [_jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"projects\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"default\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"firenv-stage\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"production\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"firenv-prod\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"staging\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"firenv-stage\\\"\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"10-設定完了確認\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#10-設定完了確認\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"10. 設定完了確認\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), \" run stage\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# ここでステージング環境のページが開かれる\"\n        }), \"\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"npm\"\n        }), \" run deploy\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# デプロイしてよければ(y)，だめなら(Enter/n)と入力．\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# ここで本番環境のページが開かれる\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"最後まで読んでくれてありがとうございます．\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Projects はすべて削除するので見られませんが，リポジトリは\", _jsx(_components.a, {\n        href: \"https://github.com/ysuzuki19/firebase-switch-prod-stage\",\n        children: \"こちら\"\n      }), \"に置いておくので，困ったら参考にしてみてください．\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"確認はしてますが，バグがあったらごめんなさい(リポジトリに Issue や PRs 出してもらえると幸いです！)．\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"firebaseで本番環境とステージング環境を使い分けるnpm-scripts","date":"2021-05-10T22:55:39+09:00","description":"複数プロジェクト作ってデプロイ先を分けます","tags":["firebase","npm","npm-scripts","staging","test"]}},"__N_SSG":true}