{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"構造","slug":"構造","lvl":2,"i":1},{"content":"プロジェクト全体","slug":"プロジェクト全体","lvl":3,"i":2},{"content":"`.github`ディレクトリ","slug":"githubディレクトリ","lvl":3,"i":3},{"content":"`rust-cicd.yml`","slug":"rust-cicdyml","lvl":4,"i":4},{"content":"`rust-ci-pr.yml`","slug":"rust-ci-pryml","lvl":4,"i":5},{"content":"`rust-fmt-lint-build-test.yml`","slug":"rust-fmt-lint-build-testyml","lvl":4,"i":6},{"content":"ポイント解説","slug":"ポイント解説","lvl":2,"i":7},{"content":"バージョン管理の自動化","slug":"バージョン管理の自動化","lvl":3,"i":8},{"content":"重複publish実行の防止","slug":"重複publish実行の防止","lvl":3,"i":9},{"content":"CI/CDの分離","slug":"cicdの分離","lvl":3,"i":10},{"content":"再利用可能なワークフロー","slug":"再利用可能なワークフロー","lvl":3,"i":11},{"content":"必要な設定","slug":"必要な設定","lvl":2,"i":12},{"content":"GitHub Secrets","slug":"github-secrets","lvl":3,"i":13},{"content":"パッケージ名の変更","slug":"パッケージ名の変更","lvl":3,"i":14},{"content":"使用方法","slug":"使用方法","lvl":2,"i":15},{"content":"おわりに","slug":"おわりに","lvl":2,"i":16},{"content":"参考","slug":"参考","lvl":2,"i":17}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rustのcrateを公開する際に、利便性と柔軟性のバランスを取ったちょうどいいワークフローの設定をしてみたので、その内容と観点を記事に記す。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"前提として、個人用OSSのリポジトリを想定し、気軽にpublishできるようにすることを目指す。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"構造\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#構造\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"構造\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"プロジェクト全体\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#プロジェクト全体\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"プロジェクト全体\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"プロジェクトの全体像はこのような構造\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ tree \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \".\"\n        }), \" -L \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \".\"\n        }), \"\\n├── Cargo.lock\\n├── Cargo.toml\\n├── example\\n├── LICENSE\\n├── README.md\\n├── src\\n└── target\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"githubディレクトリ\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#githubディレクトリ\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.code, {\n        children: \".github\"\n      }), \"ディレクトリ\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ tree .github/\\n.github/\\n└── workflows\\n    ├── rust-cicd.yml                   \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# CI/CDのメインワークフロー\"\n        }), \"\\n    ├── rust-ci-pr.yml                  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# PR時のCI\"\n        }), \"\\n    └── rust-fmt-lint-build-test.yml    \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# 共通処理で、Rustのフォーマット、Lint、ビルド、テスト\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"rust-cicdyml\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#rust-cicdyml\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.code, {\n        children: \"rust-cicd.yml\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ciが完了したとき、\", _jsx(_components.code, {\n        children: \"Cargo.toml\"\n      }), \"の\", _jsx(_components.code, {\n        children: \"version\"\n      }), \"情報に基づいて、GitHubのリリースを作成し、crateをpublishする。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここで、サンプルとして \", _jsx(_components.code, {\n        children: \"localtrace\"\n      }), \"と入れているが、ここは適宜パッケージ名に沿わせて更新する。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-yml\",\n      children: _jsxs(_components.code, {\n        className: \"language-yml\",\n        children: [_jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Rust CI\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"push\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"branches\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'main'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"env\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"CARGO_TERM_COLOR\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" always\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"jobs\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"ci\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" ./.github/workflows/rust\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"fmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"lint\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"build\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"test.yml\\n\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"cd\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"runs-on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" ubuntu\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"latest\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"needs\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" ci\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"permissions\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"contents\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" write\\n\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"steps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" actions/checkout@v3\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Extract crate metadata\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"id\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" metadata\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token scalar string\",\n          children: \"\\n          PACKAGE=\\\"localtrace\\\"\\n          VERSION=$(cargo metadata --format-version=1 --no-deps | jq -r --arg name \\\"localtrace\\\" '.packages[] | select(.name == $name) | .version')\\n          echo \\\"version=$VERSION\\\" >> $GITHUB_OUTPUT\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Check tag\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"id\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" tag\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token scalar string\",\n          children: \"\\n          TAG=\\\"v${{ steps.metadata.outputs.version }}\\\"\\n          echo \\\"name=${TAG}\\\" >> $GITHUB_OUTPUT\\n          if git ls-remote --tags origin | grep -q \\\"refs/tags/${TAG}$\\\" >/dev/null 2>&1; then\\n            echo \\\"Tag ${TAG} already exists, skipping push.\\\"\\n            echo \\\"exists=true\\\" >> $GITHUB_OUTPUT\\n          else\\n            echo \\\"Tag ${TAG} does not exist, will create and push.\\\"\\n            echo \\\"exists=false\\\" >> $GITHUB_OUTPUT\\n          fi\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Push tag\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" steps.tag.outputs.exists == 'false'\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token scalar string\",\n          children: \"\\n          TAG=\\\"${{ steps.tag.outputs.name }}\\\"\\n          echo \\\"Pushing tag ${TAG}\\\"\\n          git tag \\\"${TAG}\\\"\\n          git push origin \\\"${TAG}\\\"\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Publish\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" steps.tag.outputs.exists == 'false'\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" cargo publish\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"env\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"CARGO_REGISTRY_TOKEN\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" $\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" secrets.CARGO_TOKEN \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"CIが完了したとき、\", _jsx(_components.code, {\n        children: \"Cargo.toml\"\n      }), \"の\", _jsx(_components.code, {\n        children: \"version\"\n      }), \"情報に基づいて、そのtagが存在するかをチェックし、存在する場合はそのバージョンがすでに公開されているものとしてpublish処理をスキップする。存在しない場合は、tagを作成してpublishを行う。誤ってpublishしようとしても\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"$ cargo publish\\n    Updating crates.io index\\nerror: crate localtrace@0.1.8 already exists on crates.io index\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"と、エラーを返してくれるので、誤ってtagを削除してしまった場合でも、tag作成後のpublishは期待通りに失敗してくれるし、以降はtagが存在するため正常処理になる。\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"rust-ci-pryml\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#rust-ci-pryml\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.code, {\n        children: \"rust-ci-pr.yml\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"main\"\n      }), \"向けのPRで、汎用的な部分(fmt,lint,build,test)のチェックを行う。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-yml\",\n      children: _jsxs(_components.code, {\n        className: \"language-yml\",\n        children: [_jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Rust CI\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"pull_request\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"branches\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'main'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"env\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"CARGO_TERM_COLOR\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" always\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"jobs\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"ci\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" ./.github/workflows/rust\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"fmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"lint\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"build\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"test.yml\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"rust-fmt-lint-build-testyml\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#rust-fmt-lint-build-testyml\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.code, {\n        children: \"rust-fmt-lint-build-test.yml\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rust向けの汎用的なCI。fmt, lint, build, testを行う。\\n他ワークフローから呼び出せるようにしておく。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-yml\",\n      children: _jsxs(_components.code, {\n        className: \"language-yml\",\n        children: [_jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Rust fmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" lint\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" build and test\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"workflow_call\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"jobs\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"ci\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"runs-on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" ubuntu\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"latest\\n\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"steps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" actions/checkout@v3\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Install Rust\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" dtolnay/rust\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"toolchain@stable\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"with\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"components\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" rustfmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" clippy\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Cache cargo dependencies\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" actions/cache@v3\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"with\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"path\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token scalar string\",\n          children: \"\\n            ~/.cargo/registry\\n            ~/.cargo/git\\n            target\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"key\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" $\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" runner.os \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"cargo\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"$\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" hashFiles('\", _jsx(_components.span, {\n          className: \"token important\",\n          children: \"**/Cargo.toml')\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Check Formatting\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" cargo fmt \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"check\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Check Linting\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" cargo clippy \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"all\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"targets \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"all\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"features \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"D warnings\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Build\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" cargo build \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"verbose\\n\\n      \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Test\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" cargo test \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"verbose\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"ポイント解説\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ポイント解説\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ポイント解説\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"バージョン管理の自動化\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#バージョン管理の自動化\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"バージョン管理の自動化\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"このワークフローの最大のメリットは、\", _jsx(_components.code, {\n        children: \"Cargo.toml\"\n      }), \"の\", _jsx(_components.code, {\n        children: \"version\"\n      }), \"フィールドを更新するだけで、自動的にGitHubリリースとcrates.ioへのpublishが実行される点である。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"個人開発におけるOSS公開では、手動でのリリース作業が煩雑になりがちな一方、常に自動デプロイされるよりも、明示的にリリースを行いたい場合が多いので、このようにマニフェスト更新による自動トリガーを実現した。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-toml\",\n      children: _jsxs(_components.code, {\n        className: \"language-toml\",\n        children: [_jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token table class-name\",\n          children: \"package\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token key property\",\n          children: \"name\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"localtrace\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token key property\",\n          children: \"version\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"0.1.0\\\"\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# ここを更新するだけ\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token key property\",\n          children: \"edition\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"2021\\\"\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"重複publish実行の防止\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#重複publish実行の防止\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"重複publish実行の防止\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Check tag\"\n      }), \"ステップでは、既に同じバージョンのタグが存在するかチェックし、重複したリリースを効率的にskipする。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"このチェック方式は、もうちょっと凝ってもいいかもしれない。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-yml\",\n      children: _jsxs(_components.code, {\n        className: \"language-yml\",\n        children: [\"if git ls\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"remote \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"tags origin \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), \" grep \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"q \\\"refs/tags/$\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"TAG\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"$\\\" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \">\"\n        }), \"/dev/null 2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token important\",\n          children: \"&1;\"\n        }), \" then\\necho \\\"Tag $\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"TAG\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" already exists\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" skipping push.\\\"\\necho \\\"exists=true\\\" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \">\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \">\"\n        }), \" $GITHUB_OUTPUT\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"cicdの分離\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#cicdの分離\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"CI/CDの分離\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"PRでは\", _jsx(_components.code, {\n        children: \"rust-ci-pr.yml\"\n      }), \"でテストまでみ実行し、mainブランチにマージされた際に\", _jsx(_components.code, {\n        children: \"rust-cicd.yml\"\n      }), \"でデプロイまで行う設計にしてある。これにより、開発フローが明確になり、権限的にもクリーンになる。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"再利用可能なワークフロー\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#再利用可能なワークフロー\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"再利用可能なワークフロー\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"rust-fmt-lint-build-test.yml\"\n      }), \"は\", _jsx(_components.code, {\n        children: \"workflow_call\"\n      }), \"イベントを使用して、他のワークフローから呼び出せるように設計されている。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これにより、コードの重複を避け、CIのステップを変更するときのメンテナンス性を向上させている。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"必要な設定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#必要な設定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"必要な設定\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"このワークフローを使用するために、以下の設定が必要となる。\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"github-secrets\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#github-secrets\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"GitHub Secrets\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"CARGO_TOKEN\"\n        }), \": crates.ioのAPIトークン\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"https://crates.io/settings/tokens\",\n              children: \"crates.io/settings/tokens\"\n            }), \"でアカウント設定からAPIトークンを生成\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"GitHubリポジトリの Settings > Secrets and variables > Actions で設定\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"パッケージ名の変更\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#パッケージ名の変更\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"パッケージ名の変更\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"現在のワークフローでは\", _jsx(_components.code, {\n        children: \"PACKAGE=\\\"localtrace\\\"\"\n      }), \"となっているため、自分のパッケージ名に変更する必要がある。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-yml\",\n      children: _jsxs(_components.code, {\n        className: \"language-yml\",\n        children: [\"PACKAGE=\\\"your\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"package\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"name\\\"  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# ここを変更\"\n        }), \"\\nVERSION=$(cargo metadata \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"format\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"version=1 \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"no\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"deps \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), \" jq \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"r \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"arg name \\\"your\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"package\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"name\\\" '.packages\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), \" select(.name == $name) \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), \" .version')\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"使用方法\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#使用方法\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"使用方法\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"プロジェクトをセットアップ\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"上記のワークフローファイルを\", _jsx(_components.code, {\n          children: \".github/workflows/\"\n        }), \"に配置\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"GitHub SecretsにCARGO_TOKENを設定\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"パッケージ名を自分のプロジェクトに合わせて変更\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Cargo.toml\"\n        }), \"のバージョンを更新してmainブランチにpush\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これだけで、自動的にテスト、タグ作成、リリース、crates.ioへのpublishが実行される。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"このワークフローにより、Rustのcrateの開発からリリースまでの一連の流れを自動化できます。個人プロジェクトやOSSの開発において、手動での作業を最小限に抑え、継続的なデプロイを実現した。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.github.com/ja/actions/how-tos/sharing-automations/reuse-workflows\",\n          children: \"https://docs.github.com/ja/actions/how-tos/sharing-automations/reuse-workflows\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"Rustのcrateを公開するリポジトリ向けのGitHub workflow","date":"2025-07-15T03:41:52","description":"自動テストやversion情報に基づいた自動publishを行います","tags":["rust","github","workflow","ci","cd","crate"]}},"__N_SSG":true}