{"pageProps":{"toc":[{"content":"はじめに","slug":"はじめに","lvl":2,"i":0},{"content":"ツール","slug":"ツール","lvl":2,"i":1},{"content":"ツールのセットアップ","slug":"ツールのセットアップ","lvl":3,"i":2},{"content":"コード上の設定","slug":"コード上の設定","lvl":3,"i":3},{"content":"テスト上の設定","slug":"テスト上の設定","lvl":3,"i":4},{"content":"ジェネレータの実行","slug":"ジェネレータの実行","lvl":3,"i":5},{"content":"実行結果","slug":"実行結果","lvl":3,"i":6},{"content":"おわりに","slug":"おわりに","lvl":2,"i":7},{"content":"参考","slug":"参考","lvl":2,"i":8}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"はじめに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#はじめに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"はじめに\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Goのドキュメントは、\", _jsx(_components.a, {\n        href: \"https://go.dev/blog/godoc\",\n        children: \"Godoc\"\n      }), \"を使って記述することで、OSSとして公開した時に \", _jsx(_components.a, {\n        href: \"https://pkg.go.dev\",\n        children: \"pkg.go.dev\"\n      }), \"に自動的に公開される。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Godocでは、\", _jsx(_components.code, {\n        children: \"func ExampleFoor()\"\n      }), \"のようなコードを書くことで、\", _jsx(_components.a, {\n        href: \"https://go.dev/blog/examples\",\n        children: \"ExampleをTestableに記述することができる\"\n      }), \"が、これは、ドキュメントに含める範囲が広くなってしまったり、アサーションがstdoutであることなど、なにかと制約が多かった。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"そこで、Testのの中にアノテーションコメントを入れ、そこから関数定義のGoDocCommentsに転記するツールを go generateで実行することで、Testの一部をExampleとして利用できるようにした。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"ツール\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ツール\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ツール\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"generatorは、\", _jsx(_components.code, {\n        children: \"github.com/ysuzuki19/robustruct/tree/main/cmd/gen/testdocgen\"\n      }), \"に配置した。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ジェネレータのREADMEは、\", _jsx(_components.a, {\n        href: \"https://github.com/ysuzuki19/robustruct/tree/main/cmd/gen/testdocgen#readme\",\n        children: \"こちら\"\n      }), \"に配置。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"導入のサンプルは、\", _jsx(_components.a, {\n        href: \"https://github.com/ysuzuki19/robustruct/tree/main/example/for_testdocgen\",\n        children: \"こちら\"\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"ツールのセットアップ\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ツールのセットアップ\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ツールのセットアップ\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Goのバージョンに合わせてツールを入れる。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"tools.go\"\n      }), \"を使うケースでは、以下のように記載する。\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"tools.go\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//go:build tools\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// +build tools\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"package\"\n        }), \" tools\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"_\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"github.com/ysuzuki19/robustruct/cmd/gen/testdocgen\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"$ go mod tidy\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"コード上の設定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コード上の設定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コード上の設定\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"コード内のどこかに（だいたい最上部か最下部？）に以下のコメントを追加する。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//go:generate go run github.com/ysuzuki19/robustruct/cmd/gen/testdocgen -file=$GOFILE\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"こんな感じで書く。\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"lib.go\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//go:generate go run github.com/ysuzuki19/robustruct/cmd/gen/testdocgen -file=$GOFILE\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"package\"\n        }), \" lib\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"type\"\n        }), \" User \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tName \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), \"\\n\\tAge  \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"NewUser\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"name \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" age \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"User \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"User\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tName\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\tAge\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"  age\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"u User\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"GetName\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" u\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Name\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"テスト上の設定\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#テスト上の設定\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"テスト上の設定\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"上の設定をしたコードに対して、\", _jsx(_components.code, {\n        children: \".go\"\n      }), \"を\", _jsx(_components.code, {\n        children: \"_test.go\"\n      }), \"としたテストファイルのみジェネレータの検出対象となる。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下がtestdocgenのための埋め込み用のコメント例。\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"lib_test.go\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"package\"\n        }), \" lib_test\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"testing\\\"\"\n        }), \"\\n\\n\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"github.com/stretchr/testify/require\\\"\"\n        }), \"\\n\\n\\t\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"example/for_testdocgen/lib\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"TestNewUser\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"t \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"testing\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"T\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\trequire \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" require\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"New\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// testdoc begin NewUser\"\n        }), \"\\n\\tu \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" lib\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"NewUser\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Alice\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"30\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\trequire\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Equal\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"lib\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"User\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tName\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Alice\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\tAge\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"30\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"u\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// testdoc end\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"TestGetName\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"t \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"testing\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"T\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\trequire \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" require\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"New\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// testdoc begin User.GetName\"\n        }), \"\\n\\tu \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" lib\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"NewUser\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Alice\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"30\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\trequire\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Equal\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Alice\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" u\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"GetName\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// testdoc end\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"// testdoc\"\n      }), \"から始まるコメントがツールの設定行となり、\", _jsx(_components.code, {\n        children: \"begin\"\n      }), \"/\", _jsx(_components.code, {\n        children: \"end\"\n      }), \"で囲まれた部分が、Exampleとして転記される。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"転記先は、\", _jsx(_components.code, {\n        children: \"begin\"\n      }), \"のあとに続けて、\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"FuncName\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"StructName.MethodName\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"のどちらかの形式を取る。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"転記先が見つからない場合は \", _jsx(_components.code, {\n        children: \"testdocgen\"\n      }), \"はエラー終了する。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"ジェネレータの実行\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ジェネレータの実行\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ジェネレータの実行\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ go generate ./\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"..\"\n        }), \".\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"実行結果\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#実行結果\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"実行結果\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"上のサンプルを実行すると、 \", _jsx(_components.code, {\n        children: \"lib.go\"\n      }), \"は以下のようになる。\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-code-title\",\n      children: \"lib.go\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//go:generate go run github.com/ysuzuki19/robustruct/cmd/gen/testdocgen -file=$GOFILE\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"package\"\n        }), \" lib\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"type\"\n        }), \" User \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tName \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), \"\\n\\tAge  \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// Example:\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//\\tu := lib.NewUser(\\\"Alice\\\", 30)\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//\\trequire.Equal(lib.User{\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//\\t\\tName: \\\"Alice\\\",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//\\t\\tAge:  30,\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//\\t}, *u)\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"NewUser\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"name \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" age \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"User \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \"User\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tName\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\\tAge\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"  age\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// Example:\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//\\tu := lib.NewUser(\\\"Alice\\\", 30)\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//\\trequire.Equal(\\\"Alice\\\", u.GetName())\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"u User\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"GetName\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" u\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Name\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"// Example:\"\n      }), \"が書かれていないときは、既存のコメントの下に追加され、\", _jsx(_components.code, {\n        children: \"// Example:\"\n      }), \"以降のコメントは、次の実行以降は自動で上書きされる。（手書きがあったとしてもそれは除去される）コメントがそもそもない場合は、\", _jsx(_components.code, {\n        children: \"// Example:\"\n      }), \"から追加される。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"おわりに\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おわりに\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おわりに\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"このツールを使うことで、Exampleの更新漏れ、特に、コンパイルエラーや実装との乖離のリスクを減らせるようになった（かもしれない）。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"参考\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参考\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参考\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"GodocのExampleをTestから転記するツールを作った","date":"2025-06-02T22:02:11+09:00","description":"Exampleの負債を減らすために、GodocのExampleをTestから転記するツールを作った","tags":["golang","oss","tool","generate"]}},"__N_SSG":true}