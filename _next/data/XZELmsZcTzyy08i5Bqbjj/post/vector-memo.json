{"pageProps":{"toc":[{"content":"vector とは","slug":"vector-とは","lvl":2,"i":0},{"content":"new/delete と比べるとどうか","slug":"newdelete-と比べるとどうか","lvl":2,"i":1},{"content":"私の考える vector の利点","slug":"私の考える-vector-の利点","lvl":2,"i":2},{"content":"私の考える vector の欠点","slug":"私の考える-vector-の欠点","lvl":2,"i":3},{"content":"欠点の理由について","slug":"欠点の理由について","lvl":2,"i":4},{"content":"使用方法","slug":"使用方法","lvl":2,"i":5},{"content":"インクルード","slug":"インクルード","lvl":3,"i":6},{"content":"宣言・初期化","slug":"宣言・初期化","lvl":3,"i":7},{"content":"1 次元配列","slug":"1-次元配列","lvl":4,"i":8},{"content":"2 次元配列","slug":"2-次元配列","lvl":4,"i":9},{"content":"3 次元以上の配列","slug":"3-次元以上の配列","lvl":4,"i":10},{"content":"要素へのアクセス","slug":"要素へのアクセス","lvl":3,"i":11},{"content":"1 次元配列","slug":"1-次元配列-1","lvl":4,"i":12},{"content":"シンプル","slug":"シンプル","lvl":5,"i":13},{"content":"2 次元配列","slug":"2-次元配列-1","lvl":4,"i":14},{"content":"要素数の確認","slug":"要素数の確認","lvl":3,"i":15},{"content":"1 次元配列","slug":"1-次元配列-2","lvl":4,"i":16},{"content":"2 次元配列","slug":"2-次元配列-2","lvl":4,"i":17},{"content":"2 次元配列の一部分","slug":"2-次元配列の一部分","lvl":5,"i":18},{"content":"要素数の変更","slug":"要素数の変更","lvl":3,"i":19},{"content":"1 次元配列","slug":"1-次元配列-3","lvl":4,"i":20},{"content":"2 次元配列","slug":"2-次元配列-3","lvl":4,"i":21},{"content":"2 次元配列の一部分","slug":"2-次元配列の一部分-1","lvl":5,"i":22},{"content":"2 次元配列の全体","slug":"2-次元配列の全体","lvl":5,"i":23},{"content":"末尾に要素を追加","slug":"末尾に要素を追加","lvl":3,"i":24},{"content":"配列のコピー","slug":"配列のコピー","lvl":3,"i":25},{"content":"関数の引数にする","slug":"関数の引数にする","lvl":3,"i":26},{"content":"値渡し・参照渡しについて","slug":"値渡し・参照渡しについて","lvl":4,"i":27},{"content":"関数の例","slug":"関数の例","lvl":4,"i":28},{"content":"配列の要素の総和を求める関数","slug":"配列の要素の総和を求める関数","lvl":5,"i":29},{"content":"値渡し（非推奨）","slug":"値渡し非推奨","lvl":6,"i":30},{"content":"参照渡し","slug":"参照渡し","lvl":6,"i":31},{"content":"配列の要素を標準出力する関数","slug":"配列の要素を標準出力する関数","lvl":4,"i":32},{"content":"関数の戻り値にする","slug":"関数の戻り値にする","lvl":4,"i":33},{"content":"ベクトルとスカラーの積","slug":"ベクトルとスカラーの積","lvl":5,"i":34},{"content":"std::algorithm によるソート","slug":"stdalgorithm-によるソート","lvl":4,"i":35},{"content":"指定要素の削除","slug":"指定要素の削除","lvl":4,"i":36},{"content":"おまけ","slug":"おまけ","lvl":3,"i":37},{"content":"at()関数の挙動の検証","slug":"at関数の挙動の検証","lvl":4,"i":38},{"content":"コマンドライン引数を便利にする","slug":"コマンドライン引数を便利にする","lvl":4,"i":39},{"content":"範囲 for 文の活用","slug":"範囲-for-文の活用","lvl":4,"i":40}],"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    h5: \"h5\",\n    h6: \"h6\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://en.cppreference.com/w/cpp/container/vector\",\n        children: \"C++リファレンス\"\n      }), \"や\", _jsx(_components.a, {\n        href: \"https://cpprefjp.github.io/reference/vector/vector.html\",\n        children: \"C++日本語リファレンス\"\n      }), \"で使い方が理解できる方にとってはあまり意味をなさない情報かもしれません。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"また、\", _jsx(_components.a, {\n        href: \"https://qiita.com/ysuzuki19/items/df872d91c9c89cc31aee\",\n        children: \"私の Qiita 上の vector 記事\"\n      }), \"のブラッシュアップバージョンとなっております。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"vector-とは\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#vector-とは\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"vector とは\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"動的配列のシーケンスコンテナの１つ。\\n機能は\", _jsx(_components.code, {\n        children: \"array\"\n      }), \"と似ているが、具体的な理由で選ぶ事ができない限りは\", _jsx(_components.code, {\n        children: \"vector\"\n      }), \"を使う方が無難と私は考えている。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"newdelete-と比べるとどうか\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#newdelete-と比べるとどうか\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"new/delete と比べるとどうか\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"new/delete\"\n      }), \"は、動的にメモリを確保/解放する C++の機能である。\\nきちんと使用すれば\", _jsx(_components.code, {\n        children: \"vector\"\n      }), \"よりも高速（なはず！）だが、具体的な理由が無い限り\", _jsx(_components.code, {\n        children: \"vector\"\n      }), \"を使う方が無難と私は考えている（二度目）。\\n理由として、\", _jsx(_components.code, {\n        children: \"new\"\n      }), \"で確保されたメモリは、変数のスコープが切れても\", _jsx(_components.code, {\n        children: \"delete\"\n      }), \"しない限りは解放されないことが挙げられる。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"私の考える-vector-の利点\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#私の考える-vector-の利点\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"私の考える vector の利点\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"v.size()\"\n        }), \"で要素数を確認できるため、関数に渡す時に要素数を別で送らなくてよい\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"v.size()\"\n        }), \"で for 文を扱う事で配列外参照を起こしづらい\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"algorithm\"\n        }), \"ライブラリを利用可能\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"#%E7%AF%84%E5%9B%B2for%E6%96%87%E3%81%AE%E6%B4%BB%E7%94%A8\",\n          children: \"範囲 for 文（range-based-for）\"\n        }), \"を利用可能\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"v.push_back(value)\"\n        }), \"で要素を追加できる\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"=\"\n        }), \"演算子で普通の代入のようにコピーできる\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"値渡しのように関数の引数にできる（参照渡しも可）\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"関数の戻り値にできる\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"erase\"\n        }), \"で指定した要素を削除できる\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"私の考える-vector-の欠点\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#私の考える-vector-の欠点\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"私の考える vector の欠点\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"vector\"\n      }), \"は非常に便利な反面、使い方を誤ると利点を欠点にしてしまう事があるので、注意が必要である。\\n欠点というよりも注意点と行った方が語弊がないかもしれない。\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"v.push_back(value)\"\n        }), \"で要素を追加できてしまう\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"=\"\n        }), \"演算子でコピーできてしまう\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"値渡しのように関数の引数にできてしまう\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"関数の戻り値にできてしまう\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"erase\"\n        }), \"で指定した要素を削除できてしまう\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"欠点の理由について\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#欠点の理由について\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"欠点の理由について\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"欠点に挙げた内容は、何故なのかはだんだんとわかってくるものである。\\nわからない間は思い思いに書くのも手かなと考えることもある（ただし、念頭に置くことは大切）。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"また、これらは使い方次第で毒にも薬にもなるため、一概に利点とも欠点とも明言することは困難だと考えている。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"実際に困った問題が発生するまでは深く気にしなくても良いかもしれませんが、気づいた時からは改めるべきである。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"使用方法\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#使用方法\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"使用方法\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"インクルード\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#インクルード\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"インクルード\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"vector\"\n      }), \"使用のために必要なライブラリは以下でインクルード可能。\\nまた、簡単のためコードサンプルには以下の変数を用いるものとする。\\n本記事内では、配列の要素は\", _jsx(_components.code, {\n        children: \"int\"\n      }), \"型で例をあげるが、実際に使う場合は\", _jsx(_components.code, {\n        children: \"int\"\n      }), \"を好きな型・クラスを置き換える事ができる。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsxs(_components.span, {\n          className: \"token macro property\",\n          children: [_jsx(_components.span, {\n            className: \"token directive-hash\",\n            children: \"#\"\n          }), _jsx(_components.span, {\n            className: \"token directive keyword\",\n            children: \"include\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"<vector>\"\n          })]\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"using\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"namespace\"\n        }), \" std\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"constexpr\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" n \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"100\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 配列の要素数を指す変数\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"constexpr\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" m \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"100\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 配列の要素数を指す変数2\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"constexpr\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" value \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 配列の初期値を指す変数\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"宣言初期化\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#宣言初期化\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"宣言・初期化\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"1-次元配列\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#1-次元配列\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"1 次元配列\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 空の配列\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"v\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 空の配列\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"v\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// n要素配列を値の代入なしで宣言（intだと0, boolだとfalseのように初期化される)\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"v\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// n要素配列を値`value`で宣言\"\n        }), \"\\n\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"double\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" vd\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// doubleの場合\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"string\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" vs\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// doubleの場合\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"myClass\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" vMyClass\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 自分で定義したクラスmyClassの場合\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"2-次元配列\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-次元配列\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2 次元配列\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"行列のような表現をする方法。言葉で表すとすると「vector を要素にもつ vector」と言える。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), \" vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 空の配列を0個持つ配列を宣言\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"vv\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 空の配列を0個持つ配列を宣言\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"vv\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 空の配列をn個持つ配列を宣言\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"vv\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token generic-function\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"vector\"\n          }), _jsxs(_components.span, {\n            className: \"token generic class-name\",\n            children: [_jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"int\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">\"\n            })]\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"m\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// m個の要素を持つ配列をn個持つ配列\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"vv\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token generic-function\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"vector\"\n          }), _jsxs(_components.span, {\n            className: \"token generic class-name\",\n            children: [_jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"int\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">\"\n            })]\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"m\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 値がvalueの要素をm個持つ配列をn個持つ配列\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"本来であれば\", _jsx(_components.code, {\n        children: \"vector\"\n      }), \"による多次元配列はお勧めではない。しかし、これに関しても気づいた時に修正していけば良いだろう。\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"3-次元以上の配列\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#3-次元以上の配列\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"3 次元以上の配列\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ほとんど使わないであろうが、「配列を持つ配列を持つ配列」を表現する事で使用可能。\\nここまでくると、工夫する事で次元を削減するなど、他の実装を考えた方が良いであろう。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" vvv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), \" vvv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"要素へのアクセス\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#要素へのアクセス\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"要素へのアクセス\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"vector\"\n      }), \"では、通常の配列と同様の書き方で要素へアクセスする事ができる。\\n初期化については省略する。\\nまた、\", _jsx(_components.code, {\n        children: \"vector\"\n      }), \"には、\", _jsx(_components.code, {\n        children: \"at()\"\n      }), \"関数という要素アクセサも準備されており、これは配列外参照を検知して例外を投げてくれる。安全性は増すが、「確実に配列内に存在するインデックスが配列内であるか確認する」というのはなんとも無駄な事であるため、使用するか否かは開発者が責任を持って判断する必要があるといえよう。\\n\", _jsx(_components.code, {\n        children: \"at()\"\n      }), \"関数によるプログラム実行時の挙動は、\", _jsx(_components.a, {\n        href: \"#at-%E9%96%A2%E6%95%B0%E3%81%AE%E6%8C%99%E5%8B%95%E3%81%AE%E6%A4%9C%E8%A8%BC\",\n        children: \"後述\"\n      }), \"する。\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"1-次元配列-1\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#1-次元配列-1\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"1 次元配列\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"配列のインデックス番号\", _jsx(_components.code, {\n        children: \"i\"\n      }), \"に\", _jsx(_components.code, {\n        children: \"value\"\n      }), \"を代入してそれを出力する例。\"]\n    }), \"\\n\", _jsxs(_components.h5, {\n      id: \"シンプル\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#シンプル\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"シンプル\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 代入\"\n        }), \"\\ncout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 出力\"\n        }), \"\\n\\nv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"at\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 配列外参照を検知して代入\"\n        }), \"\\ncout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"at\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 配列外参照を検知して出力\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"2-次元配列-1\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-次元配列-1\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2 次元配列\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"2 次元配列のインデックス番号\", _jsx(_components.code, {\n        children: \"i, j\"\n      }), \"に\", _jsx(_components.code, {\n        children: \"value\"\n      }), \"を代入してそれを出力する例。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 代入\"\n        }), \"\\ncout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 出力\"\n        }), \"\\n\\nv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"at\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"at\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 配列外参照を検知して代入\"\n        }), \"\\ncout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"at\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"at\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 配列外参照を検知して出力\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"要素数の確認\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#要素数の確認\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"要素数の確認\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"配列の要素数（配列長）を確認する事ができる。\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"1-次元配列-2\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#1-次元配列-2\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"1 次元配列\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"cout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 要素数nを出力\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"2-次元配列-2\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-次元配列-2\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2 次元配列\"]\n    }), \"\\n\", _jsxs(_components.h5, {\n      id: \"2-次元配列の一部分\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-次元配列の一部分\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2 次元配列の一部分\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"cout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 「配列をn個持つ配列」のnを出力\"\n        }), \"\\n\\ncout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 「2次元配列のインデックス番号iのn個の配列」のnを出力\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"要素数の変更\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#要素数の変更\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"要素数の変更\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"動的配列のシーケンスコンテナという名の通り、配列長を動的に（プログラム実行時に）変更する事ができる。\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"1-次元配列-3\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#1-次元配列-3\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"1 次元配列\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"resize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 要素数nの配列\"\n        }), \"\\nv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"resize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 要素数n、値valueの配列\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"2-次元配列-3\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-次元配列-3\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2 次元配列\"]\n    }), \"\\n\", _jsxs(_components.h5, {\n      id: \"2-次元配列の一部分-1\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-次元配列の一部分-1\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2 次元配列の一部分\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"resize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 2次元、「配列をn個持つ配列」\"\n        }), \"\\n\\nvv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"resize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 2次元、「2次元配列のインデックス番号iはn個の配列」\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h5, {\n      id: \"2-次元配列の全体\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-次元配列の全体\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2 次元配列の全体\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"resize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"size_t i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tvv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"resize\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// このforループによって、「n個の配列をn個持つ配列」\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"末尾に要素を追加\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#末尾に要素を追加\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"末尾に要素を追加\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"配列\", _jsx(_components.code, {\n        children: \"v\"\n      }), \"の末尾に「要素数を 1 つ増やしつつ値を追加」するためには、\", _jsx(_components.code, {\n        children: \"push_back(value)\"\n      }), \"を用いる。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"push_back\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"int, bool, double\"\n      }), \"等の基礎的なデータ型を用いる場合は、\", _jsx(_components.code, {\n        children: \"5, false, 0.5\"\n      }), \"のようにプログラム内に値を書き込む事ができるのだが、自身で作成したクラスを要素とする配列を\", _jsx(_components.code, {\n        children: \"vector<myClass>\"\n      }), \"のように扱っている場合は、\", _jsx(_components.code, {\n        children: \"emplace_back(value1, value2)\"\n      }), \"を用いる。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"この時、\", _jsx(_components.code, {\n        children: \"myClass\"\n      }), \"はコンストラクタ\", _jsx(_components.code, {\n        children: \"myClass(int value1, int value2)\"\n      }), \"を持っている必要がある。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"myClass\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" vMyClass\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// ここでは、myClassはint型を２つ持つクラスとする。\"\n        }), \"\\nvMyClass\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"push_back\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// このようにする事で、そのまま末尾に値を追加できる。\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"配列のコピー\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#配列のコピー\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"配列のコピー\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"体感的に一番わかりやすいのが\", _jsx(_components.code, {\n        children: \"=\"\n      }), \"演算子による代入\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"v1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" v2\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\nv2 \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" v1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"宣言直後にコピーする場合は、コピーコンストラクタを用いるのが可読性が高い。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"v1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\nvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"v2\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"v1\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"関数の引数にする\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#関数の引数にする\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"関数の引数にする\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"#%E7%A7%81%E3%81%AE%E8%80%83%E3%81%88%E3%82%8Bvector%E3%81%AE%E5%88%A9%E7%82%B9\",\n        children: \"利点\"\n      }), \"として、（簡単に）関数の引数にできる点がある。この時、関数側からも要素数を参照する事ができるので、配列の要素数等を別途引数にしなくても良い。\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"値渡し参照渡しについて\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#値渡し参照渡しについて\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"値渡し・参照渡しについて\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここが、\", _jsx(_components.a, {\n        href: \"#%E7%A7%81%E3%81%AE%E8%80%83%E3%81%88%E3%82%8Bvector%E3%81%AE%E6%AC%A0%E7%82%B9\",\n        children: \"欠点\"\n      }), \"として挙げた、関数の引数にできてしまう点に関係する。\\n値渡しは変数を丸ごとコピーしてしまうらしく、理由なしに値渡しを用いると、徒らに処理時間がかかってしまう。「関数で vector を使ってるんだけど処理がめちゃくちゃ遅い！！」という方は見直してみて欲しい。\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"関数の例\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#関数の例\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"関数の例\"]\n    }), \"\\n\", _jsxs(_components.h5, {\n      id: \"配列の要素の総和を求める関数\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#配列の要素の総和を求める関数\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"配列の要素の総和を求める関数\"]\n    }), \"\\n\", _jsxs(_components.h6, {\n      id: \"値渡し非推奨\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#値渡し非推奨\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"値渡し（非推奨）\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sumVector\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" sumValue \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"size_t i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tsumValue \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+=\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" sumValue\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h6, {\n      id: \"参照渡し\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#参照渡し\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"参照渡し\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"具体的な理由がない限りは、\", _jsx(_components.code, {\n        children: \"const&\"\n      }), \"を用いるの無難であると考える。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"const\"\n      }), \": 関数内で配列の要素の変更を許さない\\n=> （開発者が）望まない値の変更を抑制する\\n=> 関数内における変更を反映させたい場合はつけない\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"&\"\n      }), \": 参照渡し関数へ渡す時にコピーしない\\n=> 引数をコピーせずに扱うのでボトルネック（速度低下の原因）になりづらい\\n=> 関数内で配列を変更する事が可能\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sumVector\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" sumValue \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"size_t i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tsumValue \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+=\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" sumValue\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"配列の要素を標準出力する関数\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#配列の要素を標準出力する関数\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"配列の要素を標準出力する関数\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"値渡しに関しては省略する。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"view\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" cosnt\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"size_t i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tcout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\" \\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\tcout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"view\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), \" cosnt\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"size_t i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"size_t j\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" j\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" j\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\\tcout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"j\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\" \\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\t\\tcout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"関数の戻り値にする\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#関数の戻り値にする\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"関数の戻り値にする\"]\n    }), \"\\n\", _jsxs(_components.h5, {\n      id: \"ベクトルとスカラーの積\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#ベクトルとスカラーの積\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ベクトルとスカラーの積\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"scalarMultiplication\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"mul\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"size_t i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"mul\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"size\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tmul\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" mul\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"stdalgorithm-によるソート\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#stdalgorithm-によるソート\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"std::algorithm によるソート\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"#%E7%A7%81%E3%81%AE%E8%80%83%E3%81%88%E3%82%8Bvector%E3%81%AE%E5%88%A9%E7%82%B9\",\n        children: \"利点\"\n      }), \"として挙げた\", _jsx(_components.code, {\n        children: \"algorithm\"\n      }), \"ライブラリの活用について最もわかりやすい恩恵が、１行でソートができる事だと考えられる。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsx(_components.span, {\n          className: \"token function\",\n          children: \"sort\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"begin\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"end\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//昇順ソート\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"sort\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"begin\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"end\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token generic-function\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"greater\"\n          }), _jsxs(_components.span, {\n            className: \"token generic class-name\",\n            children: [_jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"int\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">\"\n            })]\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//降順ソート\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"指定要素の削除\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#指定要素の削除\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"指定要素の削除\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"erase()\"\n      }), \"によって任意の要素を削除する事ができる。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [\"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"erase\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"begin\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//先頭を削除\"\n        }), \"\\nv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"erase\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"end\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"//末尾を削除\"\n        }), \"\\nv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"erase\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"begin\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// インデックス番号iを削除\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"おまけ\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#おまけ\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"おまけ\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"at関数の挙動の検証\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#at関数の挙動の検証\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"at()関数の挙動の検証\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"これは\", _jsx(_components.code, {\n        children: \"[]\"\n      }), \"による配列外参照。プログラミングを学ぶ人が一度は引き起こすであろうエラー。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsxs(_components.span, {\n          className: \"token macro property\",\n          children: [_jsx(_components.span, {\n            className: \"token directive-hash\",\n            children: \"#\"\n          }), _jsx(_components.span, {\n            className: \"token directive keyword\",\n            children: \"include\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"<iostream>\"\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token macro property\",\n          children: [_jsx(_components.span, {\n            className: \"token directive-hash\",\n            children: \"#\"\n          }), _jsx(_components.span, {\n            className: \"token directive keyword\",\n            children: \"include\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"<vector>\"\n          })]\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"using\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"namespace\"\n        }), \" std\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"main\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"v\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"10\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"5\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 10は要素数(インデックス番号は0~9)、5は値\"\n        }), \"\\n\\tcout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"10\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"これを実行するとエラーは起こさない(配列外参照は未定義動作)。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"0\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"at()\"\n      }), \"関数による配列外参照。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsxs(_components.span, {\n          className: \"token macro property\",\n          children: [_jsx(_components.span, {\n            className: \"token directive-hash\",\n            children: \"#\"\n          }), _jsx(_components.span, {\n            className: \"token directive keyword\",\n            children: \"include\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"<iostream>\"\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token macro property\",\n          children: [_jsx(_components.span, {\n            className: \"token directive-hash\",\n            children: \"#\"\n          }), _jsx(_components.span, {\n            className: \"token directive keyword\",\n            children: \"include\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"<vector>\"\n          })]\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"using\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"namespace\"\n        }), \" std\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"main\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"v\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"10\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"5\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\tcout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"at\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"10\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"出力結果が以下で、vector が配列外参照を起こしているという事が実行時にコードを見る事なく判明する。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"libc++abi.dylib: terminating with uncaught exception of type std::out_of_range: vector\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"実際に、プログラムが通常終了しているにもかかわらず挙動がおかしい状況や何故かわからないがプログラムが想定通りの挙動をするというのは、開発中に多くの思考時間を奪われる原因となる。\\nそのため、不安があれば\", _jsx(_components.code, {\n        children: \"at()\"\n      }), \"関数を用いて開発してみるのも良いかなと感じる。\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"コマンドライン引数を便利にする\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#コマンドライン引数を便利にする\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"コマンドライン引数を便利にする\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"char\"\n      }), \"型は使い慣れていないため、\", _jsx(_components.code, {\n        children: \"string\"\n      }), \"にしたい。ここで以下の１行が非常に便利。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"これにより，コマンドライン引数が\", _jsx(_components.code, {\n        children: \"vector<string>\"\n      }), \"になってくれる．\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsxs(_components.span, {\n          className: \"token macro property\",\n          children: [_jsx(_components.span, {\n            className: \"token directive-hash\",\n            children: \"#\"\n          }), _jsx(_components.span, {\n            className: \"token directive keyword\",\n            children: \"include\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"<iostream>\"\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token macro property\",\n          children: [_jsx(_components.span, {\n            className: \"token directive-hash\",\n            children: \"#\"\n          }), _jsx(_components.span, {\n            className: \"token directive keyword\",\n            children: \"include\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"<vector>\"\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"token macro property\",\n          children: [_jsx(_components.span, {\n            className: \"token directive-hash\",\n            children: \"#\"\n          }), _jsx(_components.span, {\n            className: \"token directive keyword\",\n            children: \"include\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"<string>\"\n          })]\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"main\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), \" argc\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"char\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"argv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\tvector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"string\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"args\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"argv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" argv\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"+\"\n        }), \"argc\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// args[0]は実行ファイル名\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// args[1]は第一コマンドライン引数\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// args[2]は第一コマンドライン引数\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"この方法は、コマンドライン引数を活用するための応急処置としての印象である。\\nC++慣れている人は Boost とか使った方が良い。\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"範囲-for-文の活用\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#範囲-for-文の活用\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"範囲 for 文の活用\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"訳がわからない場合は使う必要がないのではと感じるが、慣れてくると重宝する。\\n先ほどの値渡しの例としてあげた\", _jsx(_components.code, {\n        children: \"view()\"\n      }), \"関数の for ループを範囲 for 文に書き換えてみる。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-cpp\",\n      children: _jsxs(_components.code, {\n        className: \"language-cpp\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"view\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" cosnt\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"auto\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" e \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\tcout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" e \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\" \\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\tcout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"view\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \"vector\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"int\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">>\"\n        }), \" cosnt\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"auto\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" v \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" vv\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"auto\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"&\"\n        }), \" e \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" v\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n\\t\\t\\tcout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" e \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\" \\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\t\\tcout \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<<\"\n        }), \" endl\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"range-based-for は、イテレータを元にループする。\", _jsx(_components.code, {\n        children: \"v.begin()\"\n      }), \"からイテレータ\", _jsx(_components.code, {\n        children: \"itr\"\n      }), \"を動かしていき、「\", _jsx(_components.code, {\n        children: \"itr\"\n      }), \"が\", _jsx(_components.code, {\n        children: \"v.end()\"\n      }), \"ではない間」ループする。\\nイテレータについては割愛する。また機会があれば実装を織り交ぜながら説明していけたらなと考えている。\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"scope":{"title":"C++のvectorの使い方","date":"2020-04-23T14:23:28+09:00","description":"TypeError:  gsap.default.timeline is not a function ..を解消する","tags":["cpp","memorandom","beginner"]}},"__N_SSG":true}